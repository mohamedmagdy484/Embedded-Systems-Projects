
Project_final.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00001e08  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000000a  00800060  00001e08  00001e9c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000010  0080006a  0080006a  00001ea6  2**0
                  ALLOC
  3 .stab         00000fc0  00000000  00000000  00001ea8  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      000008ae  00000000  00000000  00002e68  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_aranges 00000140  00000000  00000000  00003716  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_pubnames 00000170  00000000  00000000  00003856  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   00001c49  00000000  00000000  000039c6  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00000eeb  00000000  00000000  0000560f  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   00000dad  00000000  00000000  000064fa  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  00000160  00000000  00000000  000072a8  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    0000028d  00000000  00000000  00007408  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    000007ce  00000000  00000000  00007695  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00000050  00000000  00000000  00007e63  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 0a 0b 	jmp	0x1614	; 0x1614 <__vector_1>
       8:	0c 94 70 0b 	jmp	0x16e0	; 0x16e0 <__vector_2>
       c:	0c 94 3f 0c 	jmp	0x187e	; 0x187e <__vector_3>
      10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      1c:	0c 94 d8 0a 	jmp	0x15b0	; 0x15b0 <__vector_7>
      20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d8 e0       	ldi	r29, 0x08	; 8
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	10 e0       	ldi	r17, 0x00	; 0
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	e8 e0       	ldi	r30, 0x08	; 8
      68:	fe e1       	ldi	r31, 0x1E	; 30
      6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
      70:	aa 36       	cpi	r26, 0x6A	; 106
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>

00000076 <__do_clear_bss>:
      76:	10 e0       	ldi	r17, 0x00	; 0
      78:	aa e6       	ldi	r26, 0x6A	; 106
      7a:	b0 e0       	ldi	r27, 0x00	; 0
      7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
      7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
      80:	aa 37       	cpi	r26, 0x7A	; 122
      82:	b1 07       	cpc	r27, r17
      84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
      86:	0e 94 62 0c 	call	0x18c4	; 0x18c4 <main>
      8a:	0c 94 02 0f 	jmp	0x1e04	; 0x1e04 <_exit>

0000008e <__bad_interrupt>:
      8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <__fixunssfsi>:
      92:	ef 92       	push	r14
      94:	ff 92       	push	r15
      96:	0f 93       	push	r16
      98:	1f 93       	push	r17
      9a:	7b 01       	movw	r14, r22
      9c:	8c 01       	movw	r16, r24
      9e:	20 e0       	ldi	r18, 0x00	; 0
      a0:	30 e0       	ldi	r19, 0x00	; 0
      a2:	40 e0       	ldi	r20, 0x00	; 0
      a4:	5f e4       	ldi	r21, 0x4F	; 79
      a6:	0e 94 49 03 	call	0x692	; 0x692 <__gesf2>
      aa:	88 23       	and	r24, r24
      ac:	8c f0       	brlt	.+34     	; 0xd0 <__fixunssfsi+0x3e>
      ae:	c8 01       	movw	r24, r16
      b0:	b7 01       	movw	r22, r14
      b2:	20 e0       	ldi	r18, 0x00	; 0
      b4:	30 e0       	ldi	r19, 0x00	; 0
      b6:	40 e0       	ldi	r20, 0x00	; 0
      b8:	5f e4       	ldi	r21, 0x4F	; 79
      ba:	0e 94 c1 01 	call	0x382	; 0x382 <__subsf3>
      be:	0e 94 a9 03 	call	0x752	; 0x752 <__fixsfsi>
      c2:	9b 01       	movw	r18, r22
      c4:	ac 01       	movw	r20, r24
      c6:	20 50       	subi	r18, 0x00	; 0
      c8:	30 40       	sbci	r19, 0x00	; 0
      ca:	40 40       	sbci	r20, 0x00	; 0
      cc:	50 48       	sbci	r21, 0x80	; 128
      ce:	06 c0       	rjmp	.+12     	; 0xdc <__fixunssfsi+0x4a>
      d0:	c8 01       	movw	r24, r16
      d2:	b7 01       	movw	r22, r14
      d4:	0e 94 a9 03 	call	0x752	; 0x752 <__fixsfsi>
      d8:	9b 01       	movw	r18, r22
      da:	ac 01       	movw	r20, r24
      dc:	b9 01       	movw	r22, r18
      de:	ca 01       	movw	r24, r20
      e0:	1f 91       	pop	r17
      e2:	0f 91       	pop	r16
      e4:	ff 90       	pop	r15
      e6:	ef 90       	pop	r14
      e8:	08 95       	ret

000000ea <_fpadd_parts>:
      ea:	a0 e0       	ldi	r26, 0x00	; 0
      ec:	b0 e0       	ldi	r27, 0x00	; 0
      ee:	eb e7       	ldi	r30, 0x7B	; 123
      f0:	f0 e0       	ldi	r31, 0x00	; 0
      f2:	0c 94 cb 0e 	jmp	0x1d96	; 0x1d96 <__prologue_saves__>
      f6:	dc 01       	movw	r26, r24
      f8:	2b 01       	movw	r4, r22
      fa:	fa 01       	movw	r30, r20
      fc:	9c 91       	ld	r25, X
      fe:	92 30       	cpi	r25, 0x02	; 2
     100:	08 f4       	brcc	.+2      	; 0x104 <_fpadd_parts+0x1a>
     102:	39 c1       	rjmp	.+626    	; 0x376 <_fpadd_parts+0x28c>
     104:	eb 01       	movw	r28, r22
     106:	88 81       	ld	r24, Y
     108:	82 30       	cpi	r24, 0x02	; 2
     10a:	08 f4       	brcc	.+2      	; 0x10e <_fpadd_parts+0x24>
     10c:	33 c1       	rjmp	.+614    	; 0x374 <_fpadd_parts+0x28a>
     10e:	94 30       	cpi	r25, 0x04	; 4
     110:	69 f4       	brne	.+26     	; 0x12c <_fpadd_parts+0x42>
     112:	84 30       	cpi	r24, 0x04	; 4
     114:	09 f0       	breq	.+2      	; 0x118 <_fpadd_parts+0x2e>
     116:	2f c1       	rjmp	.+606    	; 0x376 <_fpadd_parts+0x28c>
     118:	11 96       	adiw	r26, 0x01	; 1
     11a:	9c 91       	ld	r25, X
     11c:	11 97       	sbiw	r26, 0x01	; 1
     11e:	89 81       	ldd	r24, Y+1	; 0x01
     120:	98 17       	cp	r25, r24
     122:	09 f4       	brne	.+2      	; 0x126 <_fpadd_parts+0x3c>
     124:	28 c1       	rjmp	.+592    	; 0x376 <_fpadd_parts+0x28c>
     126:	a0 e6       	ldi	r26, 0x60	; 96
     128:	b0 e0       	ldi	r27, 0x00	; 0
     12a:	25 c1       	rjmp	.+586    	; 0x376 <_fpadd_parts+0x28c>
     12c:	84 30       	cpi	r24, 0x04	; 4
     12e:	09 f4       	brne	.+2      	; 0x132 <_fpadd_parts+0x48>
     130:	21 c1       	rjmp	.+578    	; 0x374 <_fpadd_parts+0x28a>
     132:	82 30       	cpi	r24, 0x02	; 2
     134:	a9 f4       	brne	.+42     	; 0x160 <_fpadd_parts+0x76>
     136:	92 30       	cpi	r25, 0x02	; 2
     138:	09 f0       	breq	.+2      	; 0x13c <_fpadd_parts+0x52>
     13a:	1d c1       	rjmp	.+570    	; 0x376 <_fpadd_parts+0x28c>
     13c:	9a 01       	movw	r18, r20
     13e:	ad 01       	movw	r20, r26
     140:	88 e0       	ldi	r24, 0x08	; 8
     142:	ea 01       	movw	r28, r20
     144:	09 90       	ld	r0, Y+
     146:	ae 01       	movw	r20, r28
     148:	e9 01       	movw	r28, r18
     14a:	09 92       	st	Y+, r0
     14c:	9e 01       	movw	r18, r28
     14e:	81 50       	subi	r24, 0x01	; 1
     150:	c1 f7       	brne	.-16     	; 0x142 <_fpadd_parts+0x58>
     152:	e2 01       	movw	r28, r4
     154:	89 81       	ldd	r24, Y+1	; 0x01
     156:	11 96       	adiw	r26, 0x01	; 1
     158:	9c 91       	ld	r25, X
     15a:	89 23       	and	r24, r25
     15c:	81 83       	std	Z+1, r24	; 0x01
     15e:	08 c1       	rjmp	.+528    	; 0x370 <_fpadd_parts+0x286>
     160:	92 30       	cpi	r25, 0x02	; 2
     162:	09 f4       	brne	.+2      	; 0x166 <_fpadd_parts+0x7c>
     164:	07 c1       	rjmp	.+526    	; 0x374 <_fpadd_parts+0x28a>
     166:	12 96       	adiw	r26, 0x02	; 2
     168:	2d 90       	ld	r2, X+
     16a:	3c 90       	ld	r3, X
     16c:	13 97       	sbiw	r26, 0x03	; 3
     16e:	eb 01       	movw	r28, r22
     170:	8a 81       	ldd	r24, Y+2	; 0x02
     172:	9b 81       	ldd	r25, Y+3	; 0x03
     174:	14 96       	adiw	r26, 0x04	; 4
     176:	ad 90       	ld	r10, X+
     178:	bd 90       	ld	r11, X+
     17a:	cd 90       	ld	r12, X+
     17c:	dc 90       	ld	r13, X
     17e:	17 97       	sbiw	r26, 0x07	; 7
     180:	ec 80       	ldd	r14, Y+4	; 0x04
     182:	fd 80       	ldd	r15, Y+5	; 0x05
     184:	0e 81       	ldd	r16, Y+6	; 0x06
     186:	1f 81       	ldd	r17, Y+7	; 0x07
     188:	91 01       	movw	r18, r2
     18a:	28 1b       	sub	r18, r24
     18c:	39 0b       	sbc	r19, r25
     18e:	b9 01       	movw	r22, r18
     190:	37 ff       	sbrs	r19, 7
     192:	04 c0       	rjmp	.+8      	; 0x19c <_fpadd_parts+0xb2>
     194:	66 27       	eor	r22, r22
     196:	77 27       	eor	r23, r23
     198:	62 1b       	sub	r22, r18
     19a:	73 0b       	sbc	r23, r19
     19c:	60 32       	cpi	r22, 0x20	; 32
     19e:	71 05       	cpc	r23, r1
     1a0:	0c f0       	brlt	.+2      	; 0x1a4 <_fpadd_parts+0xba>
     1a2:	61 c0       	rjmp	.+194    	; 0x266 <_fpadd_parts+0x17c>
     1a4:	12 16       	cp	r1, r18
     1a6:	13 06       	cpc	r1, r19
     1a8:	6c f5       	brge	.+90     	; 0x204 <_fpadd_parts+0x11a>
     1aa:	37 01       	movw	r6, r14
     1ac:	48 01       	movw	r8, r16
     1ae:	06 2e       	mov	r0, r22
     1b0:	04 c0       	rjmp	.+8      	; 0x1ba <_fpadd_parts+0xd0>
     1b2:	96 94       	lsr	r9
     1b4:	87 94       	ror	r8
     1b6:	77 94       	ror	r7
     1b8:	67 94       	ror	r6
     1ba:	0a 94       	dec	r0
     1bc:	d2 f7       	brpl	.-12     	; 0x1b2 <_fpadd_parts+0xc8>
     1be:	21 e0       	ldi	r18, 0x01	; 1
     1c0:	30 e0       	ldi	r19, 0x00	; 0
     1c2:	40 e0       	ldi	r20, 0x00	; 0
     1c4:	50 e0       	ldi	r21, 0x00	; 0
     1c6:	04 c0       	rjmp	.+8      	; 0x1d0 <_fpadd_parts+0xe6>
     1c8:	22 0f       	add	r18, r18
     1ca:	33 1f       	adc	r19, r19
     1cc:	44 1f       	adc	r20, r20
     1ce:	55 1f       	adc	r21, r21
     1d0:	6a 95       	dec	r22
     1d2:	d2 f7       	brpl	.-12     	; 0x1c8 <_fpadd_parts+0xde>
     1d4:	21 50       	subi	r18, 0x01	; 1
     1d6:	30 40       	sbci	r19, 0x00	; 0
     1d8:	40 40       	sbci	r20, 0x00	; 0
     1da:	50 40       	sbci	r21, 0x00	; 0
     1dc:	2e 21       	and	r18, r14
     1de:	3f 21       	and	r19, r15
     1e0:	40 23       	and	r20, r16
     1e2:	51 23       	and	r21, r17
     1e4:	21 15       	cp	r18, r1
     1e6:	31 05       	cpc	r19, r1
     1e8:	41 05       	cpc	r20, r1
     1ea:	51 05       	cpc	r21, r1
     1ec:	21 f0       	breq	.+8      	; 0x1f6 <_fpadd_parts+0x10c>
     1ee:	21 e0       	ldi	r18, 0x01	; 1
     1f0:	30 e0       	ldi	r19, 0x00	; 0
     1f2:	40 e0       	ldi	r20, 0x00	; 0
     1f4:	50 e0       	ldi	r21, 0x00	; 0
     1f6:	79 01       	movw	r14, r18
     1f8:	8a 01       	movw	r16, r20
     1fa:	e6 28       	or	r14, r6
     1fc:	f7 28       	or	r15, r7
     1fe:	08 29       	or	r16, r8
     200:	19 29       	or	r17, r9
     202:	3c c0       	rjmp	.+120    	; 0x27c <_fpadd_parts+0x192>
     204:	23 2b       	or	r18, r19
     206:	d1 f1       	breq	.+116    	; 0x27c <_fpadd_parts+0x192>
     208:	26 0e       	add	r2, r22
     20a:	37 1e       	adc	r3, r23
     20c:	35 01       	movw	r6, r10
     20e:	46 01       	movw	r8, r12
     210:	06 2e       	mov	r0, r22
     212:	04 c0       	rjmp	.+8      	; 0x21c <_fpadd_parts+0x132>
     214:	96 94       	lsr	r9
     216:	87 94       	ror	r8
     218:	77 94       	ror	r7
     21a:	67 94       	ror	r6
     21c:	0a 94       	dec	r0
     21e:	d2 f7       	brpl	.-12     	; 0x214 <_fpadd_parts+0x12a>
     220:	21 e0       	ldi	r18, 0x01	; 1
     222:	30 e0       	ldi	r19, 0x00	; 0
     224:	40 e0       	ldi	r20, 0x00	; 0
     226:	50 e0       	ldi	r21, 0x00	; 0
     228:	04 c0       	rjmp	.+8      	; 0x232 <_fpadd_parts+0x148>
     22a:	22 0f       	add	r18, r18
     22c:	33 1f       	adc	r19, r19
     22e:	44 1f       	adc	r20, r20
     230:	55 1f       	adc	r21, r21
     232:	6a 95       	dec	r22
     234:	d2 f7       	brpl	.-12     	; 0x22a <_fpadd_parts+0x140>
     236:	21 50       	subi	r18, 0x01	; 1
     238:	30 40       	sbci	r19, 0x00	; 0
     23a:	40 40       	sbci	r20, 0x00	; 0
     23c:	50 40       	sbci	r21, 0x00	; 0
     23e:	2a 21       	and	r18, r10
     240:	3b 21       	and	r19, r11
     242:	4c 21       	and	r20, r12
     244:	5d 21       	and	r21, r13
     246:	21 15       	cp	r18, r1
     248:	31 05       	cpc	r19, r1
     24a:	41 05       	cpc	r20, r1
     24c:	51 05       	cpc	r21, r1
     24e:	21 f0       	breq	.+8      	; 0x258 <_fpadd_parts+0x16e>
     250:	21 e0       	ldi	r18, 0x01	; 1
     252:	30 e0       	ldi	r19, 0x00	; 0
     254:	40 e0       	ldi	r20, 0x00	; 0
     256:	50 e0       	ldi	r21, 0x00	; 0
     258:	59 01       	movw	r10, r18
     25a:	6a 01       	movw	r12, r20
     25c:	a6 28       	or	r10, r6
     25e:	b7 28       	or	r11, r7
     260:	c8 28       	or	r12, r8
     262:	d9 28       	or	r13, r9
     264:	0b c0       	rjmp	.+22     	; 0x27c <_fpadd_parts+0x192>
     266:	82 15       	cp	r24, r2
     268:	93 05       	cpc	r25, r3
     26a:	2c f0       	brlt	.+10     	; 0x276 <_fpadd_parts+0x18c>
     26c:	1c 01       	movw	r2, r24
     26e:	aa 24       	eor	r10, r10
     270:	bb 24       	eor	r11, r11
     272:	65 01       	movw	r12, r10
     274:	03 c0       	rjmp	.+6      	; 0x27c <_fpadd_parts+0x192>
     276:	ee 24       	eor	r14, r14
     278:	ff 24       	eor	r15, r15
     27a:	87 01       	movw	r16, r14
     27c:	11 96       	adiw	r26, 0x01	; 1
     27e:	9c 91       	ld	r25, X
     280:	d2 01       	movw	r26, r4
     282:	11 96       	adiw	r26, 0x01	; 1
     284:	8c 91       	ld	r24, X
     286:	98 17       	cp	r25, r24
     288:	09 f4       	brne	.+2      	; 0x28c <_fpadd_parts+0x1a2>
     28a:	45 c0       	rjmp	.+138    	; 0x316 <_fpadd_parts+0x22c>
     28c:	99 23       	and	r25, r25
     28e:	39 f0       	breq	.+14     	; 0x29e <_fpadd_parts+0x1b4>
     290:	a8 01       	movw	r20, r16
     292:	97 01       	movw	r18, r14
     294:	2a 19       	sub	r18, r10
     296:	3b 09       	sbc	r19, r11
     298:	4c 09       	sbc	r20, r12
     29a:	5d 09       	sbc	r21, r13
     29c:	06 c0       	rjmp	.+12     	; 0x2aa <_fpadd_parts+0x1c0>
     29e:	a6 01       	movw	r20, r12
     2a0:	95 01       	movw	r18, r10
     2a2:	2e 19       	sub	r18, r14
     2a4:	3f 09       	sbc	r19, r15
     2a6:	40 0b       	sbc	r20, r16
     2a8:	51 0b       	sbc	r21, r17
     2aa:	57 fd       	sbrc	r21, 7
     2ac:	08 c0       	rjmp	.+16     	; 0x2be <_fpadd_parts+0x1d4>
     2ae:	11 82       	std	Z+1, r1	; 0x01
     2b0:	33 82       	std	Z+3, r3	; 0x03
     2b2:	22 82       	std	Z+2, r2	; 0x02
     2b4:	24 83       	std	Z+4, r18	; 0x04
     2b6:	35 83       	std	Z+5, r19	; 0x05
     2b8:	46 83       	std	Z+6, r20	; 0x06
     2ba:	57 83       	std	Z+7, r21	; 0x07
     2bc:	1d c0       	rjmp	.+58     	; 0x2f8 <_fpadd_parts+0x20e>
     2be:	81 e0       	ldi	r24, 0x01	; 1
     2c0:	81 83       	std	Z+1, r24	; 0x01
     2c2:	33 82       	std	Z+3, r3	; 0x03
     2c4:	22 82       	std	Z+2, r2	; 0x02
     2c6:	88 27       	eor	r24, r24
     2c8:	99 27       	eor	r25, r25
     2ca:	dc 01       	movw	r26, r24
     2cc:	82 1b       	sub	r24, r18
     2ce:	93 0b       	sbc	r25, r19
     2d0:	a4 0b       	sbc	r26, r20
     2d2:	b5 0b       	sbc	r27, r21
     2d4:	84 83       	std	Z+4, r24	; 0x04
     2d6:	95 83       	std	Z+5, r25	; 0x05
     2d8:	a6 83       	std	Z+6, r26	; 0x06
     2da:	b7 83       	std	Z+7, r27	; 0x07
     2dc:	0d c0       	rjmp	.+26     	; 0x2f8 <_fpadd_parts+0x20e>
     2de:	22 0f       	add	r18, r18
     2e0:	33 1f       	adc	r19, r19
     2e2:	44 1f       	adc	r20, r20
     2e4:	55 1f       	adc	r21, r21
     2e6:	24 83       	std	Z+4, r18	; 0x04
     2e8:	35 83       	std	Z+5, r19	; 0x05
     2ea:	46 83       	std	Z+6, r20	; 0x06
     2ec:	57 83       	std	Z+7, r21	; 0x07
     2ee:	82 81       	ldd	r24, Z+2	; 0x02
     2f0:	93 81       	ldd	r25, Z+3	; 0x03
     2f2:	01 97       	sbiw	r24, 0x01	; 1
     2f4:	93 83       	std	Z+3, r25	; 0x03
     2f6:	82 83       	std	Z+2, r24	; 0x02
     2f8:	24 81       	ldd	r18, Z+4	; 0x04
     2fa:	35 81       	ldd	r19, Z+5	; 0x05
     2fc:	46 81       	ldd	r20, Z+6	; 0x06
     2fe:	57 81       	ldd	r21, Z+7	; 0x07
     300:	da 01       	movw	r26, r20
     302:	c9 01       	movw	r24, r18
     304:	01 97       	sbiw	r24, 0x01	; 1
     306:	a1 09       	sbc	r26, r1
     308:	b1 09       	sbc	r27, r1
     30a:	8f 5f       	subi	r24, 0xFF	; 255
     30c:	9f 4f       	sbci	r25, 0xFF	; 255
     30e:	af 4f       	sbci	r26, 0xFF	; 255
     310:	bf 43       	sbci	r27, 0x3F	; 63
     312:	28 f3       	brcs	.-54     	; 0x2de <_fpadd_parts+0x1f4>
     314:	0b c0       	rjmp	.+22     	; 0x32c <_fpadd_parts+0x242>
     316:	91 83       	std	Z+1, r25	; 0x01
     318:	33 82       	std	Z+3, r3	; 0x03
     31a:	22 82       	std	Z+2, r2	; 0x02
     31c:	ea 0c       	add	r14, r10
     31e:	fb 1c       	adc	r15, r11
     320:	0c 1d       	adc	r16, r12
     322:	1d 1d       	adc	r17, r13
     324:	e4 82       	std	Z+4, r14	; 0x04
     326:	f5 82       	std	Z+5, r15	; 0x05
     328:	06 83       	std	Z+6, r16	; 0x06
     32a:	17 83       	std	Z+7, r17	; 0x07
     32c:	83 e0       	ldi	r24, 0x03	; 3
     32e:	80 83       	st	Z, r24
     330:	24 81       	ldd	r18, Z+4	; 0x04
     332:	35 81       	ldd	r19, Z+5	; 0x05
     334:	46 81       	ldd	r20, Z+6	; 0x06
     336:	57 81       	ldd	r21, Z+7	; 0x07
     338:	57 ff       	sbrs	r21, 7
     33a:	1a c0       	rjmp	.+52     	; 0x370 <_fpadd_parts+0x286>
     33c:	c9 01       	movw	r24, r18
     33e:	aa 27       	eor	r26, r26
     340:	97 fd       	sbrc	r25, 7
     342:	a0 95       	com	r26
     344:	ba 2f       	mov	r27, r26
     346:	81 70       	andi	r24, 0x01	; 1
     348:	90 70       	andi	r25, 0x00	; 0
     34a:	a0 70       	andi	r26, 0x00	; 0
     34c:	b0 70       	andi	r27, 0x00	; 0
     34e:	56 95       	lsr	r21
     350:	47 95       	ror	r20
     352:	37 95       	ror	r19
     354:	27 95       	ror	r18
     356:	82 2b       	or	r24, r18
     358:	93 2b       	or	r25, r19
     35a:	a4 2b       	or	r26, r20
     35c:	b5 2b       	or	r27, r21
     35e:	84 83       	std	Z+4, r24	; 0x04
     360:	95 83       	std	Z+5, r25	; 0x05
     362:	a6 83       	std	Z+6, r26	; 0x06
     364:	b7 83       	std	Z+7, r27	; 0x07
     366:	82 81       	ldd	r24, Z+2	; 0x02
     368:	93 81       	ldd	r25, Z+3	; 0x03
     36a:	01 96       	adiw	r24, 0x01	; 1
     36c:	93 83       	std	Z+3, r25	; 0x03
     36e:	82 83       	std	Z+2, r24	; 0x02
     370:	df 01       	movw	r26, r30
     372:	01 c0       	rjmp	.+2      	; 0x376 <_fpadd_parts+0x28c>
     374:	d2 01       	movw	r26, r4
     376:	cd 01       	movw	r24, r26
     378:	cd b7       	in	r28, 0x3d	; 61
     37a:	de b7       	in	r29, 0x3e	; 62
     37c:	e2 e1       	ldi	r30, 0x12	; 18
     37e:	0c 94 e7 0e 	jmp	0x1dce	; 0x1dce <__epilogue_restores__>

00000382 <__subsf3>:
     382:	a0 e2       	ldi	r26, 0x20	; 32
     384:	b0 e0       	ldi	r27, 0x00	; 0
     386:	e7 ec       	ldi	r30, 0xC7	; 199
     388:	f1 e0       	ldi	r31, 0x01	; 1
     38a:	0c 94 d7 0e 	jmp	0x1dae	; 0x1dae <__prologue_saves__+0x18>
     38e:	69 83       	std	Y+1, r22	; 0x01
     390:	7a 83       	std	Y+2, r23	; 0x02
     392:	8b 83       	std	Y+3, r24	; 0x03
     394:	9c 83       	std	Y+4, r25	; 0x04
     396:	2d 83       	std	Y+5, r18	; 0x05
     398:	3e 83       	std	Y+6, r19	; 0x06
     39a:	4f 83       	std	Y+7, r20	; 0x07
     39c:	58 87       	std	Y+8, r21	; 0x08
     39e:	e9 e0       	ldi	r30, 0x09	; 9
     3a0:	ee 2e       	mov	r14, r30
     3a2:	f1 2c       	mov	r15, r1
     3a4:	ec 0e       	add	r14, r28
     3a6:	fd 1e       	adc	r15, r29
     3a8:	ce 01       	movw	r24, r28
     3aa:	01 96       	adiw	r24, 0x01	; 1
     3ac:	b7 01       	movw	r22, r14
     3ae:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     3b2:	8e 01       	movw	r16, r28
     3b4:	0f 5e       	subi	r16, 0xEF	; 239
     3b6:	1f 4f       	sbci	r17, 0xFF	; 255
     3b8:	ce 01       	movw	r24, r28
     3ba:	05 96       	adiw	r24, 0x05	; 5
     3bc:	b8 01       	movw	r22, r16
     3be:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     3c2:	8a 89       	ldd	r24, Y+18	; 0x12
     3c4:	91 e0       	ldi	r25, 0x01	; 1
     3c6:	89 27       	eor	r24, r25
     3c8:	8a 8b       	std	Y+18, r24	; 0x12
     3ca:	c7 01       	movw	r24, r14
     3cc:	b8 01       	movw	r22, r16
     3ce:	ae 01       	movw	r20, r28
     3d0:	47 5e       	subi	r20, 0xE7	; 231
     3d2:	5f 4f       	sbci	r21, 0xFF	; 255
     3d4:	0e 94 75 00 	call	0xea	; 0xea <_fpadd_parts>
     3d8:	0e 94 fd 03 	call	0x7fa	; 0x7fa <__pack_f>
     3dc:	a0 96       	adiw	r28, 0x20	; 32
     3de:	e6 e0       	ldi	r30, 0x06	; 6
     3e0:	0c 94 f3 0e 	jmp	0x1de6	; 0x1de6 <__epilogue_restores__+0x18>

000003e4 <__addsf3>:
     3e4:	a0 e2       	ldi	r26, 0x20	; 32
     3e6:	b0 e0       	ldi	r27, 0x00	; 0
     3e8:	e8 ef       	ldi	r30, 0xF8	; 248
     3ea:	f1 e0       	ldi	r31, 0x01	; 1
     3ec:	0c 94 d7 0e 	jmp	0x1dae	; 0x1dae <__prologue_saves__+0x18>
     3f0:	69 83       	std	Y+1, r22	; 0x01
     3f2:	7a 83       	std	Y+2, r23	; 0x02
     3f4:	8b 83       	std	Y+3, r24	; 0x03
     3f6:	9c 83       	std	Y+4, r25	; 0x04
     3f8:	2d 83       	std	Y+5, r18	; 0x05
     3fa:	3e 83       	std	Y+6, r19	; 0x06
     3fc:	4f 83       	std	Y+7, r20	; 0x07
     3fe:	58 87       	std	Y+8, r21	; 0x08
     400:	f9 e0       	ldi	r31, 0x09	; 9
     402:	ef 2e       	mov	r14, r31
     404:	f1 2c       	mov	r15, r1
     406:	ec 0e       	add	r14, r28
     408:	fd 1e       	adc	r15, r29
     40a:	ce 01       	movw	r24, r28
     40c:	01 96       	adiw	r24, 0x01	; 1
     40e:	b7 01       	movw	r22, r14
     410:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     414:	8e 01       	movw	r16, r28
     416:	0f 5e       	subi	r16, 0xEF	; 239
     418:	1f 4f       	sbci	r17, 0xFF	; 255
     41a:	ce 01       	movw	r24, r28
     41c:	05 96       	adiw	r24, 0x05	; 5
     41e:	b8 01       	movw	r22, r16
     420:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     424:	c7 01       	movw	r24, r14
     426:	b8 01       	movw	r22, r16
     428:	ae 01       	movw	r20, r28
     42a:	47 5e       	subi	r20, 0xE7	; 231
     42c:	5f 4f       	sbci	r21, 0xFF	; 255
     42e:	0e 94 75 00 	call	0xea	; 0xea <_fpadd_parts>
     432:	0e 94 fd 03 	call	0x7fa	; 0x7fa <__pack_f>
     436:	a0 96       	adiw	r28, 0x20	; 32
     438:	e6 e0       	ldi	r30, 0x06	; 6
     43a:	0c 94 f3 0e 	jmp	0x1de6	; 0x1de6 <__epilogue_restores__+0x18>

0000043e <__mulsf3>:
     43e:	a0 e2       	ldi	r26, 0x20	; 32
     440:	b0 e0       	ldi	r27, 0x00	; 0
     442:	e5 e2       	ldi	r30, 0x25	; 37
     444:	f2 e0       	ldi	r31, 0x02	; 2
     446:	0c 94 cb 0e 	jmp	0x1d96	; 0x1d96 <__prologue_saves__>
     44a:	69 83       	std	Y+1, r22	; 0x01
     44c:	7a 83       	std	Y+2, r23	; 0x02
     44e:	8b 83       	std	Y+3, r24	; 0x03
     450:	9c 83       	std	Y+4, r25	; 0x04
     452:	2d 83       	std	Y+5, r18	; 0x05
     454:	3e 83       	std	Y+6, r19	; 0x06
     456:	4f 83       	std	Y+7, r20	; 0x07
     458:	58 87       	std	Y+8, r21	; 0x08
     45a:	ce 01       	movw	r24, r28
     45c:	01 96       	adiw	r24, 0x01	; 1
     45e:	be 01       	movw	r22, r28
     460:	67 5f       	subi	r22, 0xF7	; 247
     462:	7f 4f       	sbci	r23, 0xFF	; 255
     464:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     468:	ce 01       	movw	r24, r28
     46a:	05 96       	adiw	r24, 0x05	; 5
     46c:	be 01       	movw	r22, r28
     46e:	6f 5e       	subi	r22, 0xEF	; 239
     470:	7f 4f       	sbci	r23, 0xFF	; 255
     472:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     476:	99 85       	ldd	r25, Y+9	; 0x09
     478:	92 30       	cpi	r25, 0x02	; 2
     47a:	88 f0       	brcs	.+34     	; 0x49e <__mulsf3+0x60>
     47c:	89 89       	ldd	r24, Y+17	; 0x11
     47e:	82 30       	cpi	r24, 0x02	; 2
     480:	c8 f0       	brcs	.+50     	; 0x4b4 <__mulsf3+0x76>
     482:	94 30       	cpi	r25, 0x04	; 4
     484:	19 f4       	brne	.+6      	; 0x48c <__mulsf3+0x4e>
     486:	82 30       	cpi	r24, 0x02	; 2
     488:	51 f4       	brne	.+20     	; 0x49e <__mulsf3+0x60>
     48a:	04 c0       	rjmp	.+8      	; 0x494 <__mulsf3+0x56>
     48c:	84 30       	cpi	r24, 0x04	; 4
     48e:	29 f4       	brne	.+10     	; 0x49a <__mulsf3+0x5c>
     490:	92 30       	cpi	r25, 0x02	; 2
     492:	81 f4       	brne	.+32     	; 0x4b4 <__mulsf3+0x76>
     494:	80 e6       	ldi	r24, 0x60	; 96
     496:	90 e0       	ldi	r25, 0x00	; 0
     498:	c6 c0       	rjmp	.+396    	; 0x626 <__mulsf3+0x1e8>
     49a:	92 30       	cpi	r25, 0x02	; 2
     49c:	49 f4       	brne	.+18     	; 0x4b0 <__mulsf3+0x72>
     49e:	20 e0       	ldi	r18, 0x00	; 0
     4a0:	9a 85       	ldd	r25, Y+10	; 0x0a
     4a2:	8a 89       	ldd	r24, Y+18	; 0x12
     4a4:	98 13       	cpse	r25, r24
     4a6:	21 e0       	ldi	r18, 0x01	; 1
     4a8:	2a 87       	std	Y+10, r18	; 0x0a
     4aa:	ce 01       	movw	r24, r28
     4ac:	09 96       	adiw	r24, 0x09	; 9
     4ae:	bb c0       	rjmp	.+374    	; 0x626 <__mulsf3+0x1e8>
     4b0:	82 30       	cpi	r24, 0x02	; 2
     4b2:	49 f4       	brne	.+18     	; 0x4c6 <__mulsf3+0x88>
     4b4:	20 e0       	ldi	r18, 0x00	; 0
     4b6:	9a 85       	ldd	r25, Y+10	; 0x0a
     4b8:	8a 89       	ldd	r24, Y+18	; 0x12
     4ba:	98 13       	cpse	r25, r24
     4bc:	21 e0       	ldi	r18, 0x01	; 1
     4be:	2a 8b       	std	Y+18, r18	; 0x12
     4c0:	ce 01       	movw	r24, r28
     4c2:	41 96       	adiw	r24, 0x11	; 17
     4c4:	b0 c0       	rjmp	.+352    	; 0x626 <__mulsf3+0x1e8>
     4c6:	2d 84       	ldd	r2, Y+13	; 0x0d
     4c8:	3e 84       	ldd	r3, Y+14	; 0x0e
     4ca:	4f 84       	ldd	r4, Y+15	; 0x0f
     4cc:	58 88       	ldd	r5, Y+16	; 0x10
     4ce:	6d 88       	ldd	r6, Y+21	; 0x15
     4d0:	7e 88       	ldd	r7, Y+22	; 0x16
     4d2:	8f 88       	ldd	r8, Y+23	; 0x17
     4d4:	98 8c       	ldd	r9, Y+24	; 0x18
     4d6:	ee 24       	eor	r14, r14
     4d8:	ff 24       	eor	r15, r15
     4da:	87 01       	movw	r16, r14
     4dc:	aa 24       	eor	r10, r10
     4de:	bb 24       	eor	r11, r11
     4e0:	65 01       	movw	r12, r10
     4e2:	40 e0       	ldi	r20, 0x00	; 0
     4e4:	50 e0       	ldi	r21, 0x00	; 0
     4e6:	60 e0       	ldi	r22, 0x00	; 0
     4e8:	70 e0       	ldi	r23, 0x00	; 0
     4ea:	e0 e0       	ldi	r30, 0x00	; 0
     4ec:	f0 e0       	ldi	r31, 0x00	; 0
     4ee:	c1 01       	movw	r24, r2
     4f0:	81 70       	andi	r24, 0x01	; 1
     4f2:	90 70       	andi	r25, 0x00	; 0
     4f4:	89 2b       	or	r24, r25
     4f6:	e9 f0       	breq	.+58     	; 0x532 <__mulsf3+0xf4>
     4f8:	e6 0c       	add	r14, r6
     4fa:	f7 1c       	adc	r15, r7
     4fc:	08 1d       	adc	r16, r8
     4fe:	19 1d       	adc	r17, r9
     500:	9a 01       	movw	r18, r20
     502:	ab 01       	movw	r20, r22
     504:	2a 0d       	add	r18, r10
     506:	3b 1d       	adc	r19, r11
     508:	4c 1d       	adc	r20, r12
     50a:	5d 1d       	adc	r21, r13
     50c:	80 e0       	ldi	r24, 0x00	; 0
     50e:	90 e0       	ldi	r25, 0x00	; 0
     510:	a0 e0       	ldi	r26, 0x00	; 0
     512:	b0 e0       	ldi	r27, 0x00	; 0
     514:	e6 14       	cp	r14, r6
     516:	f7 04       	cpc	r15, r7
     518:	08 05       	cpc	r16, r8
     51a:	19 05       	cpc	r17, r9
     51c:	20 f4       	brcc	.+8      	; 0x526 <__mulsf3+0xe8>
     51e:	81 e0       	ldi	r24, 0x01	; 1
     520:	90 e0       	ldi	r25, 0x00	; 0
     522:	a0 e0       	ldi	r26, 0x00	; 0
     524:	b0 e0       	ldi	r27, 0x00	; 0
     526:	ba 01       	movw	r22, r20
     528:	a9 01       	movw	r20, r18
     52a:	48 0f       	add	r20, r24
     52c:	59 1f       	adc	r21, r25
     52e:	6a 1f       	adc	r22, r26
     530:	7b 1f       	adc	r23, r27
     532:	aa 0c       	add	r10, r10
     534:	bb 1c       	adc	r11, r11
     536:	cc 1c       	adc	r12, r12
     538:	dd 1c       	adc	r13, r13
     53a:	97 fe       	sbrs	r9, 7
     53c:	08 c0       	rjmp	.+16     	; 0x54e <__mulsf3+0x110>
     53e:	81 e0       	ldi	r24, 0x01	; 1
     540:	90 e0       	ldi	r25, 0x00	; 0
     542:	a0 e0       	ldi	r26, 0x00	; 0
     544:	b0 e0       	ldi	r27, 0x00	; 0
     546:	a8 2a       	or	r10, r24
     548:	b9 2a       	or	r11, r25
     54a:	ca 2a       	or	r12, r26
     54c:	db 2a       	or	r13, r27
     54e:	31 96       	adiw	r30, 0x01	; 1
     550:	e0 32       	cpi	r30, 0x20	; 32
     552:	f1 05       	cpc	r31, r1
     554:	49 f0       	breq	.+18     	; 0x568 <__mulsf3+0x12a>
     556:	66 0c       	add	r6, r6
     558:	77 1c       	adc	r7, r7
     55a:	88 1c       	adc	r8, r8
     55c:	99 1c       	adc	r9, r9
     55e:	56 94       	lsr	r5
     560:	47 94       	ror	r4
     562:	37 94       	ror	r3
     564:	27 94       	ror	r2
     566:	c3 cf       	rjmp	.-122    	; 0x4ee <__mulsf3+0xb0>
     568:	fa 85       	ldd	r31, Y+10	; 0x0a
     56a:	ea 89       	ldd	r30, Y+18	; 0x12
     56c:	2b 89       	ldd	r18, Y+19	; 0x13
     56e:	3c 89       	ldd	r19, Y+20	; 0x14
     570:	8b 85       	ldd	r24, Y+11	; 0x0b
     572:	9c 85       	ldd	r25, Y+12	; 0x0c
     574:	28 0f       	add	r18, r24
     576:	39 1f       	adc	r19, r25
     578:	2e 5f       	subi	r18, 0xFE	; 254
     57a:	3f 4f       	sbci	r19, 0xFF	; 255
     57c:	17 c0       	rjmp	.+46     	; 0x5ac <__mulsf3+0x16e>
     57e:	ca 01       	movw	r24, r20
     580:	81 70       	andi	r24, 0x01	; 1
     582:	90 70       	andi	r25, 0x00	; 0
     584:	89 2b       	or	r24, r25
     586:	61 f0       	breq	.+24     	; 0x5a0 <__mulsf3+0x162>
     588:	16 95       	lsr	r17
     58a:	07 95       	ror	r16
     58c:	f7 94       	ror	r15
     58e:	e7 94       	ror	r14
     590:	80 e0       	ldi	r24, 0x00	; 0
     592:	90 e0       	ldi	r25, 0x00	; 0
     594:	a0 e0       	ldi	r26, 0x00	; 0
     596:	b0 e8       	ldi	r27, 0x80	; 128
     598:	e8 2a       	or	r14, r24
     59a:	f9 2a       	or	r15, r25
     59c:	0a 2b       	or	r16, r26
     59e:	1b 2b       	or	r17, r27
     5a0:	76 95       	lsr	r23
     5a2:	67 95       	ror	r22
     5a4:	57 95       	ror	r21
     5a6:	47 95       	ror	r20
     5a8:	2f 5f       	subi	r18, 0xFF	; 255
     5aa:	3f 4f       	sbci	r19, 0xFF	; 255
     5ac:	77 fd       	sbrc	r23, 7
     5ae:	e7 cf       	rjmp	.-50     	; 0x57e <__mulsf3+0x140>
     5b0:	0c c0       	rjmp	.+24     	; 0x5ca <__mulsf3+0x18c>
     5b2:	44 0f       	add	r20, r20
     5b4:	55 1f       	adc	r21, r21
     5b6:	66 1f       	adc	r22, r22
     5b8:	77 1f       	adc	r23, r23
     5ba:	17 fd       	sbrc	r17, 7
     5bc:	41 60       	ori	r20, 0x01	; 1
     5be:	ee 0c       	add	r14, r14
     5c0:	ff 1c       	adc	r15, r15
     5c2:	00 1f       	adc	r16, r16
     5c4:	11 1f       	adc	r17, r17
     5c6:	21 50       	subi	r18, 0x01	; 1
     5c8:	30 40       	sbci	r19, 0x00	; 0
     5ca:	40 30       	cpi	r20, 0x00	; 0
     5cc:	90 e0       	ldi	r25, 0x00	; 0
     5ce:	59 07       	cpc	r21, r25
     5d0:	90 e0       	ldi	r25, 0x00	; 0
     5d2:	69 07       	cpc	r22, r25
     5d4:	90 e4       	ldi	r25, 0x40	; 64
     5d6:	79 07       	cpc	r23, r25
     5d8:	60 f3       	brcs	.-40     	; 0x5b2 <__mulsf3+0x174>
     5da:	2b 8f       	std	Y+27, r18	; 0x1b
     5dc:	3c 8f       	std	Y+28, r19	; 0x1c
     5de:	db 01       	movw	r26, r22
     5e0:	ca 01       	movw	r24, r20
     5e2:	8f 77       	andi	r24, 0x7F	; 127
     5e4:	90 70       	andi	r25, 0x00	; 0
     5e6:	a0 70       	andi	r26, 0x00	; 0
     5e8:	b0 70       	andi	r27, 0x00	; 0
     5ea:	80 34       	cpi	r24, 0x40	; 64
     5ec:	91 05       	cpc	r25, r1
     5ee:	a1 05       	cpc	r26, r1
     5f0:	b1 05       	cpc	r27, r1
     5f2:	61 f4       	brne	.+24     	; 0x60c <__mulsf3+0x1ce>
     5f4:	47 fd       	sbrc	r20, 7
     5f6:	0a c0       	rjmp	.+20     	; 0x60c <__mulsf3+0x1ce>
     5f8:	e1 14       	cp	r14, r1
     5fa:	f1 04       	cpc	r15, r1
     5fc:	01 05       	cpc	r16, r1
     5fe:	11 05       	cpc	r17, r1
     600:	29 f0       	breq	.+10     	; 0x60c <__mulsf3+0x1ce>
     602:	40 5c       	subi	r20, 0xC0	; 192
     604:	5f 4f       	sbci	r21, 0xFF	; 255
     606:	6f 4f       	sbci	r22, 0xFF	; 255
     608:	7f 4f       	sbci	r23, 0xFF	; 255
     60a:	40 78       	andi	r20, 0x80	; 128
     60c:	1a 8e       	std	Y+26, r1	; 0x1a
     60e:	fe 17       	cp	r31, r30
     610:	11 f0       	breq	.+4      	; 0x616 <__mulsf3+0x1d8>
     612:	81 e0       	ldi	r24, 0x01	; 1
     614:	8a 8f       	std	Y+26, r24	; 0x1a
     616:	4d 8f       	std	Y+29, r20	; 0x1d
     618:	5e 8f       	std	Y+30, r21	; 0x1e
     61a:	6f 8f       	std	Y+31, r22	; 0x1f
     61c:	78 a3       	std	Y+32, r23	; 0x20
     61e:	83 e0       	ldi	r24, 0x03	; 3
     620:	89 8f       	std	Y+25, r24	; 0x19
     622:	ce 01       	movw	r24, r28
     624:	49 96       	adiw	r24, 0x19	; 25
     626:	0e 94 fd 03 	call	0x7fa	; 0x7fa <__pack_f>
     62a:	a0 96       	adiw	r28, 0x20	; 32
     62c:	e2 e1       	ldi	r30, 0x12	; 18
     62e:	0c 94 e7 0e 	jmp	0x1dce	; 0x1dce <__epilogue_restores__>

00000632 <__gtsf2>:
     632:	a8 e1       	ldi	r26, 0x18	; 24
     634:	b0 e0       	ldi	r27, 0x00	; 0
     636:	ef e1       	ldi	r30, 0x1F	; 31
     638:	f3 e0       	ldi	r31, 0x03	; 3
     63a:	0c 94 d7 0e 	jmp	0x1dae	; 0x1dae <__prologue_saves__+0x18>
     63e:	69 83       	std	Y+1, r22	; 0x01
     640:	7a 83       	std	Y+2, r23	; 0x02
     642:	8b 83       	std	Y+3, r24	; 0x03
     644:	9c 83       	std	Y+4, r25	; 0x04
     646:	2d 83       	std	Y+5, r18	; 0x05
     648:	3e 83       	std	Y+6, r19	; 0x06
     64a:	4f 83       	std	Y+7, r20	; 0x07
     64c:	58 87       	std	Y+8, r21	; 0x08
     64e:	89 e0       	ldi	r24, 0x09	; 9
     650:	e8 2e       	mov	r14, r24
     652:	f1 2c       	mov	r15, r1
     654:	ec 0e       	add	r14, r28
     656:	fd 1e       	adc	r15, r29
     658:	ce 01       	movw	r24, r28
     65a:	01 96       	adiw	r24, 0x01	; 1
     65c:	b7 01       	movw	r22, r14
     65e:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     662:	8e 01       	movw	r16, r28
     664:	0f 5e       	subi	r16, 0xEF	; 239
     666:	1f 4f       	sbci	r17, 0xFF	; 255
     668:	ce 01       	movw	r24, r28
     66a:	05 96       	adiw	r24, 0x05	; 5
     66c:	b8 01       	movw	r22, r16
     66e:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     672:	89 85       	ldd	r24, Y+9	; 0x09
     674:	82 30       	cpi	r24, 0x02	; 2
     676:	40 f0       	brcs	.+16     	; 0x688 <__gtsf2+0x56>
     678:	89 89       	ldd	r24, Y+17	; 0x11
     67a:	82 30       	cpi	r24, 0x02	; 2
     67c:	28 f0       	brcs	.+10     	; 0x688 <__gtsf2+0x56>
     67e:	c7 01       	movw	r24, r14
     680:	b8 01       	movw	r22, r16
     682:	0e 94 4a 05 	call	0xa94	; 0xa94 <__fpcmp_parts_f>
     686:	01 c0       	rjmp	.+2      	; 0x68a <__gtsf2+0x58>
     688:	8f ef       	ldi	r24, 0xFF	; 255
     68a:	68 96       	adiw	r28, 0x18	; 24
     68c:	e6 e0       	ldi	r30, 0x06	; 6
     68e:	0c 94 f3 0e 	jmp	0x1de6	; 0x1de6 <__epilogue_restores__+0x18>

00000692 <__gesf2>:
     692:	a8 e1       	ldi	r26, 0x18	; 24
     694:	b0 e0       	ldi	r27, 0x00	; 0
     696:	ef e4       	ldi	r30, 0x4F	; 79
     698:	f3 e0       	ldi	r31, 0x03	; 3
     69a:	0c 94 d7 0e 	jmp	0x1dae	; 0x1dae <__prologue_saves__+0x18>
     69e:	69 83       	std	Y+1, r22	; 0x01
     6a0:	7a 83       	std	Y+2, r23	; 0x02
     6a2:	8b 83       	std	Y+3, r24	; 0x03
     6a4:	9c 83       	std	Y+4, r25	; 0x04
     6a6:	2d 83       	std	Y+5, r18	; 0x05
     6a8:	3e 83       	std	Y+6, r19	; 0x06
     6aa:	4f 83       	std	Y+7, r20	; 0x07
     6ac:	58 87       	std	Y+8, r21	; 0x08
     6ae:	89 e0       	ldi	r24, 0x09	; 9
     6b0:	e8 2e       	mov	r14, r24
     6b2:	f1 2c       	mov	r15, r1
     6b4:	ec 0e       	add	r14, r28
     6b6:	fd 1e       	adc	r15, r29
     6b8:	ce 01       	movw	r24, r28
     6ba:	01 96       	adiw	r24, 0x01	; 1
     6bc:	b7 01       	movw	r22, r14
     6be:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     6c2:	8e 01       	movw	r16, r28
     6c4:	0f 5e       	subi	r16, 0xEF	; 239
     6c6:	1f 4f       	sbci	r17, 0xFF	; 255
     6c8:	ce 01       	movw	r24, r28
     6ca:	05 96       	adiw	r24, 0x05	; 5
     6cc:	b8 01       	movw	r22, r16
     6ce:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     6d2:	89 85       	ldd	r24, Y+9	; 0x09
     6d4:	82 30       	cpi	r24, 0x02	; 2
     6d6:	40 f0       	brcs	.+16     	; 0x6e8 <__gesf2+0x56>
     6d8:	89 89       	ldd	r24, Y+17	; 0x11
     6da:	82 30       	cpi	r24, 0x02	; 2
     6dc:	28 f0       	brcs	.+10     	; 0x6e8 <__gesf2+0x56>
     6de:	c7 01       	movw	r24, r14
     6e0:	b8 01       	movw	r22, r16
     6e2:	0e 94 4a 05 	call	0xa94	; 0xa94 <__fpcmp_parts_f>
     6e6:	01 c0       	rjmp	.+2      	; 0x6ea <__gesf2+0x58>
     6e8:	8f ef       	ldi	r24, 0xFF	; 255
     6ea:	68 96       	adiw	r28, 0x18	; 24
     6ec:	e6 e0       	ldi	r30, 0x06	; 6
     6ee:	0c 94 f3 0e 	jmp	0x1de6	; 0x1de6 <__epilogue_restores__+0x18>

000006f2 <__ltsf2>:
     6f2:	a8 e1       	ldi	r26, 0x18	; 24
     6f4:	b0 e0       	ldi	r27, 0x00	; 0
     6f6:	ef e7       	ldi	r30, 0x7F	; 127
     6f8:	f3 e0       	ldi	r31, 0x03	; 3
     6fa:	0c 94 d7 0e 	jmp	0x1dae	; 0x1dae <__prologue_saves__+0x18>
     6fe:	69 83       	std	Y+1, r22	; 0x01
     700:	7a 83       	std	Y+2, r23	; 0x02
     702:	8b 83       	std	Y+3, r24	; 0x03
     704:	9c 83       	std	Y+4, r25	; 0x04
     706:	2d 83       	std	Y+5, r18	; 0x05
     708:	3e 83       	std	Y+6, r19	; 0x06
     70a:	4f 83       	std	Y+7, r20	; 0x07
     70c:	58 87       	std	Y+8, r21	; 0x08
     70e:	89 e0       	ldi	r24, 0x09	; 9
     710:	e8 2e       	mov	r14, r24
     712:	f1 2c       	mov	r15, r1
     714:	ec 0e       	add	r14, r28
     716:	fd 1e       	adc	r15, r29
     718:	ce 01       	movw	r24, r28
     71a:	01 96       	adiw	r24, 0x01	; 1
     71c:	b7 01       	movw	r22, r14
     71e:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     722:	8e 01       	movw	r16, r28
     724:	0f 5e       	subi	r16, 0xEF	; 239
     726:	1f 4f       	sbci	r17, 0xFF	; 255
     728:	ce 01       	movw	r24, r28
     72a:	05 96       	adiw	r24, 0x05	; 5
     72c:	b8 01       	movw	r22, r16
     72e:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     732:	89 85       	ldd	r24, Y+9	; 0x09
     734:	82 30       	cpi	r24, 0x02	; 2
     736:	40 f0       	brcs	.+16     	; 0x748 <__ltsf2+0x56>
     738:	89 89       	ldd	r24, Y+17	; 0x11
     73a:	82 30       	cpi	r24, 0x02	; 2
     73c:	28 f0       	brcs	.+10     	; 0x748 <__ltsf2+0x56>
     73e:	c7 01       	movw	r24, r14
     740:	b8 01       	movw	r22, r16
     742:	0e 94 4a 05 	call	0xa94	; 0xa94 <__fpcmp_parts_f>
     746:	01 c0       	rjmp	.+2      	; 0x74a <__ltsf2+0x58>
     748:	81 e0       	ldi	r24, 0x01	; 1
     74a:	68 96       	adiw	r28, 0x18	; 24
     74c:	e6 e0       	ldi	r30, 0x06	; 6
     74e:	0c 94 f3 0e 	jmp	0x1de6	; 0x1de6 <__epilogue_restores__+0x18>

00000752 <__fixsfsi>:
     752:	ac e0       	ldi	r26, 0x0C	; 12
     754:	b0 e0       	ldi	r27, 0x00	; 0
     756:	ef ea       	ldi	r30, 0xAF	; 175
     758:	f3 e0       	ldi	r31, 0x03	; 3
     75a:	0c 94 db 0e 	jmp	0x1db6	; 0x1db6 <__prologue_saves__+0x20>
     75e:	69 83       	std	Y+1, r22	; 0x01
     760:	7a 83       	std	Y+2, r23	; 0x02
     762:	8b 83       	std	Y+3, r24	; 0x03
     764:	9c 83       	std	Y+4, r25	; 0x04
     766:	ce 01       	movw	r24, r28
     768:	01 96       	adiw	r24, 0x01	; 1
     76a:	be 01       	movw	r22, r28
     76c:	6b 5f       	subi	r22, 0xFB	; 251
     76e:	7f 4f       	sbci	r23, 0xFF	; 255
     770:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     774:	8d 81       	ldd	r24, Y+5	; 0x05
     776:	82 30       	cpi	r24, 0x02	; 2
     778:	61 f1       	breq	.+88     	; 0x7d2 <__fixsfsi+0x80>
     77a:	82 30       	cpi	r24, 0x02	; 2
     77c:	50 f1       	brcs	.+84     	; 0x7d2 <__fixsfsi+0x80>
     77e:	84 30       	cpi	r24, 0x04	; 4
     780:	21 f4       	brne	.+8      	; 0x78a <__fixsfsi+0x38>
     782:	8e 81       	ldd	r24, Y+6	; 0x06
     784:	88 23       	and	r24, r24
     786:	51 f1       	breq	.+84     	; 0x7dc <__fixsfsi+0x8a>
     788:	2e c0       	rjmp	.+92     	; 0x7e6 <__fixsfsi+0x94>
     78a:	2f 81       	ldd	r18, Y+7	; 0x07
     78c:	38 85       	ldd	r19, Y+8	; 0x08
     78e:	37 fd       	sbrc	r19, 7
     790:	20 c0       	rjmp	.+64     	; 0x7d2 <__fixsfsi+0x80>
     792:	6e 81       	ldd	r22, Y+6	; 0x06
     794:	2f 31       	cpi	r18, 0x1F	; 31
     796:	31 05       	cpc	r19, r1
     798:	1c f0       	brlt	.+6      	; 0x7a0 <__fixsfsi+0x4e>
     79a:	66 23       	and	r22, r22
     79c:	f9 f0       	breq	.+62     	; 0x7dc <__fixsfsi+0x8a>
     79e:	23 c0       	rjmp	.+70     	; 0x7e6 <__fixsfsi+0x94>
     7a0:	8e e1       	ldi	r24, 0x1E	; 30
     7a2:	90 e0       	ldi	r25, 0x00	; 0
     7a4:	82 1b       	sub	r24, r18
     7a6:	93 0b       	sbc	r25, r19
     7a8:	29 85       	ldd	r18, Y+9	; 0x09
     7aa:	3a 85       	ldd	r19, Y+10	; 0x0a
     7ac:	4b 85       	ldd	r20, Y+11	; 0x0b
     7ae:	5c 85       	ldd	r21, Y+12	; 0x0c
     7b0:	04 c0       	rjmp	.+8      	; 0x7ba <__fixsfsi+0x68>
     7b2:	56 95       	lsr	r21
     7b4:	47 95       	ror	r20
     7b6:	37 95       	ror	r19
     7b8:	27 95       	ror	r18
     7ba:	8a 95       	dec	r24
     7bc:	d2 f7       	brpl	.-12     	; 0x7b2 <__fixsfsi+0x60>
     7be:	66 23       	and	r22, r22
     7c0:	b1 f0       	breq	.+44     	; 0x7ee <__fixsfsi+0x9c>
     7c2:	50 95       	com	r21
     7c4:	40 95       	com	r20
     7c6:	30 95       	com	r19
     7c8:	21 95       	neg	r18
     7ca:	3f 4f       	sbci	r19, 0xFF	; 255
     7cc:	4f 4f       	sbci	r20, 0xFF	; 255
     7ce:	5f 4f       	sbci	r21, 0xFF	; 255
     7d0:	0e c0       	rjmp	.+28     	; 0x7ee <__fixsfsi+0x9c>
     7d2:	20 e0       	ldi	r18, 0x00	; 0
     7d4:	30 e0       	ldi	r19, 0x00	; 0
     7d6:	40 e0       	ldi	r20, 0x00	; 0
     7d8:	50 e0       	ldi	r21, 0x00	; 0
     7da:	09 c0       	rjmp	.+18     	; 0x7ee <__fixsfsi+0x9c>
     7dc:	2f ef       	ldi	r18, 0xFF	; 255
     7de:	3f ef       	ldi	r19, 0xFF	; 255
     7e0:	4f ef       	ldi	r20, 0xFF	; 255
     7e2:	5f e7       	ldi	r21, 0x7F	; 127
     7e4:	04 c0       	rjmp	.+8      	; 0x7ee <__fixsfsi+0x9c>
     7e6:	20 e0       	ldi	r18, 0x00	; 0
     7e8:	30 e0       	ldi	r19, 0x00	; 0
     7ea:	40 e0       	ldi	r20, 0x00	; 0
     7ec:	50 e8       	ldi	r21, 0x80	; 128
     7ee:	b9 01       	movw	r22, r18
     7f0:	ca 01       	movw	r24, r20
     7f2:	2c 96       	adiw	r28, 0x0c	; 12
     7f4:	e2 e0       	ldi	r30, 0x02	; 2
     7f6:	0c 94 f7 0e 	jmp	0x1dee	; 0x1dee <__epilogue_restores__+0x20>

000007fa <__pack_f>:
     7fa:	df 92       	push	r13
     7fc:	ef 92       	push	r14
     7fe:	ff 92       	push	r15
     800:	0f 93       	push	r16
     802:	1f 93       	push	r17
     804:	fc 01       	movw	r30, r24
     806:	e4 80       	ldd	r14, Z+4	; 0x04
     808:	f5 80       	ldd	r15, Z+5	; 0x05
     80a:	06 81       	ldd	r16, Z+6	; 0x06
     80c:	17 81       	ldd	r17, Z+7	; 0x07
     80e:	d1 80       	ldd	r13, Z+1	; 0x01
     810:	80 81       	ld	r24, Z
     812:	82 30       	cpi	r24, 0x02	; 2
     814:	48 f4       	brcc	.+18     	; 0x828 <__pack_f+0x2e>
     816:	80 e0       	ldi	r24, 0x00	; 0
     818:	90 e0       	ldi	r25, 0x00	; 0
     81a:	a0 e1       	ldi	r26, 0x10	; 16
     81c:	b0 e0       	ldi	r27, 0x00	; 0
     81e:	e8 2a       	or	r14, r24
     820:	f9 2a       	or	r15, r25
     822:	0a 2b       	or	r16, r26
     824:	1b 2b       	or	r17, r27
     826:	a5 c0       	rjmp	.+330    	; 0x972 <__stack+0x113>
     828:	84 30       	cpi	r24, 0x04	; 4
     82a:	09 f4       	brne	.+2      	; 0x82e <__pack_f+0x34>
     82c:	9f c0       	rjmp	.+318    	; 0x96c <__stack+0x10d>
     82e:	82 30       	cpi	r24, 0x02	; 2
     830:	21 f4       	brne	.+8      	; 0x83a <__pack_f+0x40>
     832:	ee 24       	eor	r14, r14
     834:	ff 24       	eor	r15, r15
     836:	87 01       	movw	r16, r14
     838:	05 c0       	rjmp	.+10     	; 0x844 <__pack_f+0x4a>
     83a:	e1 14       	cp	r14, r1
     83c:	f1 04       	cpc	r15, r1
     83e:	01 05       	cpc	r16, r1
     840:	11 05       	cpc	r17, r1
     842:	19 f4       	brne	.+6      	; 0x84a <__pack_f+0x50>
     844:	e0 e0       	ldi	r30, 0x00	; 0
     846:	f0 e0       	ldi	r31, 0x00	; 0
     848:	96 c0       	rjmp	.+300    	; 0x976 <__stack+0x117>
     84a:	62 81       	ldd	r22, Z+2	; 0x02
     84c:	73 81       	ldd	r23, Z+3	; 0x03
     84e:	9f ef       	ldi	r25, 0xFF	; 255
     850:	62 38       	cpi	r22, 0x82	; 130
     852:	79 07       	cpc	r23, r25
     854:	0c f0       	brlt	.+2      	; 0x858 <__pack_f+0x5e>
     856:	5b c0       	rjmp	.+182    	; 0x90e <__stack+0xaf>
     858:	22 e8       	ldi	r18, 0x82	; 130
     85a:	3f ef       	ldi	r19, 0xFF	; 255
     85c:	26 1b       	sub	r18, r22
     85e:	37 0b       	sbc	r19, r23
     860:	2a 31       	cpi	r18, 0x1A	; 26
     862:	31 05       	cpc	r19, r1
     864:	2c f0       	brlt	.+10     	; 0x870 <__stack+0x11>
     866:	20 e0       	ldi	r18, 0x00	; 0
     868:	30 e0       	ldi	r19, 0x00	; 0
     86a:	40 e0       	ldi	r20, 0x00	; 0
     86c:	50 e0       	ldi	r21, 0x00	; 0
     86e:	2a c0       	rjmp	.+84     	; 0x8c4 <__stack+0x65>
     870:	b8 01       	movw	r22, r16
     872:	a7 01       	movw	r20, r14
     874:	02 2e       	mov	r0, r18
     876:	04 c0       	rjmp	.+8      	; 0x880 <__stack+0x21>
     878:	76 95       	lsr	r23
     87a:	67 95       	ror	r22
     87c:	57 95       	ror	r21
     87e:	47 95       	ror	r20
     880:	0a 94       	dec	r0
     882:	d2 f7       	brpl	.-12     	; 0x878 <__stack+0x19>
     884:	81 e0       	ldi	r24, 0x01	; 1
     886:	90 e0       	ldi	r25, 0x00	; 0
     888:	a0 e0       	ldi	r26, 0x00	; 0
     88a:	b0 e0       	ldi	r27, 0x00	; 0
     88c:	04 c0       	rjmp	.+8      	; 0x896 <__stack+0x37>
     88e:	88 0f       	add	r24, r24
     890:	99 1f       	adc	r25, r25
     892:	aa 1f       	adc	r26, r26
     894:	bb 1f       	adc	r27, r27
     896:	2a 95       	dec	r18
     898:	d2 f7       	brpl	.-12     	; 0x88e <__stack+0x2f>
     89a:	01 97       	sbiw	r24, 0x01	; 1
     89c:	a1 09       	sbc	r26, r1
     89e:	b1 09       	sbc	r27, r1
     8a0:	8e 21       	and	r24, r14
     8a2:	9f 21       	and	r25, r15
     8a4:	a0 23       	and	r26, r16
     8a6:	b1 23       	and	r27, r17
     8a8:	00 97       	sbiw	r24, 0x00	; 0
     8aa:	a1 05       	cpc	r26, r1
     8ac:	b1 05       	cpc	r27, r1
     8ae:	21 f0       	breq	.+8      	; 0x8b8 <__stack+0x59>
     8b0:	81 e0       	ldi	r24, 0x01	; 1
     8b2:	90 e0       	ldi	r25, 0x00	; 0
     8b4:	a0 e0       	ldi	r26, 0x00	; 0
     8b6:	b0 e0       	ldi	r27, 0x00	; 0
     8b8:	9a 01       	movw	r18, r20
     8ba:	ab 01       	movw	r20, r22
     8bc:	28 2b       	or	r18, r24
     8be:	39 2b       	or	r19, r25
     8c0:	4a 2b       	or	r20, r26
     8c2:	5b 2b       	or	r21, r27
     8c4:	da 01       	movw	r26, r20
     8c6:	c9 01       	movw	r24, r18
     8c8:	8f 77       	andi	r24, 0x7F	; 127
     8ca:	90 70       	andi	r25, 0x00	; 0
     8cc:	a0 70       	andi	r26, 0x00	; 0
     8ce:	b0 70       	andi	r27, 0x00	; 0
     8d0:	80 34       	cpi	r24, 0x40	; 64
     8d2:	91 05       	cpc	r25, r1
     8d4:	a1 05       	cpc	r26, r1
     8d6:	b1 05       	cpc	r27, r1
     8d8:	39 f4       	brne	.+14     	; 0x8e8 <__stack+0x89>
     8da:	27 ff       	sbrs	r18, 7
     8dc:	09 c0       	rjmp	.+18     	; 0x8f0 <__stack+0x91>
     8de:	20 5c       	subi	r18, 0xC0	; 192
     8e0:	3f 4f       	sbci	r19, 0xFF	; 255
     8e2:	4f 4f       	sbci	r20, 0xFF	; 255
     8e4:	5f 4f       	sbci	r21, 0xFF	; 255
     8e6:	04 c0       	rjmp	.+8      	; 0x8f0 <__stack+0x91>
     8e8:	21 5c       	subi	r18, 0xC1	; 193
     8ea:	3f 4f       	sbci	r19, 0xFF	; 255
     8ec:	4f 4f       	sbci	r20, 0xFF	; 255
     8ee:	5f 4f       	sbci	r21, 0xFF	; 255
     8f0:	e0 e0       	ldi	r30, 0x00	; 0
     8f2:	f0 e0       	ldi	r31, 0x00	; 0
     8f4:	20 30       	cpi	r18, 0x00	; 0
     8f6:	a0 e0       	ldi	r26, 0x00	; 0
     8f8:	3a 07       	cpc	r19, r26
     8fa:	a0 e0       	ldi	r26, 0x00	; 0
     8fc:	4a 07       	cpc	r20, r26
     8fe:	a0 e4       	ldi	r26, 0x40	; 64
     900:	5a 07       	cpc	r21, r26
     902:	10 f0       	brcs	.+4      	; 0x908 <__stack+0xa9>
     904:	e1 e0       	ldi	r30, 0x01	; 1
     906:	f0 e0       	ldi	r31, 0x00	; 0
     908:	79 01       	movw	r14, r18
     90a:	8a 01       	movw	r16, r20
     90c:	27 c0       	rjmp	.+78     	; 0x95c <__stack+0xfd>
     90e:	60 38       	cpi	r22, 0x80	; 128
     910:	71 05       	cpc	r23, r1
     912:	64 f5       	brge	.+88     	; 0x96c <__stack+0x10d>
     914:	fb 01       	movw	r30, r22
     916:	e1 58       	subi	r30, 0x81	; 129
     918:	ff 4f       	sbci	r31, 0xFF	; 255
     91a:	d8 01       	movw	r26, r16
     91c:	c7 01       	movw	r24, r14
     91e:	8f 77       	andi	r24, 0x7F	; 127
     920:	90 70       	andi	r25, 0x00	; 0
     922:	a0 70       	andi	r26, 0x00	; 0
     924:	b0 70       	andi	r27, 0x00	; 0
     926:	80 34       	cpi	r24, 0x40	; 64
     928:	91 05       	cpc	r25, r1
     92a:	a1 05       	cpc	r26, r1
     92c:	b1 05       	cpc	r27, r1
     92e:	39 f4       	brne	.+14     	; 0x93e <__stack+0xdf>
     930:	e7 fe       	sbrs	r14, 7
     932:	0d c0       	rjmp	.+26     	; 0x94e <__stack+0xef>
     934:	80 e4       	ldi	r24, 0x40	; 64
     936:	90 e0       	ldi	r25, 0x00	; 0
     938:	a0 e0       	ldi	r26, 0x00	; 0
     93a:	b0 e0       	ldi	r27, 0x00	; 0
     93c:	04 c0       	rjmp	.+8      	; 0x946 <__stack+0xe7>
     93e:	8f e3       	ldi	r24, 0x3F	; 63
     940:	90 e0       	ldi	r25, 0x00	; 0
     942:	a0 e0       	ldi	r26, 0x00	; 0
     944:	b0 e0       	ldi	r27, 0x00	; 0
     946:	e8 0e       	add	r14, r24
     948:	f9 1e       	adc	r15, r25
     94a:	0a 1f       	adc	r16, r26
     94c:	1b 1f       	adc	r17, r27
     94e:	17 ff       	sbrs	r17, 7
     950:	05 c0       	rjmp	.+10     	; 0x95c <__stack+0xfd>
     952:	16 95       	lsr	r17
     954:	07 95       	ror	r16
     956:	f7 94       	ror	r15
     958:	e7 94       	ror	r14
     95a:	31 96       	adiw	r30, 0x01	; 1
     95c:	87 e0       	ldi	r24, 0x07	; 7
     95e:	16 95       	lsr	r17
     960:	07 95       	ror	r16
     962:	f7 94       	ror	r15
     964:	e7 94       	ror	r14
     966:	8a 95       	dec	r24
     968:	d1 f7       	brne	.-12     	; 0x95e <__stack+0xff>
     96a:	05 c0       	rjmp	.+10     	; 0x976 <__stack+0x117>
     96c:	ee 24       	eor	r14, r14
     96e:	ff 24       	eor	r15, r15
     970:	87 01       	movw	r16, r14
     972:	ef ef       	ldi	r30, 0xFF	; 255
     974:	f0 e0       	ldi	r31, 0x00	; 0
     976:	6e 2f       	mov	r22, r30
     978:	67 95       	ror	r22
     97a:	66 27       	eor	r22, r22
     97c:	67 95       	ror	r22
     97e:	90 2f       	mov	r25, r16
     980:	9f 77       	andi	r25, 0x7F	; 127
     982:	d7 94       	ror	r13
     984:	dd 24       	eor	r13, r13
     986:	d7 94       	ror	r13
     988:	8e 2f       	mov	r24, r30
     98a:	86 95       	lsr	r24
     98c:	49 2f       	mov	r20, r25
     98e:	46 2b       	or	r20, r22
     990:	58 2f       	mov	r21, r24
     992:	5d 29       	or	r21, r13
     994:	b7 01       	movw	r22, r14
     996:	ca 01       	movw	r24, r20
     998:	1f 91       	pop	r17
     99a:	0f 91       	pop	r16
     99c:	ff 90       	pop	r15
     99e:	ef 90       	pop	r14
     9a0:	df 90       	pop	r13
     9a2:	08 95       	ret

000009a4 <__unpack_f>:
     9a4:	fc 01       	movw	r30, r24
     9a6:	db 01       	movw	r26, r22
     9a8:	40 81       	ld	r20, Z
     9aa:	51 81       	ldd	r21, Z+1	; 0x01
     9ac:	22 81       	ldd	r18, Z+2	; 0x02
     9ae:	62 2f       	mov	r22, r18
     9b0:	6f 77       	andi	r22, 0x7F	; 127
     9b2:	70 e0       	ldi	r23, 0x00	; 0
     9b4:	22 1f       	adc	r18, r18
     9b6:	22 27       	eor	r18, r18
     9b8:	22 1f       	adc	r18, r18
     9ba:	93 81       	ldd	r25, Z+3	; 0x03
     9bc:	89 2f       	mov	r24, r25
     9be:	88 0f       	add	r24, r24
     9c0:	82 2b       	or	r24, r18
     9c2:	28 2f       	mov	r18, r24
     9c4:	30 e0       	ldi	r19, 0x00	; 0
     9c6:	99 1f       	adc	r25, r25
     9c8:	99 27       	eor	r25, r25
     9ca:	99 1f       	adc	r25, r25
     9cc:	11 96       	adiw	r26, 0x01	; 1
     9ce:	9c 93       	st	X, r25
     9d0:	11 97       	sbiw	r26, 0x01	; 1
     9d2:	21 15       	cp	r18, r1
     9d4:	31 05       	cpc	r19, r1
     9d6:	a9 f5       	brne	.+106    	; 0xa42 <__unpack_f+0x9e>
     9d8:	41 15       	cp	r20, r1
     9da:	51 05       	cpc	r21, r1
     9dc:	61 05       	cpc	r22, r1
     9de:	71 05       	cpc	r23, r1
     9e0:	11 f4       	brne	.+4      	; 0x9e6 <__unpack_f+0x42>
     9e2:	82 e0       	ldi	r24, 0x02	; 2
     9e4:	37 c0       	rjmp	.+110    	; 0xa54 <__unpack_f+0xb0>
     9e6:	82 e8       	ldi	r24, 0x82	; 130
     9e8:	9f ef       	ldi	r25, 0xFF	; 255
     9ea:	13 96       	adiw	r26, 0x03	; 3
     9ec:	9c 93       	st	X, r25
     9ee:	8e 93       	st	-X, r24
     9f0:	12 97       	sbiw	r26, 0x02	; 2
     9f2:	9a 01       	movw	r18, r20
     9f4:	ab 01       	movw	r20, r22
     9f6:	67 e0       	ldi	r22, 0x07	; 7
     9f8:	22 0f       	add	r18, r18
     9fa:	33 1f       	adc	r19, r19
     9fc:	44 1f       	adc	r20, r20
     9fe:	55 1f       	adc	r21, r21
     a00:	6a 95       	dec	r22
     a02:	d1 f7       	brne	.-12     	; 0x9f8 <__unpack_f+0x54>
     a04:	83 e0       	ldi	r24, 0x03	; 3
     a06:	8c 93       	st	X, r24
     a08:	0d c0       	rjmp	.+26     	; 0xa24 <__unpack_f+0x80>
     a0a:	22 0f       	add	r18, r18
     a0c:	33 1f       	adc	r19, r19
     a0e:	44 1f       	adc	r20, r20
     a10:	55 1f       	adc	r21, r21
     a12:	12 96       	adiw	r26, 0x02	; 2
     a14:	8d 91       	ld	r24, X+
     a16:	9c 91       	ld	r25, X
     a18:	13 97       	sbiw	r26, 0x03	; 3
     a1a:	01 97       	sbiw	r24, 0x01	; 1
     a1c:	13 96       	adiw	r26, 0x03	; 3
     a1e:	9c 93       	st	X, r25
     a20:	8e 93       	st	-X, r24
     a22:	12 97       	sbiw	r26, 0x02	; 2
     a24:	20 30       	cpi	r18, 0x00	; 0
     a26:	80 e0       	ldi	r24, 0x00	; 0
     a28:	38 07       	cpc	r19, r24
     a2a:	80 e0       	ldi	r24, 0x00	; 0
     a2c:	48 07       	cpc	r20, r24
     a2e:	80 e4       	ldi	r24, 0x40	; 64
     a30:	58 07       	cpc	r21, r24
     a32:	58 f3       	brcs	.-42     	; 0xa0a <__unpack_f+0x66>
     a34:	14 96       	adiw	r26, 0x04	; 4
     a36:	2d 93       	st	X+, r18
     a38:	3d 93       	st	X+, r19
     a3a:	4d 93       	st	X+, r20
     a3c:	5c 93       	st	X, r21
     a3e:	17 97       	sbiw	r26, 0x07	; 7
     a40:	08 95       	ret
     a42:	2f 3f       	cpi	r18, 0xFF	; 255
     a44:	31 05       	cpc	r19, r1
     a46:	79 f4       	brne	.+30     	; 0xa66 <__unpack_f+0xc2>
     a48:	41 15       	cp	r20, r1
     a4a:	51 05       	cpc	r21, r1
     a4c:	61 05       	cpc	r22, r1
     a4e:	71 05       	cpc	r23, r1
     a50:	19 f4       	brne	.+6      	; 0xa58 <__unpack_f+0xb4>
     a52:	84 e0       	ldi	r24, 0x04	; 4
     a54:	8c 93       	st	X, r24
     a56:	08 95       	ret
     a58:	64 ff       	sbrs	r22, 4
     a5a:	03 c0       	rjmp	.+6      	; 0xa62 <__unpack_f+0xbe>
     a5c:	81 e0       	ldi	r24, 0x01	; 1
     a5e:	8c 93       	st	X, r24
     a60:	12 c0       	rjmp	.+36     	; 0xa86 <__unpack_f+0xe2>
     a62:	1c 92       	st	X, r1
     a64:	10 c0       	rjmp	.+32     	; 0xa86 <__unpack_f+0xe2>
     a66:	2f 57       	subi	r18, 0x7F	; 127
     a68:	30 40       	sbci	r19, 0x00	; 0
     a6a:	13 96       	adiw	r26, 0x03	; 3
     a6c:	3c 93       	st	X, r19
     a6e:	2e 93       	st	-X, r18
     a70:	12 97       	sbiw	r26, 0x02	; 2
     a72:	83 e0       	ldi	r24, 0x03	; 3
     a74:	8c 93       	st	X, r24
     a76:	87 e0       	ldi	r24, 0x07	; 7
     a78:	44 0f       	add	r20, r20
     a7a:	55 1f       	adc	r21, r21
     a7c:	66 1f       	adc	r22, r22
     a7e:	77 1f       	adc	r23, r23
     a80:	8a 95       	dec	r24
     a82:	d1 f7       	brne	.-12     	; 0xa78 <__unpack_f+0xd4>
     a84:	70 64       	ori	r23, 0x40	; 64
     a86:	14 96       	adiw	r26, 0x04	; 4
     a88:	4d 93       	st	X+, r20
     a8a:	5d 93       	st	X+, r21
     a8c:	6d 93       	st	X+, r22
     a8e:	7c 93       	st	X, r23
     a90:	17 97       	sbiw	r26, 0x07	; 7
     a92:	08 95       	ret

00000a94 <__fpcmp_parts_f>:
     a94:	1f 93       	push	r17
     a96:	dc 01       	movw	r26, r24
     a98:	fb 01       	movw	r30, r22
     a9a:	9c 91       	ld	r25, X
     a9c:	92 30       	cpi	r25, 0x02	; 2
     a9e:	08 f4       	brcc	.+2      	; 0xaa2 <__fpcmp_parts_f+0xe>
     aa0:	47 c0       	rjmp	.+142    	; 0xb30 <__fpcmp_parts_f+0x9c>
     aa2:	80 81       	ld	r24, Z
     aa4:	82 30       	cpi	r24, 0x02	; 2
     aa6:	08 f4       	brcc	.+2      	; 0xaaa <__fpcmp_parts_f+0x16>
     aa8:	43 c0       	rjmp	.+134    	; 0xb30 <__fpcmp_parts_f+0x9c>
     aaa:	94 30       	cpi	r25, 0x04	; 4
     aac:	51 f4       	brne	.+20     	; 0xac2 <__fpcmp_parts_f+0x2e>
     aae:	11 96       	adiw	r26, 0x01	; 1
     ab0:	1c 91       	ld	r17, X
     ab2:	84 30       	cpi	r24, 0x04	; 4
     ab4:	99 f5       	brne	.+102    	; 0xb1c <__fpcmp_parts_f+0x88>
     ab6:	81 81       	ldd	r24, Z+1	; 0x01
     ab8:	68 2f       	mov	r22, r24
     aba:	70 e0       	ldi	r23, 0x00	; 0
     abc:	61 1b       	sub	r22, r17
     abe:	71 09       	sbc	r23, r1
     ac0:	3f c0       	rjmp	.+126    	; 0xb40 <__fpcmp_parts_f+0xac>
     ac2:	84 30       	cpi	r24, 0x04	; 4
     ac4:	21 f0       	breq	.+8      	; 0xace <__fpcmp_parts_f+0x3a>
     ac6:	92 30       	cpi	r25, 0x02	; 2
     ac8:	31 f4       	brne	.+12     	; 0xad6 <__fpcmp_parts_f+0x42>
     aca:	82 30       	cpi	r24, 0x02	; 2
     acc:	b9 f1       	breq	.+110    	; 0xb3c <__fpcmp_parts_f+0xa8>
     ace:	81 81       	ldd	r24, Z+1	; 0x01
     ad0:	88 23       	and	r24, r24
     ad2:	89 f1       	breq	.+98     	; 0xb36 <__fpcmp_parts_f+0xa2>
     ad4:	2d c0       	rjmp	.+90     	; 0xb30 <__fpcmp_parts_f+0x9c>
     ad6:	11 96       	adiw	r26, 0x01	; 1
     ad8:	1c 91       	ld	r17, X
     ada:	11 97       	sbiw	r26, 0x01	; 1
     adc:	82 30       	cpi	r24, 0x02	; 2
     ade:	f1 f0       	breq	.+60     	; 0xb1c <__fpcmp_parts_f+0x88>
     ae0:	81 81       	ldd	r24, Z+1	; 0x01
     ae2:	18 17       	cp	r17, r24
     ae4:	d9 f4       	brne	.+54     	; 0xb1c <__fpcmp_parts_f+0x88>
     ae6:	12 96       	adiw	r26, 0x02	; 2
     ae8:	2d 91       	ld	r18, X+
     aea:	3c 91       	ld	r19, X
     aec:	13 97       	sbiw	r26, 0x03	; 3
     aee:	82 81       	ldd	r24, Z+2	; 0x02
     af0:	93 81       	ldd	r25, Z+3	; 0x03
     af2:	82 17       	cp	r24, r18
     af4:	93 07       	cpc	r25, r19
     af6:	94 f0       	brlt	.+36     	; 0xb1c <__fpcmp_parts_f+0x88>
     af8:	28 17       	cp	r18, r24
     afa:	39 07       	cpc	r19, r25
     afc:	bc f0       	brlt	.+46     	; 0xb2c <__fpcmp_parts_f+0x98>
     afe:	14 96       	adiw	r26, 0x04	; 4
     b00:	8d 91       	ld	r24, X+
     b02:	9d 91       	ld	r25, X+
     b04:	0d 90       	ld	r0, X+
     b06:	bc 91       	ld	r27, X
     b08:	a0 2d       	mov	r26, r0
     b0a:	24 81       	ldd	r18, Z+4	; 0x04
     b0c:	35 81       	ldd	r19, Z+5	; 0x05
     b0e:	46 81       	ldd	r20, Z+6	; 0x06
     b10:	57 81       	ldd	r21, Z+7	; 0x07
     b12:	28 17       	cp	r18, r24
     b14:	39 07       	cpc	r19, r25
     b16:	4a 07       	cpc	r20, r26
     b18:	5b 07       	cpc	r21, r27
     b1a:	18 f4       	brcc	.+6      	; 0xb22 <__fpcmp_parts_f+0x8e>
     b1c:	11 23       	and	r17, r17
     b1e:	41 f0       	breq	.+16     	; 0xb30 <__fpcmp_parts_f+0x9c>
     b20:	0a c0       	rjmp	.+20     	; 0xb36 <__fpcmp_parts_f+0xa2>
     b22:	82 17       	cp	r24, r18
     b24:	93 07       	cpc	r25, r19
     b26:	a4 07       	cpc	r26, r20
     b28:	b5 07       	cpc	r27, r21
     b2a:	40 f4       	brcc	.+16     	; 0xb3c <__fpcmp_parts_f+0xa8>
     b2c:	11 23       	and	r17, r17
     b2e:	19 f0       	breq	.+6      	; 0xb36 <__fpcmp_parts_f+0xa2>
     b30:	61 e0       	ldi	r22, 0x01	; 1
     b32:	70 e0       	ldi	r23, 0x00	; 0
     b34:	05 c0       	rjmp	.+10     	; 0xb40 <__fpcmp_parts_f+0xac>
     b36:	6f ef       	ldi	r22, 0xFF	; 255
     b38:	7f ef       	ldi	r23, 0xFF	; 255
     b3a:	02 c0       	rjmp	.+4      	; 0xb40 <__fpcmp_parts_f+0xac>
     b3c:	60 e0       	ldi	r22, 0x00	; 0
     b3e:	70 e0       	ldi	r23, 0x00	; 0
     b40:	cb 01       	movw	r24, r22
     b42:	1f 91       	pop	r17
     b44:	08 95       	ret

00000b46 <show_segments>:
volatile unsigned char timer_mode_flag = 1;
volatile unsigned char ISR_countUp_flag = 0;
volatile unsigned char ISR_countDown_flag = 0;
volatile unsigned char countdown_done_flag = 0;

void show_segments(void) {
     b46:	0f 93       	push	r16
     b48:	1f 93       	push	r17
     b4a:	df 93       	push	r29
     b4c:	cf 93       	push	r28
     b4e:	cd b7       	in	r28, 0x3d	; 61
     b50:	de b7       	in	r29, 0x3e	; 62
     b52:	c4 55       	subi	r28, 0x54	; 84
     b54:	d0 40       	sbci	r29, 0x00	; 0
     b56:	0f b6       	in	r0, 0x3f	; 63
     b58:	f8 94       	cli
     b5a:	de bf       	out	0x3e, r29	; 62
     b5c:	0f be       	out	0x3f, r0	; 63
     b5e:	cd bf       	out	0x3d, r28	; 61

	PORTA = (1 << 0);
     b60:	eb e3       	ldi	r30, 0x3B	; 59
     b62:	f0 e0       	ldi	r31, 0x00	; 0
     b64:	81 e0       	ldi	r24, 0x01	; 1
     b66:	80 83       	st	Z, r24
	PORTC = (PORTC & 0xF0) | (sec0 & 0x0F);
     b68:	a5 e3       	ldi	r26, 0x35	; 53
     b6a:	b0 e0       	ldi	r27, 0x00	; 0
     b6c:	e5 e3       	ldi	r30, 0x35	; 53
     b6e:	f0 e0       	ldi	r31, 0x00	; 0
     b70:	80 81       	ld	r24, Z
     b72:	28 2f       	mov	r18, r24
     b74:	20 7f       	andi	r18, 0xF0	; 240
     b76:	80 91 6a 00 	lds	r24, 0x006A
     b7a:	90 91 6b 00 	lds	r25, 0x006B
     b7e:	8f 70       	andi	r24, 0x0F	; 15
     b80:	82 2b       	or	r24, r18
     b82:	8c 93       	st	X, r24
     b84:	fe 01       	movw	r30, r28
     b86:	ef 5a       	subi	r30, 0xAF	; 175
     b88:	ff 4f       	sbci	r31, 0xFF	; 255
     b8a:	80 e0       	ldi	r24, 0x00	; 0
     b8c:	90 e0       	ldi	r25, 0x00	; 0
     b8e:	a0 ea       	ldi	r26, 0xA0	; 160
     b90:	b0 e4       	ldi	r27, 0x40	; 64
     b92:	80 83       	st	Z, r24
     b94:	91 83       	std	Z+1, r25	; 0x01
     b96:	a2 83       	std	Z+2, r26	; 0x02
     b98:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     b9a:	8e 01       	movw	r16, r28
     b9c:	03 5b       	subi	r16, 0xB3	; 179
     b9e:	1f 4f       	sbci	r17, 0xFF	; 255
     ba0:	fe 01       	movw	r30, r28
     ba2:	ef 5a       	subi	r30, 0xAF	; 175
     ba4:	ff 4f       	sbci	r31, 0xFF	; 255
     ba6:	60 81       	ld	r22, Z
     ba8:	71 81       	ldd	r23, Z+1	; 0x01
     baa:	82 81       	ldd	r24, Z+2	; 0x02
     bac:	93 81       	ldd	r25, Z+3	; 0x03
     bae:	20 e0       	ldi	r18, 0x00	; 0
     bb0:	30 e0       	ldi	r19, 0x00	; 0
     bb2:	4a e7       	ldi	r20, 0x7A	; 122
     bb4:	55 e4       	ldi	r21, 0x45	; 69
     bb6:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
     bba:	dc 01       	movw	r26, r24
     bbc:	cb 01       	movw	r24, r22
     bbe:	f8 01       	movw	r30, r16
     bc0:	80 83       	st	Z, r24
     bc2:	91 83       	std	Z+1, r25	; 0x01
     bc4:	a2 83       	std	Z+2, r26	; 0x02
     bc6:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
     bc8:	fe 01       	movw	r30, r28
     bca:	e3 5b       	subi	r30, 0xB3	; 179
     bcc:	ff 4f       	sbci	r31, 0xFF	; 255
     bce:	60 81       	ld	r22, Z
     bd0:	71 81       	ldd	r23, Z+1	; 0x01
     bd2:	82 81       	ldd	r24, Z+2	; 0x02
     bd4:	93 81       	ldd	r25, Z+3	; 0x03
     bd6:	20 e0       	ldi	r18, 0x00	; 0
     bd8:	30 e0       	ldi	r19, 0x00	; 0
     bda:	40 e8       	ldi	r20, 0x80	; 128
     bdc:	5f e3       	ldi	r21, 0x3F	; 63
     bde:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
     be2:	88 23       	and	r24, r24
     be4:	44 f4       	brge	.+16     	; 0xbf6 <show_segments+0xb0>
		__ticks = 1;
     be6:	fe 01       	movw	r30, r28
     be8:	e5 5b       	subi	r30, 0xB5	; 181
     bea:	ff 4f       	sbci	r31, 0xFF	; 255
     bec:	81 e0       	ldi	r24, 0x01	; 1
     bee:	90 e0       	ldi	r25, 0x00	; 0
     bf0:	91 83       	std	Z+1, r25	; 0x01
     bf2:	80 83       	st	Z, r24
     bf4:	64 c0       	rjmp	.+200    	; 0xcbe <show_segments+0x178>
	else if (__tmp > 65535)
     bf6:	fe 01       	movw	r30, r28
     bf8:	e3 5b       	subi	r30, 0xB3	; 179
     bfa:	ff 4f       	sbci	r31, 0xFF	; 255
     bfc:	60 81       	ld	r22, Z
     bfe:	71 81       	ldd	r23, Z+1	; 0x01
     c00:	82 81       	ldd	r24, Z+2	; 0x02
     c02:	93 81       	ldd	r25, Z+3	; 0x03
     c04:	20 e0       	ldi	r18, 0x00	; 0
     c06:	3f ef       	ldi	r19, 0xFF	; 255
     c08:	4f e7       	ldi	r20, 0x7F	; 127
     c0a:	57 e4       	ldi	r21, 0x47	; 71
     c0c:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
     c10:	18 16       	cp	r1, r24
     c12:	0c f0       	brlt	.+2      	; 0xc16 <show_segments+0xd0>
     c14:	43 c0       	rjmp	.+134    	; 0xc9c <show_segments+0x156>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     c16:	fe 01       	movw	r30, r28
     c18:	ef 5a       	subi	r30, 0xAF	; 175
     c1a:	ff 4f       	sbci	r31, 0xFF	; 255
     c1c:	60 81       	ld	r22, Z
     c1e:	71 81       	ldd	r23, Z+1	; 0x01
     c20:	82 81       	ldd	r24, Z+2	; 0x02
     c22:	93 81       	ldd	r25, Z+3	; 0x03
     c24:	20 e0       	ldi	r18, 0x00	; 0
     c26:	30 e0       	ldi	r19, 0x00	; 0
     c28:	40 e2       	ldi	r20, 0x20	; 32
     c2a:	51 e4       	ldi	r21, 0x41	; 65
     c2c:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
     c30:	dc 01       	movw	r26, r24
     c32:	cb 01       	movw	r24, r22
     c34:	8e 01       	movw	r16, r28
     c36:	05 5b       	subi	r16, 0xB5	; 181
     c38:	1f 4f       	sbci	r17, 0xFF	; 255
     c3a:	bc 01       	movw	r22, r24
     c3c:	cd 01       	movw	r24, r26
     c3e:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
     c42:	dc 01       	movw	r26, r24
     c44:	cb 01       	movw	r24, r22
     c46:	f8 01       	movw	r30, r16
     c48:	91 83       	std	Z+1, r25	; 0x01
     c4a:	80 83       	st	Z, r24
     c4c:	1f c0       	rjmp	.+62     	; 0xc8c <show_segments+0x146>
     c4e:	fe 01       	movw	r30, r28
     c50:	e7 5b       	subi	r30, 0xB7	; 183
     c52:	ff 4f       	sbci	r31, 0xFF	; 255
     c54:	80 e9       	ldi	r24, 0x90	; 144
     c56:	91 e0       	ldi	r25, 0x01	; 1
     c58:	91 83       	std	Z+1, r25	; 0x01
     c5a:	80 83       	st	Z, r24
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     c5c:	fe 01       	movw	r30, r28
     c5e:	e7 5b       	subi	r30, 0xB7	; 183
     c60:	ff 4f       	sbci	r31, 0xFF	; 255
     c62:	80 81       	ld	r24, Z
     c64:	91 81       	ldd	r25, Z+1	; 0x01
     c66:	01 97       	sbiw	r24, 0x01	; 1
     c68:	f1 f7       	brne	.-4      	; 0xc66 <show_segments+0x120>
     c6a:	fe 01       	movw	r30, r28
     c6c:	e7 5b       	subi	r30, 0xB7	; 183
     c6e:	ff 4f       	sbci	r31, 0xFF	; 255
     c70:	91 83       	std	Z+1, r25	; 0x01
     c72:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     c74:	de 01       	movw	r26, r28
     c76:	a5 5b       	subi	r26, 0xB5	; 181
     c78:	bf 4f       	sbci	r27, 0xFF	; 255
     c7a:	fe 01       	movw	r30, r28
     c7c:	e5 5b       	subi	r30, 0xB5	; 181
     c7e:	ff 4f       	sbci	r31, 0xFF	; 255
     c80:	80 81       	ld	r24, Z
     c82:	91 81       	ldd	r25, Z+1	; 0x01
     c84:	01 97       	sbiw	r24, 0x01	; 1
     c86:	11 96       	adiw	r26, 0x01	; 1
     c88:	9c 93       	st	X, r25
     c8a:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     c8c:	fe 01       	movw	r30, r28
     c8e:	e5 5b       	subi	r30, 0xB5	; 181
     c90:	ff 4f       	sbci	r31, 0xFF	; 255
     c92:	80 81       	ld	r24, Z
     c94:	91 81       	ldd	r25, Z+1	; 0x01
     c96:	00 97       	sbiw	r24, 0x00	; 0
     c98:	d1 f6       	brne	.-76     	; 0xc4e <show_segments+0x108>
     c9a:	27 c0       	rjmp	.+78     	; 0xcea <show_segments+0x1a4>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     c9c:	8e 01       	movw	r16, r28
     c9e:	05 5b       	subi	r16, 0xB5	; 181
     ca0:	1f 4f       	sbci	r17, 0xFF	; 255
     ca2:	fe 01       	movw	r30, r28
     ca4:	e3 5b       	subi	r30, 0xB3	; 179
     ca6:	ff 4f       	sbci	r31, 0xFF	; 255
     ca8:	60 81       	ld	r22, Z
     caa:	71 81       	ldd	r23, Z+1	; 0x01
     cac:	82 81       	ldd	r24, Z+2	; 0x02
     cae:	93 81       	ldd	r25, Z+3	; 0x03
     cb0:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
     cb4:	dc 01       	movw	r26, r24
     cb6:	cb 01       	movw	r24, r22
     cb8:	f8 01       	movw	r30, r16
     cba:	91 83       	std	Z+1, r25	; 0x01
     cbc:	80 83       	st	Z, r24
     cbe:	de 01       	movw	r26, r28
     cc0:	a9 5b       	subi	r26, 0xB9	; 185
     cc2:	bf 4f       	sbci	r27, 0xFF	; 255
     cc4:	fe 01       	movw	r30, r28
     cc6:	e5 5b       	subi	r30, 0xB5	; 181
     cc8:	ff 4f       	sbci	r31, 0xFF	; 255
     cca:	80 81       	ld	r24, Z
     ccc:	91 81       	ldd	r25, Z+1	; 0x01
     cce:	8d 93       	st	X+, r24
     cd0:	9c 93       	st	X, r25
     cd2:	fe 01       	movw	r30, r28
     cd4:	e9 5b       	subi	r30, 0xB9	; 185
     cd6:	ff 4f       	sbci	r31, 0xFF	; 255
     cd8:	80 81       	ld	r24, Z
     cda:	91 81       	ldd	r25, Z+1	; 0x01
     cdc:	01 97       	sbiw	r24, 0x01	; 1
     cde:	f1 f7       	brne	.-4      	; 0xcdc <show_segments+0x196>
     ce0:	fe 01       	movw	r30, r28
     ce2:	e9 5b       	subi	r30, 0xB9	; 185
     ce4:	ff 4f       	sbci	r31, 0xFF	; 255
     ce6:	91 83       	std	Z+1, r25	; 0x01
     ce8:	80 83       	st	Z, r24
	_delay_ms(5);
	PORTA = 0;
     cea:	eb e3       	ldi	r30, 0x3B	; 59
     cec:	f0 e0       	ldi	r31, 0x00	; 0
     cee:	10 82       	st	Z, r1

	PORTA = (1 << 1);
     cf0:	eb e3       	ldi	r30, 0x3B	; 59
     cf2:	f0 e0       	ldi	r31, 0x00	; 0
     cf4:	82 e0       	ldi	r24, 0x02	; 2
     cf6:	80 83       	st	Z, r24
	PORTC = (PORTC & 0xF0) | (sec1 & 0x0F);
     cf8:	a5 e3       	ldi	r26, 0x35	; 53
     cfa:	b0 e0       	ldi	r27, 0x00	; 0
     cfc:	e5 e3       	ldi	r30, 0x35	; 53
     cfe:	f0 e0       	ldi	r31, 0x00	; 0
     d00:	80 81       	ld	r24, Z
     d02:	28 2f       	mov	r18, r24
     d04:	20 7f       	andi	r18, 0xF0	; 240
     d06:	80 91 6c 00 	lds	r24, 0x006C
     d0a:	90 91 6d 00 	lds	r25, 0x006D
     d0e:	8f 70       	andi	r24, 0x0F	; 15
     d10:	82 2b       	or	r24, r18
     d12:	8c 93       	st	X, r24
     d14:	fe 01       	movw	r30, r28
     d16:	ed 5b       	subi	r30, 0xBD	; 189
     d18:	ff 4f       	sbci	r31, 0xFF	; 255
     d1a:	80 e0       	ldi	r24, 0x00	; 0
     d1c:	90 e0       	ldi	r25, 0x00	; 0
     d1e:	a0 ea       	ldi	r26, 0xA0	; 160
     d20:	b0 e4       	ldi	r27, 0x40	; 64
     d22:	80 83       	st	Z, r24
     d24:	91 83       	std	Z+1, r25	; 0x01
     d26:	a2 83       	std	Z+2, r26	; 0x02
     d28:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     d2a:	8e 01       	movw	r16, r28
     d2c:	01 5c       	subi	r16, 0xC1	; 193
     d2e:	1f 4f       	sbci	r17, 0xFF	; 255
     d30:	fe 01       	movw	r30, r28
     d32:	ed 5b       	subi	r30, 0xBD	; 189
     d34:	ff 4f       	sbci	r31, 0xFF	; 255
     d36:	60 81       	ld	r22, Z
     d38:	71 81       	ldd	r23, Z+1	; 0x01
     d3a:	82 81       	ldd	r24, Z+2	; 0x02
     d3c:	93 81       	ldd	r25, Z+3	; 0x03
     d3e:	20 e0       	ldi	r18, 0x00	; 0
     d40:	30 e0       	ldi	r19, 0x00	; 0
     d42:	4a e7       	ldi	r20, 0x7A	; 122
     d44:	55 e4       	ldi	r21, 0x45	; 69
     d46:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
     d4a:	dc 01       	movw	r26, r24
     d4c:	cb 01       	movw	r24, r22
     d4e:	f8 01       	movw	r30, r16
     d50:	80 83       	st	Z, r24
     d52:	91 83       	std	Z+1, r25	; 0x01
     d54:	a2 83       	std	Z+2, r26	; 0x02
     d56:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
     d58:	fe 01       	movw	r30, r28
     d5a:	ff 96       	adiw	r30, 0x3f	; 63
     d5c:	60 81       	ld	r22, Z
     d5e:	71 81       	ldd	r23, Z+1	; 0x01
     d60:	82 81       	ldd	r24, Z+2	; 0x02
     d62:	93 81       	ldd	r25, Z+3	; 0x03
     d64:	20 e0       	ldi	r18, 0x00	; 0
     d66:	30 e0       	ldi	r19, 0x00	; 0
     d68:	40 e8       	ldi	r20, 0x80	; 128
     d6a:	5f e3       	ldi	r21, 0x3F	; 63
     d6c:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
     d70:	88 23       	and	r24, r24
     d72:	2c f4       	brge	.+10     	; 0xd7e <show_segments+0x238>
		__ticks = 1;
     d74:	81 e0       	ldi	r24, 0x01	; 1
     d76:	90 e0       	ldi	r25, 0x00	; 0
     d78:	9e af       	std	Y+62, r25	; 0x3e
     d7a:	8d af       	std	Y+61, r24	; 0x3d
     d7c:	46 c0       	rjmp	.+140    	; 0xe0a <show_segments+0x2c4>
	else if (__tmp > 65535)
     d7e:	fe 01       	movw	r30, r28
     d80:	ff 96       	adiw	r30, 0x3f	; 63
     d82:	60 81       	ld	r22, Z
     d84:	71 81       	ldd	r23, Z+1	; 0x01
     d86:	82 81       	ldd	r24, Z+2	; 0x02
     d88:	93 81       	ldd	r25, Z+3	; 0x03
     d8a:	20 e0       	ldi	r18, 0x00	; 0
     d8c:	3f ef       	ldi	r19, 0xFF	; 255
     d8e:	4f e7       	ldi	r20, 0x7F	; 127
     d90:	57 e4       	ldi	r21, 0x47	; 71
     d92:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
     d96:	18 16       	cp	r1, r24
     d98:	64 f5       	brge	.+88     	; 0xdf2 <show_segments+0x2ac>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     d9a:	fe 01       	movw	r30, r28
     d9c:	ed 5b       	subi	r30, 0xBD	; 189
     d9e:	ff 4f       	sbci	r31, 0xFF	; 255
     da0:	60 81       	ld	r22, Z
     da2:	71 81       	ldd	r23, Z+1	; 0x01
     da4:	82 81       	ldd	r24, Z+2	; 0x02
     da6:	93 81       	ldd	r25, Z+3	; 0x03
     da8:	20 e0       	ldi	r18, 0x00	; 0
     daa:	30 e0       	ldi	r19, 0x00	; 0
     dac:	40 e2       	ldi	r20, 0x20	; 32
     dae:	51 e4       	ldi	r21, 0x41	; 65
     db0:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
     db4:	dc 01       	movw	r26, r24
     db6:	cb 01       	movw	r24, r22
     db8:	bc 01       	movw	r22, r24
     dba:	cd 01       	movw	r24, r26
     dbc:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
     dc0:	dc 01       	movw	r26, r24
     dc2:	cb 01       	movw	r24, r22
     dc4:	9e af       	std	Y+62, r25	; 0x3e
     dc6:	8d af       	std	Y+61, r24	; 0x3d
     dc8:	0f c0       	rjmp	.+30     	; 0xde8 <show_segments+0x2a2>
     dca:	80 e9       	ldi	r24, 0x90	; 144
     dcc:	91 e0       	ldi	r25, 0x01	; 1
     dce:	9c af       	std	Y+60, r25	; 0x3c
     dd0:	8b af       	std	Y+59, r24	; 0x3b
     dd2:	8b ad       	ldd	r24, Y+59	; 0x3b
     dd4:	9c ad       	ldd	r25, Y+60	; 0x3c
     dd6:	01 97       	sbiw	r24, 0x01	; 1
     dd8:	f1 f7       	brne	.-4      	; 0xdd6 <show_segments+0x290>
     dda:	9c af       	std	Y+60, r25	; 0x3c
     ddc:	8b af       	std	Y+59, r24	; 0x3b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     dde:	8d ad       	ldd	r24, Y+61	; 0x3d
     de0:	9e ad       	ldd	r25, Y+62	; 0x3e
     de2:	01 97       	sbiw	r24, 0x01	; 1
     de4:	9e af       	std	Y+62, r25	; 0x3e
     de6:	8d af       	std	Y+61, r24	; 0x3d
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     de8:	8d ad       	ldd	r24, Y+61	; 0x3d
     dea:	9e ad       	ldd	r25, Y+62	; 0x3e
     dec:	00 97       	sbiw	r24, 0x00	; 0
     dee:	69 f7       	brne	.-38     	; 0xdca <show_segments+0x284>
     df0:	16 c0       	rjmp	.+44     	; 0xe1e <show_segments+0x2d8>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     df2:	fe 01       	movw	r30, r28
     df4:	ff 96       	adiw	r30, 0x3f	; 63
     df6:	60 81       	ld	r22, Z
     df8:	71 81       	ldd	r23, Z+1	; 0x01
     dfa:	82 81       	ldd	r24, Z+2	; 0x02
     dfc:	93 81       	ldd	r25, Z+3	; 0x03
     dfe:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
     e02:	dc 01       	movw	r26, r24
     e04:	cb 01       	movw	r24, r22
     e06:	9e af       	std	Y+62, r25	; 0x3e
     e08:	8d af       	std	Y+61, r24	; 0x3d
     e0a:	8d ad       	ldd	r24, Y+61	; 0x3d
     e0c:	9e ad       	ldd	r25, Y+62	; 0x3e
     e0e:	9a af       	std	Y+58, r25	; 0x3a
     e10:	89 af       	std	Y+57, r24	; 0x39
     e12:	89 ad       	ldd	r24, Y+57	; 0x39
     e14:	9a ad       	ldd	r25, Y+58	; 0x3a
     e16:	01 97       	sbiw	r24, 0x01	; 1
     e18:	f1 f7       	brne	.-4      	; 0xe16 <show_segments+0x2d0>
     e1a:	9a af       	std	Y+58, r25	; 0x3a
     e1c:	89 af       	std	Y+57, r24	; 0x39
	_delay_ms(5);
	PORTA = 0;
     e1e:	eb e3       	ldi	r30, 0x3B	; 59
     e20:	f0 e0       	ldi	r31, 0x00	; 0
     e22:	10 82       	st	Z, r1

	PORTA = (1 << 2);
     e24:	eb e3       	ldi	r30, 0x3B	; 59
     e26:	f0 e0       	ldi	r31, 0x00	; 0
     e28:	84 e0       	ldi	r24, 0x04	; 4
     e2a:	80 83       	st	Z, r24
	PORTC = (PORTC & 0xF0) | (min0 & 0x0F);
     e2c:	a5 e3       	ldi	r26, 0x35	; 53
     e2e:	b0 e0       	ldi	r27, 0x00	; 0
     e30:	e5 e3       	ldi	r30, 0x35	; 53
     e32:	f0 e0       	ldi	r31, 0x00	; 0
     e34:	80 81       	ld	r24, Z
     e36:	28 2f       	mov	r18, r24
     e38:	20 7f       	andi	r18, 0xF0	; 240
     e3a:	80 91 6e 00 	lds	r24, 0x006E
     e3e:	90 91 6f 00 	lds	r25, 0x006F
     e42:	8f 70       	andi	r24, 0x0F	; 15
     e44:	82 2b       	or	r24, r18
     e46:	8c 93       	st	X, r24
     e48:	80 e0       	ldi	r24, 0x00	; 0
     e4a:	90 e0       	ldi	r25, 0x00	; 0
     e4c:	a0 ea       	ldi	r26, 0xA0	; 160
     e4e:	b0 e4       	ldi	r27, 0x40	; 64
     e50:	8d ab       	std	Y+53, r24	; 0x35
     e52:	9e ab       	std	Y+54, r25	; 0x36
     e54:	af ab       	std	Y+55, r26	; 0x37
     e56:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     e58:	6d a9       	ldd	r22, Y+53	; 0x35
     e5a:	7e a9       	ldd	r23, Y+54	; 0x36
     e5c:	8f a9       	ldd	r24, Y+55	; 0x37
     e5e:	98 ad       	ldd	r25, Y+56	; 0x38
     e60:	20 e0       	ldi	r18, 0x00	; 0
     e62:	30 e0       	ldi	r19, 0x00	; 0
     e64:	4a e7       	ldi	r20, 0x7A	; 122
     e66:	55 e4       	ldi	r21, 0x45	; 69
     e68:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
     e6c:	dc 01       	movw	r26, r24
     e6e:	cb 01       	movw	r24, r22
     e70:	89 ab       	std	Y+49, r24	; 0x31
     e72:	9a ab       	std	Y+50, r25	; 0x32
     e74:	ab ab       	std	Y+51, r26	; 0x33
     e76:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
     e78:	69 a9       	ldd	r22, Y+49	; 0x31
     e7a:	7a a9       	ldd	r23, Y+50	; 0x32
     e7c:	8b a9       	ldd	r24, Y+51	; 0x33
     e7e:	9c a9       	ldd	r25, Y+52	; 0x34
     e80:	20 e0       	ldi	r18, 0x00	; 0
     e82:	30 e0       	ldi	r19, 0x00	; 0
     e84:	40 e8       	ldi	r20, 0x80	; 128
     e86:	5f e3       	ldi	r21, 0x3F	; 63
     e88:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
     e8c:	88 23       	and	r24, r24
     e8e:	2c f4       	brge	.+10     	; 0xe9a <show_segments+0x354>
		__ticks = 1;
     e90:	81 e0       	ldi	r24, 0x01	; 1
     e92:	90 e0       	ldi	r25, 0x00	; 0
     e94:	98 ab       	std	Y+48, r25	; 0x30
     e96:	8f a7       	std	Y+47, r24	; 0x2f
     e98:	3f c0       	rjmp	.+126    	; 0xf18 <show_segments+0x3d2>
	else if (__tmp > 65535)
     e9a:	69 a9       	ldd	r22, Y+49	; 0x31
     e9c:	7a a9       	ldd	r23, Y+50	; 0x32
     e9e:	8b a9       	ldd	r24, Y+51	; 0x33
     ea0:	9c a9       	ldd	r25, Y+52	; 0x34
     ea2:	20 e0       	ldi	r18, 0x00	; 0
     ea4:	3f ef       	ldi	r19, 0xFF	; 255
     ea6:	4f e7       	ldi	r20, 0x7F	; 127
     ea8:	57 e4       	ldi	r21, 0x47	; 71
     eaa:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
     eae:	18 16       	cp	r1, r24
     eb0:	4c f5       	brge	.+82     	; 0xf04 <show_segments+0x3be>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     eb2:	6d a9       	ldd	r22, Y+53	; 0x35
     eb4:	7e a9       	ldd	r23, Y+54	; 0x36
     eb6:	8f a9       	ldd	r24, Y+55	; 0x37
     eb8:	98 ad       	ldd	r25, Y+56	; 0x38
     eba:	20 e0       	ldi	r18, 0x00	; 0
     ebc:	30 e0       	ldi	r19, 0x00	; 0
     ebe:	40 e2       	ldi	r20, 0x20	; 32
     ec0:	51 e4       	ldi	r21, 0x41	; 65
     ec2:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
     ec6:	dc 01       	movw	r26, r24
     ec8:	cb 01       	movw	r24, r22
     eca:	bc 01       	movw	r22, r24
     ecc:	cd 01       	movw	r24, r26
     ece:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
     ed2:	dc 01       	movw	r26, r24
     ed4:	cb 01       	movw	r24, r22
     ed6:	98 ab       	std	Y+48, r25	; 0x30
     ed8:	8f a7       	std	Y+47, r24	; 0x2f
     eda:	0f c0       	rjmp	.+30     	; 0xefa <show_segments+0x3b4>
     edc:	80 e9       	ldi	r24, 0x90	; 144
     ede:	91 e0       	ldi	r25, 0x01	; 1
     ee0:	9e a7       	std	Y+46, r25	; 0x2e
     ee2:	8d a7       	std	Y+45, r24	; 0x2d
     ee4:	8d a5       	ldd	r24, Y+45	; 0x2d
     ee6:	9e a5       	ldd	r25, Y+46	; 0x2e
     ee8:	01 97       	sbiw	r24, 0x01	; 1
     eea:	f1 f7       	brne	.-4      	; 0xee8 <show_segments+0x3a2>
     eec:	9e a7       	std	Y+46, r25	; 0x2e
     eee:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     ef0:	8f a5       	ldd	r24, Y+47	; 0x2f
     ef2:	98 a9       	ldd	r25, Y+48	; 0x30
     ef4:	01 97       	sbiw	r24, 0x01	; 1
     ef6:	98 ab       	std	Y+48, r25	; 0x30
     ef8:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     efa:	8f a5       	ldd	r24, Y+47	; 0x2f
     efc:	98 a9       	ldd	r25, Y+48	; 0x30
     efe:	00 97       	sbiw	r24, 0x00	; 0
     f00:	69 f7       	brne	.-38     	; 0xedc <show_segments+0x396>
     f02:	14 c0       	rjmp	.+40     	; 0xf2c <show_segments+0x3e6>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     f04:	69 a9       	ldd	r22, Y+49	; 0x31
     f06:	7a a9       	ldd	r23, Y+50	; 0x32
     f08:	8b a9       	ldd	r24, Y+51	; 0x33
     f0a:	9c a9       	ldd	r25, Y+52	; 0x34
     f0c:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
     f10:	dc 01       	movw	r26, r24
     f12:	cb 01       	movw	r24, r22
     f14:	98 ab       	std	Y+48, r25	; 0x30
     f16:	8f a7       	std	Y+47, r24	; 0x2f
     f18:	8f a5       	ldd	r24, Y+47	; 0x2f
     f1a:	98 a9       	ldd	r25, Y+48	; 0x30
     f1c:	9c a7       	std	Y+44, r25	; 0x2c
     f1e:	8b a7       	std	Y+43, r24	; 0x2b
     f20:	8b a5       	ldd	r24, Y+43	; 0x2b
     f22:	9c a5       	ldd	r25, Y+44	; 0x2c
     f24:	01 97       	sbiw	r24, 0x01	; 1
     f26:	f1 f7       	brne	.-4      	; 0xf24 <show_segments+0x3de>
     f28:	9c a7       	std	Y+44, r25	; 0x2c
     f2a:	8b a7       	std	Y+43, r24	; 0x2b
	_delay_ms(5);
	PORTA = 0;
     f2c:	eb e3       	ldi	r30, 0x3B	; 59
     f2e:	f0 e0       	ldi	r31, 0x00	; 0
     f30:	10 82       	st	Z, r1

	PORTA = (1 << 3);
     f32:	eb e3       	ldi	r30, 0x3B	; 59
     f34:	f0 e0       	ldi	r31, 0x00	; 0
     f36:	88 e0       	ldi	r24, 0x08	; 8
     f38:	80 83       	st	Z, r24
	PORTC = (PORTC & 0xF0) | (min1 & 0x0F);
     f3a:	a5 e3       	ldi	r26, 0x35	; 53
     f3c:	b0 e0       	ldi	r27, 0x00	; 0
     f3e:	e5 e3       	ldi	r30, 0x35	; 53
     f40:	f0 e0       	ldi	r31, 0x00	; 0
     f42:	80 81       	ld	r24, Z
     f44:	28 2f       	mov	r18, r24
     f46:	20 7f       	andi	r18, 0xF0	; 240
     f48:	80 91 70 00 	lds	r24, 0x0070
     f4c:	90 91 71 00 	lds	r25, 0x0071
     f50:	8f 70       	andi	r24, 0x0F	; 15
     f52:	82 2b       	or	r24, r18
     f54:	8c 93       	st	X, r24
     f56:	80 e0       	ldi	r24, 0x00	; 0
     f58:	90 e0       	ldi	r25, 0x00	; 0
     f5a:	a0 ea       	ldi	r26, 0xA0	; 160
     f5c:	b0 e4       	ldi	r27, 0x40	; 64
     f5e:	8f a3       	std	Y+39, r24	; 0x27
     f60:	98 a7       	std	Y+40, r25	; 0x28
     f62:	a9 a7       	std	Y+41, r26	; 0x29
     f64:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     f66:	6f a1       	ldd	r22, Y+39	; 0x27
     f68:	78 a5       	ldd	r23, Y+40	; 0x28
     f6a:	89 a5       	ldd	r24, Y+41	; 0x29
     f6c:	9a a5       	ldd	r25, Y+42	; 0x2a
     f6e:	20 e0       	ldi	r18, 0x00	; 0
     f70:	30 e0       	ldi	r19, 0x00	; 0
     f72:	4a e7       	ldi	r20, 0x7A	; 122
     f74:	55 e4       	ldi	r21, 0x45	; 69
     f76:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
     f7a:	dc 01       	movw	r26, r24
     f7c:	cb 01       	movw	r24, r22
     f7e:	8b a3       	std	Y+35, r24	; 0x23
     f80:	9c a3       	std	Y+36, r25	; 0x24
     f82:	ad a3       	std	Y+37, r26	; 0x25
     f84:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
     f86:	6b a1       	ldd	r22, Y+35	; 0x23
     f88:	7c a1       	ldd	r23, Y+36	; 0x24
     f8a:	8d a1       	ldd	r24, Y+37	; 0x25
     f8c:	9e a1       	ldd	r25, Y+38	; 0x26
     f8e:	20 e0       	ldi	r18, 0x00	; 0
     f90:	30 e0       	ldi	r19, 0x00	; 0
     f92:	40 e8       	ldi	r20, 0x80	; 128
     f94:	5f e3       	ldi	r21, 0x3F	; 63
     f96:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
     f9a:	88 23       	and	r24, r24
     f9c:	2c f4       	brge	.+10     	; 0xfa8 <show_segments+0x462>
		__ticks = 1;
     f9e:	81 e0       	ldi	r24, 0x01	; 1
     fa0:	90 e0       	ldi	r25, 0x00	; 0
     fa2:	9a a3       	std	Y+34, r25	; 0x22
     fa4:	89 a3       	std	Y+33, r24	; 0x21
     fa6:	3f c0       	rjmp	.+126    	; 0x1026 <show_segments+0x4e0>
	else if (__tmp > 65535)
     fa8:	6b a1       	ldd	r22, Y+35	; 0x23
     faa:	7c a1       	ldd	r23, Y+36	; 0x24
     fac:	8d a1       	ldd	r24, Y+37	; 0x25
     fae:	9e a1       	ldd	r25, Y+38	; 0x26
     fb0:	20 e0       	ldi	r18, 0x00	; 0
     fb2:	3f ef       	ldi	r19, 0xFF	; 255
     fb4:	4f e7       	ldi	r20, 0x7F	; 127
     fb6:	57 e4       	ldi	r21, 0x47	; 71
     fb8:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
     fbc:	18 16       	cp	r1, r24
     fbe:	4c f5       	brge	.+82     	; 0x1012 <show_segments+0x4cc>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     fc0:	6f a1       	ldd	r22, Y+39	; 0x27
     fc2:	78 a5       	ldd	r23, Y+40	; 0x28
     fc4:	89 a5       	ldd	r24, Y+41	; 0x29
     fc6:	9a a5       	ldd	r25, Y+42	; 0x2a
     fc8:	20 e0       	ldi	r18, 0x00	; 0
     fca:	30 e0       	ldi	r19, 0x00	; 0
     fcc:	40 e2       	ldi	r20, 0x20	; 32
     fce:	51 e4       	ldi	r21, 0x41	; 65
     fd0:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
     fd4:	dc 01       	movw	r26, r24
     fd6:	cb 01       	movw	r24, r22
     fd8:	bc 01       	movw	r22, r24
     fda:	cd 01       	movw	r24, r26
     fdc:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
     fe0:	dc 01       	movw	r26, r24
     fe2:	cb 01       	movw	r24, r22
     fe4:	9a a3       	std	Y+34, r25	; 0x22
     fe6:	89 a3       	std	Y+33, r24	; 0x21
     fe8:	0f c0       	rjmp	.+30     	; 0x1008 <show_segments+0x4c2>
     fea:	80 e9       	ldi	r24, 0x90	; 144
     fec:	91 e0       	ldi	r25, 0x01	; 1
     fee:	98 a3       	std	Y+32, r25	; 0x20
     ff0:	8f 8f       	std	Y+31, r24	; 0x1f
     ff2:	8f 8d       	ldd	r24, Y+31	; 0x1f
     ff4:	98 a1       	ldd	r25, Y+32	; 0x20
     ff6:	01 97       	sbiw	r24, 0x01	; 1
     ff8:	f1 f7       	brne	.-4      	; 0xff6 <show_segments+0x4b0>
     ffa:	98 a3       	std	Y+32, r25	; 0x20
     ffc:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     ffe:	89 a1       	ldd	r24, Y+33	; 0x21
    1000:	9a a1       	ldd	r25, Y+34	; 0x22
    1002:	01 97       	sbiw	r24, 0x01	; 1
    1004:	9a a3       	std	Y+34, r25	; 0x22
    1006:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1008:	89 a1       	ldd	r24, Y+33	; 0x21
    100a:	9a a1       	ldd	r25, Y+34	; 0x22
    100c:	00 97       	sbiw	r24, 0x00	; 0
    100e:	69 f7       	brne	.-38     	; 0xfea <show_segments+0x4a4>
    1010:	14 c0       	rjmp	.+40     	; 0x103a <show_segments+0x4f4>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1012:	6b a1       	ldd	r22, Y+35	; 0x23
    1014:	7c a1       	ldd	r23, Y+36	; 0x24
    1016:	8d a1       	ldd	r24, Y+37	; 0x25
    1018:	9e a1       	ldd	r25, Y+38	; 0x26
    101a:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    101e:	dc 01       	movw	r26, r24
    1020:	cb 01       	movw	r24, r22
    1022:	9a a3       	std	Y+34, r25	; 0x22
    1024:	89 a3       	std	Y+33, r24	; 0x21
    1026:	89 a1       	ldd	r24, Y+33	; 0x21
    1028:	9a a1       	ldd	r25, Y+34	; 0x22
    102a:	9e 8f       	std	Y+30, r25	; 0x1e
    102c:	8d 8f       	std	Y+29, r24	; 0x1d
    102e:	8d 8d       	ldd	r24, Y+29	; 0x1d
    1030:	9e 8d       	ldd	r25, Y+30	; 0x1e
    1032:	01 97       	sbiw	r24, 0x01	; 1
    1034:	f1 f7       	brne	.-4      	; 0x1032 <show_segments+0x4ec>
    1036:	9e 8f       	std	Y+30, r25	; 0x1e
    1038:	8d 8f       	std	Y+29, r24	; 0x1d
	_delay_ms(5);
	PORTA = 0;
    103a:	eb e3       	ldi	r30, 0x3B	; 59
    103c:	f0 e0       	ldi	r31, 0x00	; 0
    103e:	10 82       	st	Z, r1

	PORTA = (1 << 4);
    1040:	eb e3       	ldi	r30, 0x3B	; 59
    1042:	f0 e0       	ldi	r31, 0x00	; 0
    1044:	80 e1       	ldi	r24, 0x10	; 16
    1046:	80 83       	st	Z, r24
	PORTC = (PORTC & 0xF0) | (hour0 & 0x0F);
    1048:	a5 e3       	ldi	r26, 0x35	; 53
    104a:	b0 e0       	ldi	r27, 0x00	; 0
    104c:	e5 e3       	ldi	r30, 0x35	; 53
    104e:	f0 e0       	ldi	r31, 0x00	; 0
    1050:	80 81       	ld	r24, Z
    1052:	28 2f       	mov	r18, r24
    1054:	20 7f       	andi	r18, 0xF0	; 240
    1056:	80 91 72 00 	lds	r24, 0x0072
    105a:	90 91 73 00 	lds	r25, 0x0073
    105e:	8f 70       	andi	r24, 0x0F	; 15
    1060:	82 2b       	or	r24, r18
    1062:	8c 93       	st	X, r24
    1064:	80 e0       	ldi	r24, 0x00	; 0
    1066:	90 e0       	ldi	r25, 0x00	; 0
    1068:	a0 ea       	ldi	r26, 0xA0	; 160
    106a:	b0 e4       	ldi	r27, 0x40	; 64
    106c:	89 8f       	std	Y+25, r24	; 0x19
    106e:	9a 8f       	std	Y+26, r25	; 0x1a
    1070:	ab 8f       	std	Y+27, r26	; 0x1b
    1072:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1074:	69 8d       	ldd	r22, Y+25	; 0x19
    1076:	7a 8d       	ldd	r23, Y+26	; 0x1a
    1078:	8b 8d       	ldd	r24, Y+27	; 0x1b
    107a:	9c 8d       	ldd	r25, Y+28	; 0x1c
    107c:	20 e0       	ldi	r18, 0x00	; 0
    107e:	30 e0       	ldi	r19, 0x00	; 0
    1080:	4a e7       	ldi	r20, 0x7A	; 122
    1082:	55 e4       	ldi	r21, 0x45	; 69
    1084:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1088:	dc 01       	movw	r26, r24
    108a:	cb 01       	movw	r24, r22
    108c:	8d 8b       	std	Y+21, r24	; 0x15
    108e:	9e 8b       	std	Y+22, r25	; 0x16
    1090:	af 8b       	std	Y+23, r26	; 0x17
    1092:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    1094:	6d 89       	ldd	r22, Y+21	; 0x15
    1096:	7e 89       	ldd	r23, Y+22	; 0x16
    1098:	8f 89       	ldd	r24, Y+23	; 0x17
    109a:	98 8d       	ldd	r25, Y+24	; 0x18
    109c:	20 e0       	ldi	r18, 0x00	; 0
    109e:	30 e0       	ldi	r19, 0x00	; 0
    10a0:	40 e8       	ldi	r20, 0x80	; 128
    10a2:	5f e3       	ldi	r21, 0x3F	; 63
    10a4:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    10a8:	88 23       	and	r24, r24
    10aa:	2c f4       	brge	.+10     	; 0x10b6 <show_segments+0x570>
		__ticks = 1;
    10ac:	81 e0       	ldi	r24, 0x01	; 1
    10ae:	90 e0       	ldi	r25, 0x00	; 0
    10b0:	9c 8b       	std	Y+20, r25	; 0x14
    10b2:	8b 8b       	std	Y+19, r24	; 0x13
    10b4:	3f c0       	rjmp	.+126    	; 0x1134 <show_segments+0x5ee>
	else if (__tmp > 65535)
    10b6:	6d 89       	ldd	r22, Y+21	; 0x15
    10b8:	7e 89       	ldd	r23, Y+22	; 0x16
    10ba:	8f 89       	ldd	r24, Y+23	; 0x17
    10bc:	98 8d       	ldd	r25, Y+24	; 0x18
    10be:	20 e0       	ldi	r18, 0x00	; 0
    10c0:	3f ef       	ldi	r19, 0xFF	; 255
    10c2:	4f e7       	ldi	r20, 0x7F	; 127
    10c4:	57 e4       	ldi	r21, 0x47	; 71
    10c6:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    10ca:	18 16       	cp	r1, r24
    10cc:	4c f5       	brge	.+82     	; 0x1120 <show_segments+0x5da>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    10ce:	69 8d       	ldd	r22, Y+25	; 0x19
    10d0:	7a 8d       	ldd	r23, Y+26	; 0x1a
    10d2:	8b 8d       	ldd	r24, Y+27	; 0x1b
    10d4:	9c 8d       	ldd	r25, Y+28	; 0x1c
    10d6:	20 e0       	ldi	r18, 0x00	; 0
    10d8:	30 e0       	ldi	r19, 0x00	; 0
    10da:	40 e2       	ldi	r20, 0x20	; 32
    10dc:	51 e4       	ldi	r21, 0x41	; 65
    10de:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    10e2:	dc 01       	movw	r26, r24
    10e4:	cb 01       	movw	r24, r22
    10e6:	bc 01       	movw	r22, r24
    10e8:	cd 01       	movw	r24, r26
    10ea:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    10ee:	dc 01       	movw	r26, r24
    10f0:	cb 01       	movw	r24, r22
    10f2:	9c 8b       	std	Y+20, r25	; 0x14
    10f4:	8b 8b       	std	Y+19, r24	; 0x13
    10f6:	0f c0       	rjmp	.+30     	; 0x1116 <show_segments+0x5d0>
    10f8:	80 e9       	ldi	r24, 0x90	; 144
    10fa:	91 e0       	ldi	r25, 0x01	; 1
    10fc:	9a 8b       	std	Y+18, r25	; 0x12
    10fe:	89 8b       	std	Y+17, r24	; 0x11
    1100:	89 89       	ldd	r24, Y+17	; 0x11
    1102:	9a 89       	ldd	r25, Y+18	; 0x12
    1104:	01 97       	sbiw	r24, 0x01	; 1
    1106:	f1 f7       	brne	.-4      	; 0x1104 <show_segments+0x5be>
    1108:	9a 8b       	std	Y+18, r25	; 0x12
    110a:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    110c:	8b 89       	ldd	r24, Y+19	; 0x13
    110e:	9c 89       	ldd	r25, Y+20	; 0x14
    1110:	01 97       	sbiw	r24, 0x01	; 1
    1112:	9c 8b       	std	Y+20, r25	; 0x14
    1114:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1116:	8b 89       	ldd	r24, Y+19	; 0x13
    1118:	9c 89       	ldd	r25, Y+20	; 0x14
    111a:	00 97       	sbiw	r24, 0x00	; 0
    111c:	69 f7       	brne	.-38     	; 0x10f8 <show_segments+0x5b2>
    111e:	14 c0       	rjmp	.+40     	; 0x1148 <show_segments+0x602>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1120:	6d 89       	ldd	r22, Y+21	; 0x15
    1122:	7e 89       	ldd	r23, Y+22	; 0x16
    1124:	8f 89       	ldd	r24, Y+23	; 0x17
    1126:	98 8d       	ldd	r25, Y+24	; 0x18
    1128:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    112c:	dc 01       	movw	r26, r24
    112e:	cb 01       	movw	r24, r22
    1130:	9c 8b       	std	Y+20, r25	; 0x14
    1132:	8b 8b       	std	Y+19, r24	; 0x13
    1134:	8b 89       	ldd	r24, Y+19	; 0x13
    1136:	9c 89       	ldd	r25, Y+20	; 0x14
    1138:	98 8b       	std	Y+16, r25	; 0x10
    113a:	8f 87       	std	Y+15, r24	; 0x0f
    113c:	8f 85       	ldd	r24, Y+15	; 0x0f
    113e:	98 89       	ldd	r25, Y+16	; 0x10
    1140:	01 97       	sbiw	r24, 0x01	; 1
    1142:	f1 f7       	brne	.-4      	; 0x1140 <show_segments+0x5fa>
    1144:	98 8b       	std	Y+16, r25	; 0x10
    1146:	8f 87       	std	Y+15, r24	; 0x0f
	_delay_ms(5);
	PORTA = 0;
    1148:	eb e3       	ldi	r30, 0x3B	; 59
    114a:	f0 e0       	ldi	r31, 0x00	; 0
    114c:	10 82       	st	Z, r1

	PORTA = (1 << 5);
    114e:	eb e3       	ldi	r30, 0x3B	; 59
    1150:	f0 e0       	ldi	r31, 0x00	; 0
    1152:	80 e2       	ldi	r24, 0x20	; 32
    1154:	80 83       	st	Z, r24
	PORTC = (PORTC & 0xF0) | (hour1 & 0x0F);
    1156:	a5 e3       	ldi	r26, 0x35	; 53
    1158:	b0 e0       	ldi	r27, 0x00	; 0
    115a:	e5 e3       	ldi	r30, 0x35	; 53
    115c:	f0 e0       	ldi	r31, 0x00	; 0
    115e:	80 81       	ld	r24, Z
    1160:	28 2f       	mov	r18, r24
    1162:	20 7f       	andi	r18, 0xF0	; 240
    1164:	80 91 74 00 	lds	r24, 0x0074
    1168:	90 91 75 00 	lds	r25, 0x0075
    116c:	8f 70       	andi	r24, 0x0F	; 15
    116e:	82 2b       	or	r24, r18
    1170:	8c 93       	st	X, r24
    1172:	80 e0       	ldi	r24, 0x00	; 0
    1174:	90 e0       	ldi	r25, 0x00	; 0
    1176:	a0 ea       	ldi	r26, 0xA0	; 160
    1178:	b0 e4       	ldi	r27, 0x40	; 64
    117a:	8b 87       	std	Y+11, r24	; 0x0b
    117c:	9c 87       	std	Y+12, r25	; 0x0c
    117e:	ad 87       	std	Y+13, r26	; 0x0d
    1180:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1182:	6b 85       	ldd	r22, Y+11	; 0x0b
    1184:	7c 85       	ldd	r23, Y+12	; 0x0c
    1186:	8d 85       	ldd	r24, Y+13	; 0x0d
    1188:	9e 85       	ldd	r25, Y+14	; 0x0e
    118a:	20 e0       	ldi	r18, 0x00	; 0
    118c:	30 e0       	ldi	r19, 0x00	; 0
    118e:	4a e7       	ldi	r20, 0x7A	; 122
    1190:	55 e4       	ldi	r21, 0x45	; 69
    1192:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1196:	dc 01       	movw	r26, r24
    1198:	cb 01       	movw	r24, r22
    119a:	8f 83       	std	Y+7, r24	; 0x07
    119c:	98 87       	std	Y+8, r25	; 0x08
    119e:	a9 87       	std	Y+9, r26	; 0x09
    11a0:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    11a2:	6f 81       	ldd	r22, Y+7	; 0x07
    11a4:	78 85       	ldd	r23, Y+8	; 0x08
    11a6:	89 85       	ldd	r24, Y+9	; 0x09
    11a8:	9a 85       	ldd	r25, Y+10	; 0x0a
    11aa:	20 e0       	ldi	r18, 0x00	; 0
    11ac:	30 e0       	ldi	r19, 0x00	; 0
    11ae:	40 e8       	ldi	r20, 0x80	; 128
    11b0:	5f e3       	ldi	r21, 0x3F	; 63
    11b2:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    11b6:	88 23       	and	r24, r24
    11b8:	2c f4       	brge	.+10     	; 0x11c4 <show_segments+0x67e>
		__ticks = 1;
    11ba:	81 e0       	ldi	r24, 0x01	; 1
    11bc:	90 e0       	ldi	r25, 0x00	; 0
    11be:	9e 83       	std	Y+6, r25	; 0x06
    11c0:	8d 83       	std	Y+5, r24	; 0x05
    11c2:	3f c0       	rjmp	.+126    	; 0x1242 <show_segments+0x6fc>
	else if (__tmp > 65535)
    11c4:	6f 81       	ldd	r22, Y+7	; 0x07
    11c6:	78 85       	ldd	r23, Y+8	; 0x08
    11c8:	89 85       	ldd	r24, Y+9	; 0x09
    11ca:	9a 85       	ldd	r25, Y+10	; 0x0a
    11cc:	20 e0       	ldi	r18, 0x00	; 0
    11ce:	3f ef       	ldi	r19, 0xFF	; 255
    11d0:	4f e7       	ldi	r20, 0x7F	; 127
    11d2:	57 e4       	ldi	r21, 0x47	; 71
    11d4:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    11d8:	18 16       	cp	r1, r24
    11da:	4c f5       	brge	.+82     	; 0x122e <show_segments+0x6e8>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    11dc:	6b 85       	ldd	r22, Y+11	; 0x0b
    11de:	7c 85       	ldd	r23, Y+12	; 0x0c
    11e0:	8d 85       	ldd	r24, Y+13	; 0x0d
    11e2:	9e 85       	ldd	r25, Y+14	; 0x0e
    11e4:	20 e0       	ldi	r18, 0x00	; 0
    11e6:	30 e0       	ldi	r19, 0x00	; 0
    11e8:	40 e2       	ldi	r20, 0x20	; 32
    11ea:	51 e4       	ldi	r21, 0x41	; 65
    11ec:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    11f0:	dc 01       	movw	r26, r24
    11f2:	cb 01       	movw	r24, r22
    11f4:	bc 01       	movw	r22, r24
    11f6:	cd 01       	movw	r24, r26
    11f8:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    11fc:	dc 01       	movw	r26, r24
    11fe:	cb 01       	movw	r24, r22
    1200:	9e 83       	std	Y+6, r25	; 0x06
    1202:	8d 83       	std	Y+5, r24	; 0x05
    1204:	0f c0       	rjmp	.+30     	; 0x1224 <show_segments+0x6de>
    1206:	80 e9       	ldi	r24, 0x90	; 144
    1208:	91 e0       	ldi	r25, 0x01	; 1
    120a:	9c 83       	std	Y+4, r25	; 0x04
    120c:	8b 83       	std	Y+3, r24	; 0x03
    120e:	8b 81       	ldd	r24, Y+3	; 0x03
    1210:	9c 81       	ldd	r25, Y+4	; 0x04
    1212:	01 97       	sbiw	r24, 0x01	; 1
    1214:	f1 f7       	brne	.-4      	; 0x1212 <show_segments+0x6cc>
    1216:	9c 83       	std	Y+4, r25	; 0x04
    1218:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    121a:	8d 81       	ldd	r24, Y+5	; 0x05
    121c:	9e 81       	ldd	r25, Y+6	; 0x06
    121e:	01 97       	sbiw	r24, 0x01	; 1
    1220:	9e 83       	std	Y+6, r25	; 0x06
    1222:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1224:	8d 81       	ldd	r24, Y+5	; 0x05
    1226:	9e 81       	ldd	r25, Y+6	; 0x06
    1228:	00 97       	sbiw	r24, 0x00	; 0
    122a:	69 f7       	brne	.-38     	; 0x1206 <show_segments+0x6c0>
    122c:	14 c0       	rjmp	.+40     	; 0x1256 <show_segments+0x710>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    122e:	6f 81       	ldd	r22, Y+7	; 0x07
    1230:	78 85       	ldd	r23, Y+8	; 0x08
    1232:	89 85       	ldd	r24, Y+9	; 0x09
    1234:	9a 85       	ldd	r25, Y+10	; 0x0a
    1236:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    123a:	dc 01       	movw	r26, r24
    123c:	cb 01       	movw	r24, r22
    123e:	9e 83       	std	Y+6, r25	; 0x06
    1240:	8d 83       	std	Y+5, r24	; 0x05
    1242:	8d 81       	ldd	r24, Y+5	; 0x05
    1244:	9e 81       	ldd	r25, Y+6	; 0x06
    1246:	9a 83       	std	Y+2, r25	; 0x02
    1248:	89 83       	std	Y+1, r24	; 0x01
    124a:	89 81       	ldd	r24, Y+1	; 0x01
    124c:	9a 81       	ldd	r25, Y+2	; 0x02
    124e:	01 97       	sbiw	r24, 0x01	; 1
    1250:	f1 f7       	brne	.-4      	; 0x124e <show_segments+0x708>
    1252:	9a 83       	std	Y+2, r25	; 0x02
    1254:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(5);
	PORTA = 0;
    1256:	eb e3       	ldi	r30, 0x3B	; 59
    1258:	f0 e0       	ldi	r31, 0x00	; 0
    125a:	10 82       	st	Z, r1
}
    125c:	cc 5a       	subi	r28, 0xAC	; 172
    125e:	df 4f       	sbci	r29, 0xFF	; 255
    1260:	0f b6       	in	r0, 0x3f	; 63
    1262:	f8 94       	cli
    1264:	de bf       	out	0x3e, r29	; 62
    1266:	0f be       	out	0x3f, r0	; 63
    1268:	cd bf       	out	0x3d, r28	; 61
    126a:	cf 91       	pop	r28
    126c:	df 91       	pop	r29
    126e:	1f 91       	pop	r17
    1270:	0f 91       	pop	r16
    1272:	08 95       	ret

00001274 <Timer_countUp>:

void Timer_countUp(void) {
    1274:	df 93       	push	r29
    1276:	cf 93       	push	r28
    1278:	cd b7       	in	r28, 0x3d	; 61
    127a:	de b7       	in	r29, 0x3e	; 62
	if (++sec0 > 9) {
    127c:	80 91 6a 00 	lds	r24, 0x006A
    1280:	90 91 6b 00 	lds	r25, 0x006B
    1284:	01 96       	adiw	r24, 0x01	; 1
    1286:	90 93 6b 00 	sts	0x006B, r25
    128a:	80 93 6a 00 	sts	0x006A, r24
    128e:	80 91 6a 00 	lds	r24, 0x006A
    1292:	90 91 6b 00 	lds	r25, 0x006B
    1296:	8a 30       	cpi	r24, 0x0A	; 10
    1298:	91 05       	cpc	r25, r1
    129a:	08 f4       	brcc	.+2      	; 0x129e <Timer_countUp+0x2a>
    129c:	6a c0       	rjmp	.+212    	; 0x1372 <Timer_countUp+0xfe>
		sec0 = 0;
    129e:	10 92 6b 00 	sts	0x006B, r1
    12a2:	10 92 6a 00 	sts	0x006A, r1
		if (++sec1 > 5) {
    12a6:	80 91 6c 00 	lds	r24, 0x006C
    12aa:	90 91 6d 00 	lds	r25, 0x006D
    12ae:	01 96       	adiw	r24, 0x01	; 1
    12b0:	90 93 6d 00 	sts	0x006D, r25
    12b4:	80 93 6c 00 	sts	0x006C, r24
    12b8:	80 91 6c 00 	lds	r24, 0x006C
    12bc:	90 91 6d 00 	lds	r25, 0x006D
    12c0:	86 30       	cpi	r24, 0x06	; 6
    12c2:	91 05       	cpc	r25, r1
    12c4:	08 f4       	brcc	.+2      	; 0x12c8 <Timer_countUp+0x54>
    12c6:	55 c0       	rjmp	.+170    	; 0x1372 <Timer_countUp+0xfe>
			sec1 = 0;
    12c8:	10 92 6d 00 	sts	0x006D, r1
    12cc:	10 92 6c 00 	sts	0x006C, r1
			if (++min0 > 9) {
    12d0:	80 91 6e 00 	lds	r24, 0x006E
    12d4:	90 91 6f 00 	lds	r25, 0x006F
    12d8:	01 96       	adiw	r24, 0x01	; 1
    12da:	90 93 6f 00 	sts	0x006F, r25
    12de:	80 93 6e 00 	sts	0x006E, r24
    12e2:	80 91 6e 00 	lds	r24, 0x006E
    12e6:	90 91 6f 00 	lds	r25, 0x006F
    12ea:	8a 30       	cpi	r24, 0x0A	; 10
    12ec:	91 05       	cpc	r25, r1
    12ee:	08 f4       	brcc	.+2      	; 0x12f2 <Timer_countUp+0x7e>
    12f0:	40 c0       	rjmp	.+128    	; 0x1372 <Timer_countUp+0xfe>
				min0 = 0;
    12f2:	10 92 6f 00 	sts	0x006F, r1
    12f6:	10 92 6e 00 	sts	0x006E, r1
				if (++min1 > 5) {
    12fa:	80 91 70 00 	lds	r24, 0x0070
    12fe:	90 91 71 00 	lds	r25, 0x0071
    1302:	01 96       	adiw	r24, 0x01	; 1
    1304:	90 93 71 00 	sts	0x0071, r25
    1308:	80 93 70 00 	sts	0x0070, r24
    130c:	80 91 70 00 	lds	r24, 0x0070
    1310:	90 91 71 00 	lds	r25, 0x0071
    1314:	86 30       	cpi	r24, 0x06	; 6
    1316:	91 05       	cpc	r25, r1
    1318:	60 f1       	brcs	.+88     	; 0x1372 <Timer_countUp+0xfe>
					min1 = 0;
    131a:	10 92 71 00 	sts	0x0071, r1
    131e:	10 92 70 00 	sts	0x0070, r1
					if (++hour0 > 9) {
    1322:	80 91 72 00 	lds	r24, 0x0072
    1326:	90 91 73 00 	lds	r25, 0x0073
    132a:	01 96       	adiw	r24, 0x01	; 1
    132c:	90 93 73 00 	sts	0x0073, r25
    1330:	80 93 72 00 	sts	0x0072, r24
    1334:	80 91 72 00 	lds	r24, 0x0072
    1338:	90 91 73 00 	lds	r25, 0x0073
    133c:	8a 30       	cpi	r24, 0x0A	; 10
    133e:	91 05       	cpc	r25, r1
    1340:	c0 f0       	brcs	.+48     	; 0x1372 <Timer_countUp+0xfe>
						hour0 = 0;
    1342:	10 92 73 00 	sts	0x0073, r1
    1346:	10 92 72 00 	sts	0x0072, r1
						if (++hour1 > 5) {
    134a:	80 91 74 00 	lds	r24, 0x0074
    134e:	90 91 75 00 	lds	r25, 0x0075
    1352:	01 96       	adiw	r24, 0x01	; 1
    1354:	90 93 75 00 	sts	0x0075, r25
    1358:	80 93 74 00 	sts	0x0074, r24
    135c:	80 91 74 00 	lds	r24, 0x0074
    1360:	90 91 75 00 	lds	r25, 0x0075
    1364:	86 30       	cpi	r24, 0x06	; 6
    1366:	91 05       	cpc	r25, r1
    1368:	20 f0       	brcs	.+8      	; 0x1372 <Timer_countUp+0xfe>
							hour1 = 0;
    136a:	10 92 75 00 	sts	0x0075, r1
    136e:	10 92 74 00 	sts	0x0074, r1
					}
				}
			}
		}
	}
}
    1372:	cf 91       	pop	r28
    1374:	df 91       	pop	r29
    1376:	08 95       	ret

00001378 <Timer_countDown>:

void Timer_countDown(void) {
    1378:	df 93       	push	r29
    137a:	cf 93       	push	r28
    137c:	cd b7       	in	r28, 0x3d	; 61
    137e:	de b7       	in	r29, 0x3e	; 62
	if (countdown_done_flag) return;
    1380:	80 91 79 00 	lds	r24, 0x0079
    1384:	88 23       	and	r24, r24
    1386:	09 f0       	breq	.+2      	; 0x138a <Timer_countDown+0x12>
    1388:	f0 c0       	rjmp	.+480    	; 0x156a <Timer_countDown+0x1f2>

	if (sec0 > 0) sec0--;
    138a:	80 91 6a 00 	lds	r24, 0x006A
    138e:	90 91 6b 00 	lds	r25, 0x006B
    1392:	00 97       	sbiw	r24, 0x00	; 0
    1394:	51 f0       	breq	.+20     	; 0x13aa <Timer_countDown+0x32>
    1396:	80 91 6a 00 	lds	r24, 0x006A
    139a:	90 91 6b 00 	lds	r25, 0x006B
    139e:	01 97       	sbiw	r24, 0x01	; 1
    13a0:	90 93 6b 00 	sts	0x006B, r25
    13a4:	80 93 6a 00 	sts	0x006A, r24
    13a8:	e0 c0       	rjmp	.+448    	; 0x156a <Timer_countDown+0x1f2>
	else {
		if (sec1 > 0) {
    13aa:	80 91 6c 00 	lds	r24, 0x006C
    13ae:	90 91 6d 00 	lds	r25, 0x006D
    13b2:	00 97       	sbiw	r24, 0x00	; 0
    13b4:	81 f0       	breq	.+32     	; 0x13d6 <Timer_countDown+0x5e>
			sec1--; sec0 = 9;
    13b6:	80 91 6c 00 	lds	r24, 0x006C
    13ba:	90 91 6d 00 	lds	r25, 0x006D
    13be:	01 97       	sbiw	r24, 0x01	; 1
    13c0:	90 93 6d 00 	sts	0x006D, r25
    13c4:	80 93 6c 00 	sts	0x006C, r24
    13c8:	89 e0       	ldi	r24, 0x09	; 9
    13ca:	90 e0       	ldi	r25, 0x00	; 0
    13cc:	90 93 6b 00 	sts	0x006B, r25
    13d0:	80 93 6a 00 	sts	0x006A, r24
    13d4:	ca c0       	rjmp	.+404    	; 0x156a <Timer_countDown+0x1f2>
		} else {
			if (min0 > 0) {
    13d6:	80 91 6e 00 	lds	r24, 0x006E
    13da:	90 91 6f 00 	lds	r25, 0x006F
    13de:	00 97       	sbiw	r24, 0x00	; 0
    13e0:	b1 f0       	breq	.+44     	; 0x140e <Timer_countDown+0x96>
				min0--; sec1 = 5; sec0 = 9;
    13e2:	80 91 6e 00 	lds	r24, 0x006E
    13e6:	90 91 6f 00 	lds	r25, 0x006F
    13ea:	01 97       	sbiw	r24, 0x01	; 1
    13ec:	90 93 6f 00 	sts	0x006F, r25
    13f0:	80 93 6e 00 	sts	0x006E, r24
    13f4:	85 e0       	ldi	r24, 0x05	; 5
    13f6:	90 e0       	ldi	r25, 0x00	; 0
    13f8:	90 93 6d 00 	sts	0x006D, r25
    13fc:	80 93 6c 00 	sts	0x006C, r24
    1400:	89 e0       	ldi	r24, 0x09	; 9
    1402:	90 e0       	ldi	r25, 0x00	; 0
    1404:	90 93 6b 00 	sts	0x006B, r25
    1408:	80 93 6a 00 	sts	0x006A, r24
    140c:	ae c0       	rjmp	.+348    	; 0x156a <Timer_countDown+0x1f2>
			} else if (min1 > 0) {
    140e:	80 91 70 00 	lds	r24, 0x0070
    1412:	90 91 71 00 	lds	r25, 0x0071
    1416:	00 97       	sbiw	r24, 0x00	; 0
    1418:	e1 f0       	breq	.+56     	; 0x1452 <Timer_countDown+0xda>
				min1--; min0 = 9; sec1 = 5; sec0 = 9;
    141a:	80 91 70 00 	lds	r24, 0x0070
    141e:	90 91 71 00 	lds	r25, 0x0071
    1422:	01 97       	sbiw	r24, 0x01	; 1
    1424:	90 93 71 00 	sts	0x0071, r25
    1428:	80 93 70 00 	sts	0x0070, r24
    142c:	89 e0       	ldi	r24, 0x09	; 9
    142e:	90 e0       	ldi	r25, 0x00	; 0
    1430:	90 93 6f 00 	sts	0x006F, r25
    1434:	80 93 6e 00 	sts	0x006E, r24
    1438:	85 e0       	ldi	r24, 0x05	; 5
    143a:	90 e0       	ldi	r25, 0x00	; 0
    143c:	90 93 6d 00 	sts	0x006D, r25
    1440:	80 93 6c 00 	sts	0x006C, r24
    1444:	89 e0       	ldi	r24, 0x09	; 9
    1446:	90 e0       	ldi	r25, 0x00	; 0
    1448:	90 93 6b 00 	sts	0x006B, r25
    144c:	80 93 6a 00 	sts	0x006A, r24
    1450:	8c c0       	rjmp	.+280    	; 0x156a <Timer_countDown+0x1f2>
			} else if (hour0 > 0) {
    1452:	80 91 72 00 	lds	r24, 0x0072
    1456:	90 91 73 00 	lds	r25, 0x0073
    145a:	00 97       	sbiw	r24, 0x00	; 0
    145c:	11 f1       	breq	.+68     	; 0x14a2 <Timer_countDown+0x12a>
				hour0--; min1 = 5; min0 = 9; sec1 = 5; sec0 = 9;
    145e:	80 91 72 00 	lds	r24, 0x0072
    1462:	90 91 73 00 	lds	r25, 0x0073
    1466:	01 97       	sbiw	r24, 0x01	; 1
    1468:	90 93 73 00 	sts	0x0073, r25
    146c:	80 93 72 00 	sts	0x0072, r24
    1470:	85 e0       	ldi	r24, 0x05	; 5
    1472:	90 e0       	ldi	r25, 0x00	; 0
    1474:	90 93 71 00 	sts	0x0071, r25
    1478:	80 93 70 00 	sts	0x0070, r24
    147c:	89 e0       	ldi	r24, 0x09	; 9
    147e:	90 e0       	ldi	r25, 0x00	; 0
    1480:	90 93 6f 00 	sts	0x006F, r25
    1484:	80 93 6e 00 	sts	0x006E, r24
    1488:	85 e0       	ldi	r24, 0x05	; 5
    148a:	90 e0       	ldi	r25, 0x00	; 0
    148c:	90 93 6d 00 	sts	0x006D, r25
    1490:	80 93 6c 00 	sts	0x006C, r24
    1494:	89 e0       	ldi	r24, 0x09	; 9
    1496:	90 e0       	ldi	r25, 0x00	; 0
    1498:	90 93 6b 00 	sts	0x006B, r25
    149c:	80 93 6a 00 	sts	0x006A, r24
    14a0:	64 c0       	rjmp	.+200    	; 0x156a <Timer_countDown+0x1f2>
			} else if (hour1 > 0) {
    14a2:	80 91 74 00 	lds	r24, 0x0074
    14a6:	90 91 75 00 	lds	r25, 0x0075
    14aa:	00 97       	sbiw	r24, 0x00	; 0
    14ac:	41 f1       	breq	.+80     	; 0x14fe <Timer_countDown+0x186>
				hour1--; hour0 = 9; min1 = 5; min0 = 9; sec1 = 5; sec0 = 9;
    14ae:	80 91 74 00 	lds	r24, 0x0074
    14b2:	90 91 75 00 	lds	r25, 0x0075
    14b6:	01 97       	sbiw	r24, 0x01	; 1
    14b8:	90 93 75 00 	sts	0x0075, r25
    14bc:	80 93 74 00 	sts	0x0074, r24
    14c0:	89 e0       	ldi	r24, 0x09	; 9
    14c2:	90 e0       	ldi	r25, 0x00	; 0
    14c4:	90 93 73 00 	sts	0x0073, r25
    14c8:	80 93 72 00 	sts	0x0072, r24
    14cc:	85 e0       	ldi	r24, 0x05	; 5
    14ce:	90 e0       	ldi	r25, 0x00	; 0
    14d0:	90 93 71 00 	sts	0x0071, r25
    14d4:	80 93 70 00 	sts	0x0070, r24
    14d8:	89 e0       	ldi	r24, 0x09	; 9
    14da:	90 e0       	ldi	r25, 0x00	; 0
    14dc:	90 93 6f 00 	sts	0x006F, r25
    14e0:	80 93 6e 00 	sts	0x006E, r24
    14e4:	85 e0       	ldi	r24, 0x05	; 5
    14e6:	90 e0       	ldi	r25, 0x00	; 0
    14e8:	90 93 6d 00 	sts	0x006D, r25
    14ec:	80 93 6c 00 	sts	0x006C, r24
    14f0:	89 e0       	ldi	r24, 0x09	; 9
    14f2:	90 e0       	ldi	r25, 0x00	; 0
    14f4:	90 93 6b 00 	sts	0x006B, r25
    14f8:	80 93 6a 00 	sts	0x006A, r24
    14fc:	36 c0       	rjmp	.+108    	; 0x156a <Timer_countDown+0x1f2>
			} else {

				sec0 = sec1 = min0 = min1 = hour0 = hour1 = 0;
    14fe:	10 92 75 00 	sts	0x0075, r1
    1502:	10 92 74 00 	sts	0x0074, r1
    1506:	80 91 74 00 	lds	r24, 0x0074
    150a:	90 91 75 00 	lds	r25, 0x0075
    150e:	90 93 73 00 	sts	0x0073, r25
    1512:	80 93 72 00 	sts	0x0072, r24
    1516:	80 91 72 00 	lds	r24, 0x0072
    151a:	90 91 73 00 	lds	r25, 0x0073
    151e:	90 93 71 00 	sts	0x0071, r25
    1522:	80 93 70 00 	sts	0x0070, r24
    1526:	80 91 70 00 	lds	r24, 0x0070
    152a:	90 91 71 00 	lds	r25, 0x0071
    152e:	90 93 6f 00 	sts	0x006F, r25
    1532:	80 93 6e 00 	sts	0x006E, r24
    1536:	80 91 6e 00 	lds	r24, 0x006E
    153a:	90 91 6f 00 	lds	r25, 0x006F
    153e:	90 93 6d 00 	sts	0x006D, r25
    1542:	80 93 6c 00 	sts	0x006C, r24
    1546:	80 91 6c 00 	lds	r24, 0x006C
    154a:	90 91 6d 00 	lds	r25, 0x006D
    154e:	90 93 6b 00 	sts	0x006B, r25
    1552:	80 93 6a 00 	sts	0x006A, r24
				countdown_done_flag = 1;
    1556:	81 e0       	ldi	r24, 0x01	; 1
    1558:	80 93 79 00 	sts	0x0079, r24
				PORTD |= (1 << PD0);
    155c:	a2 e3       	ldi	r26, 0x32	; 50
    155e:	b0 e0       	ldi	r27, 0x00	; 0
    1560:	e2 e3       	ldi	r30, 0x32	; 50
    1562:	f0 e0       	ldi	r31, 0x00	; 0
    1564:	80 81       	ld	r24, Z
    1566:	81 60       	ori	r24, 0x01	; 1
    1568:	8c 93       	st	X, r24
			}
		}
	}
}
    156a:	cf 91       	pop	r28
    156c:	df 91       	pop	r29
    156e:	08 95       	ret

00001570 <Timer1_init>:

void Timer1_init(void) {
    1570:	df 93       	push	r29
    1572:	cf 93       	push	r28
    1574:	cd b7       	in	r28, 0x3d	; 61
    1576:	de b7       	in	r29, 0x3e	; 62
	TCCR1A = (1 << FOC1A);
    1578:	ef e4       	ldi	r30, 0x4F	; 79
    157a:	f0 e0       	ldi	r31, 0x00	; 0
    157c:	88 e0       	ldi	r24, 0x08	; 8
    157e:	80 83       	st	Z, r24
	TCCR1B = (1 << WGM12) | (1 << WGM13) | (1 << CS12) | (1 << CS10);
    1580:	ee e4       	ldi	r30, 0x4E	; 78
    1582:	f0 e0       	ldi	r31, 0x00	; 0
    1584:	8d e1       	ldi	r24, 0x1D	; 29
    1586:	80 83       	st	Z, r24
	ICR1 = 15625;
    1588:	e6 e4       	ldi	r30, 0x46	; 70
    158a:	f0 e0       	ldi	r31, 0x00	; 0
    158c:	89 e0       	ldi	r24, 0x09	; 9
    158e:	9d e3       	ldi	r25, 0x3D	; 61
    1590:	91 83       	std	Z+1, r25	; 0x01
    1592:	80 83       	st	Z, r24
	TIMSK |= (1 << OCIE1A);
    1594:	a9 e5       	ldi	r26, 0x59	; 89
    1596:	b0 e0       	ldi	r27, 0x00	; 0
    1598:	e9 e5       	ldi	r30, 0x59	; 89
    159a:	f0 e0       	ldi	r31, 0x00	; 0
    159c:	80 81       	ld	r24, Z
    159e:	80 61       	ori	r24, 0x10	; 16
    15a0:	8c 93       	st	X, r24
	TCNT1 = 0;
    15a2:	ec e4       	ldi	r30, 0x4C	; 76
    15a4:	f0 e0       	ldi	r31, 0x00	; 0
    15a6:	11 82       	std	Z+1, r1	; 0x01
    15a8:	10 82       	st	Z, r1
}
    15aa:	cf 91       	pop	r28
    15ac:	df 91       	pop	r29
    15ae:	08 95       	ret

000015b0 <__vector_7>:

ISR(TIMER1_COMPA_vect) {
    15b0:	1f 92       	push	r1
    15b2:	0f 92       	push	r0
    15b4:	0f b6       	in	r0, 0x3f	; 63
    15b6:	0f 92       	push	r0
    15b8:	11 24       	eor	r1, r1
    15ba:	8f 93       	push	r24
    15bc:	df 93       	push	r29
    15be:	cf 93       	push	r28
    15c0:	cd b7       	in	r28, 0x3d	; 61
    15c2:	de b7       	in	r29, 0x3e	; 62
	if (timer_mode_flag)
    15c4:	80 91 68 00 	lds	r24, 0x0068
    15c8:	88 23       	and	r24, r24
    15ca:	21 f0       	breq	.+8      	; 0x15d4 <__vector_7+0x24>
		ISR_countUp_flag = 1;
    15cc:	81 e0       	ldi	r24, 0x01	; 1
    15ce:	80 93 77 00 	sts	0x0077, r24
    15d2:	03 c0       	rjmp	.+6      	; 0x15da <__vector_7+0x2a>
	else
		ISR_countDown_flag = 1;
    15d4:	81 e0       	ldi	r24, 0x01	; 1
    15d6:	80 93 78 00 	sts	0x0078, r24
}
    15da:	cf 91       	pop	r28
    15dc:	df 91       	pop	r29
    15de:	8f 91       	pop	r24
    15e0:	0f 90       	pop	r0
    15e2:	0f be       	out	0x3f, r0	; 63
    15e4:	0f 90       	pop	r0
    15e6:	1f 90       	pop	r1
    15e8:	18 95       	reti

000015ea <INT0_reset_init>:

void INT0_reset_init(void) {
    15ea:	df 93       	push	r29
    15ec:	cf 93       	push	r28
    15ee:	cd b7       	in	r28, 0x3d	; 61
    15f0:	de b7       	in	r29, 0x3e	; 62
	GICR |= (1 << INT0);
    15f2:	ab e5       	ldi	r26, 0x5B	; 91
    15f4:	b0 e0       	ldi	r27, 0x00	; 0
    15f6:	eb e5       	ldi	r30, 0x5B	; 91
    15f8:	f0 e0       	ldi	r31, 0x00	; 0
    15fa:	80 81       	ld	r24, Z
    15fc:	80 64       	ori	r24, 0x40	; 64
    15fe:	8c 93       	st	X, r24
	MCUCR |= (1 << ISC01);
    1600:	a5 e5       	ldi	r26, 0x55	; 85
    1602:	b0 e0       	ldi	r27, 0x00	; 0
    1604:	e5 e5       	ldi	r30, 0x55	; 85
    1606:	f0 e0       	ldi	r31, 0x00	; 0
    1608:	80 81       	ld	r24, Z
    160a:	82 60       	ori	r24, 0x02	; 2
    160c:	8c 93       	st	X, r24
}
    160e:	cf 91       	pop	r28
    1610:	df 91       	pop	r29
    1612:	08 95       	ret

00001614 <__vector_1>:

ISR(INT0_vect) {
    1614:	1f 92       	push	r1
    1616:	0f 92       	push	r0
    1618:	0f b6       	in	r0, 0x3f	; 63
    161a:	0f 92       	push	r0
    161c:	11 24       	eor	r1, r1
    161e:	8f 93       	push	r24
    1620:	9f 93       	push	r25
    1622:	af 93       	push	r26
    1624:	bf 93       	push	r27
    1626:	ef 93       	push	r30
    1628:	ff 93       	push	r31
    162a:	df 93       	push	r29
    162c:	cf 93       	push	r28
    162e:	cd b7       	in	r28, 0x3d	; 61
    1630:	de b7       	in	r29, 0x3e	; 62
	sec0 = sec1 = min0 = min1 = hour0 = hour1 = 0;
    1632:	10 92 75 00 	sts	0x0075, r1
    1636:	10 92 74 00 	sts	0x0074, r1
    163a:	80 91 74 00 	lds	r24, 0x0074
    163e:	90 91 75 00 	lds	r25, 0x0075
    1642:	90 93 73 00 	sts	0x0073, r25
    1646:	80 93 72 00 	sts	0x0072, r24
    164a:	80 91 72 00 	lds	r24, 0x0072
    164e:	90 91 73 00 	lds	r25, 0x0073
    1652:	90 93 71 00 	sts	0x0071, r25
    1656:	80 93 70 00 	sts	0x0070, r24
    165a:	80 91 70 00 	lds	r24, 0x0070
    165e:	90 91 71 00 	lds	r25, 0x0071
    1662:	90 93 6f 00 	sts	0x006F, r25
    1666:	80 93 6e 00 	sts	0x006E, r24
    166a:	80 91 6e 00 	lds	r24, 0x006E
    166e:	90 91 6f 00 	lds	r25, 0x006F
    1672:	90 93 6d 00 	sts	0x006D, r25
    1676:	80 93 6c 00 	sts	0x006C, r24
    167a:	80 91 6c 00 	lds	r24, 0x006C
    167e:	90 91 6d 00 	lds	r25, 0x006D
    1682:	90 93 6b 00 	sts	0x006B, r25
    1686:	80 93 6a 00 	sts	0x006A, r24
	countdown_done_flag = 0;
    168a:	10 92 79 00 	sts	0x0079, r1
	PORTD &= ~(1 << PD0);
    168e:	a2 e3       	ldi	r26, 0x32	; 50
    1690:	b0 e0       	ldi	r27, 0x00	; 0
    1692:	e2 e3       	ldi	r30, 0x32	; 50
    1694:	f0 e0       	ldi	r31, 0x00	; 0
    1696:	80 81       	ld	r24, Z
    1698:	8e 7f       	andi	r24, 0xFE	; 254
    169a:	8c 93       	st	X, r24
}
    169c:	cf 91       	pop	r28
    169e:	df 91       	pop	r29
    16a0:	ff 91       	pop	r31
    16a2:	ef 91       	pop	r30
    16a4:	bf 91       	pop	r27
    16a6:	af 91       	pop	r26
    16a8:	9f 91       	pop	r25
    16aa:	8f 91       	pop	r24
    16ac:	0f 90       	pop	r0
    16ae:	0f be       	out	0x3f, r0	; 63
    16b0:	0f 90       	pop	r0
    16b2:	1f 90       	pop	r1
    16b4:	18 95       	reti

000016b6 <INT1_pause_init>:

void INT1_pause_init(void) {
    16b6:	df 93       	push	r29
    16b8:	cf 93       	push	r28
    16ba:	cd b7       	in	r28, 0x3d	; 61
    16bc:	de b7       	in	r29, 0x3e	; 62
	GICR |= (1 << INT1);
    16be:	ab e5       	ldi	r26, 0x5B	; 91
    16c0:	b0 e0       	ldi	r27, 0x00	; 0
    16c2:	eb e5       	ldi	r30, 0x5B	; 91
    16c4:	f0 e0       	ldi	r31, 0x00	; 0
    16c6:	80 81       	ld	r24, Z
    16c8:	80 68       	ori	r24, 0x80	; 128
    16ca:	8c 93       	st	X, r24
	MCUCR |= (1 << ISC11) | (1 << ISC10);
    16cc:	a5 e5       	ldi	r26, 0x55	; 85
    16ce:	b0 e0       	ldi	r27, 0x00	; 0
    16d0:	e5 e5       	ldi	r30, 0x55	; 85
    16d2:	f0 e0       	ldi	r31, 0x00	; 0
    16d4:	80 81       	ld	r24, Z
    16d6:	8c 60       	ori	r24, 0x0C	; 12
    16d8:	8c 93       	st	X, r24
}
    16da:	cf 91       	pop	r28
    16dc:	df 91       	pop	r29
    16de:	08 95       	ret

000016e0 <__vector_2>:

ISR(INT1_vect) {
    16e0:	1f 92       	push	r1
    16e2:	0f 92       	push	r0
    16e4:	0f b6       	in	r0, 0x3f	; 63
    16e6:	0f 92       	push	r0
    16e8:	11 24       	eor	r1, r1
    16ea:	2f 93       	push	r18
    16ec:	3f 93       	push	r19
    16ee:	4f 93       	push	r20
    16f0:	5f 93       	push	r21
    16f2:	6f 93       	push	r22
    16f4:	7f 93       	push	r23
    16f6:	8f 93       	push	r24
    16f8:	9f 93       	push	r25
    16fa:	af 93       	push	r26
    16fc:	bf 93       	push	r27
    16fe:	ef 93       	push	r30
    1700:	ff 93       	push	r31
    1702:	df 93       	push	r29
    1704:	cf 93       	push	r28
    1706:	cd b7       	in	r28, 0x3d	; 61
    1708:	de b7       	in	r29, 0x3e	; 62
    170a:	2e 97       	sbiw	r28, 0x0e	; 14
    170c:	de bf       	out	0x3e, r29	; 62
    170e:	cd bf       	out	0x3d, r28	; 61
    1710:	80 e0       	ldi	r24, 0x00	; 0
    1712:	90 e0       	ldi	r25, 0x00	; 0
    1714:	a0 ef       	ldi	r26, 0xF0	; 240
    1716:	b1 e4       	ldi	r27, 0x41	; 65
    1718:	8b 87       	std	Y+11, r24	; 0x0b
    171a:	9c 87       	std	Y+12, r25	; 0x0c
    171c:	ad 87       	std	Y+13, r26	; 0x0d
    171e:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1720:	6b 85       	ldd	r22, Y+11	; 0x0b
    1722:	7c 85       	ldd	r23, Y+12	; 0x0c
    1724:	8d 85       	ldd	r24, Y+13	; 0x0d
    1726:	9e 85       	ldd	r25, Y+14	; 0x0e
    1728:	20 e0       	ldi	r18, 0x00	; 0
    172a:	30 e0       	ldi	r19, 0x00	; 0
    172c:	4a e7       	ldi	r20, 0x7A	; 122
    172e:	55 e4       	ldi	r21, 0x45	; 69
    1730:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1734:	dc 01       	movw	r26, r24
    1736:	cb 01       	movw	r24, r22
    1738:	8f 83       	std	Y+7, r24	; 0x07
    173a:	98 87       	std	Y+8, r25	; 0x08
    173c:	a9 87       	std	Y+9, r26	; 0x09
    173e:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    1740:	6f 81       	ldd	r22, Y+7	; 0x07
    1742:	78 85       	ldd	r23, Y+8	; 0x08
    1744:	89 85       	ldd	r24, Y+9	; 0x09
    1746:	9a 85       	ldd	r25, Y+10	; 0x0a
    1748:	20 e0       	ldi	r18, 0x00	; 0
    174a:	30 e0       	ldi	r19, 0x00	; 0
    174c:	40 e8       	ldi	r20, 0x80	; 128
    174e:	5f e3       	ldi	r21, 0x3F	; 63
    1750:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    1754:	88 23       	and	r24, r24
    1756:	2c f4       	brge	.+10     	; 0x1762 <__vector_2+0x82>
		__ticks = 1;
    1758:	81 e0       	ldi	r24, 0x01	; 1
    175a:	90 e0       	ldi	r25, 0x00	; 0
    175c:	9e 83       	std	Y+6, r25	; 0x06
    175e:	8d 83       	std	Y+5, r24	; 0x05
    1760:	3f c0       	rjmp	.+126    	; 0x17e0 <__vector_2+0x100>
	else if (__tmp > 65535)
    1762:	6f 81       	ldd	r22, Y+7	; 0x07
    1764:	78 85       	ldd	r23, Y+8	; 0x08
    1766:	89 85       	ldd	r24, Y+9	; 0x09
    1768:	9a 85       	ldd	r25, Y+10	; 0x0a
    176a:	20 e0       	ldi	r18, 0x00	; 0
    176c:	3f ef       	ldi	r19, 0xFF	; 255
    176e:	4f e7       	ldi	r20, 0x7F	; 127
    1770:	57 e4       	ldi	r21, 0x47	; 71
    1772:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    1776:	18 16       	cp	r1, r24
    1778:	4c f5       	brge	.+82     	; 0x17cc <__vector_2+0xec>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    177a:	6b 85       	ldd	r22, Y+11	; 0x0b
    177c:	7c 85       	ldd	r23, Y+12	; 0x0c
    177e:	8d 85       	ldd	r24, Y+13	; 0x0d
    1780:	9e 85       	ldd	r25, Y+14	; 0x0e
    1782:	20 e0       	ldi	r18, 0x00	; 0
    1784:	30 e0       	ldi	r19, 0x00	; 0
    1786:	40 e2       	ldi	r20, 0x20	; 32
    1788:	51 e4       	ldi	r21, 0x41	; 65
    178a:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    178e:	dc 01       	movw	r26, r24
    1790:	cb 01       	movw	r24, r22
    1792:	bc 01       	movw	r22, r24
    1794:	cd 01       	movw	r24, r26
    1796:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    179a:	dc 01       	movw	r26, r24
    179c:	cb 01       	movw	r24, r22
    179e:	9e 83       	std	Y+6, r25	; 0x06
    17a0:	8d 83       	std	Y+5, r24	; 0x05
    17a2:	0f c0       	rjmp	.+30     	; 0x17c2 <__vector_2+0xe2>
    17a4:	80 e9       	ldi	r24, 0x90	; 144
    17a6:	91 e0       	ldi	r25, 0x01	; 1
    17a8:	9c 83       	std	Y+4, r25	; 0x04
    17aa:	8b 83       	std	Y+3, r24	; 0x03
    17ac:	8b 81       	ldd	r24, Y+3	; 0x03
    17ae:	9c 81       	ldd	r25, Y+4	; 0x04
    17b0:	01 97       	sbiw	r24, 0x01	; 1
    17b2:	f1 f7       	brne	.-4      	; 0x17b0 <__vector_2+0xd0>
    17b4:	9c 83       	std	Y+4, r25	; 0x04
    17b6:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    17b8:	8d 81       	ldd	r24, Y+5	; 0x05
    17ba:	9e 81       	ldd	r25, Y+6	; 0x06
    17bc:	01 97       	sbiw	r24, 0x01	; 1
    17be:	9e 83       	std	Y+6, r25	; 0x06
    17c0:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    17c2:	8d 81       	ldd	r24, Y+5	; 0x05
    17c4:	9e 81       	ldd	r25, Y+6	; 0x06
    17c6:	00 97       	sbiw	r24, 0x00	; 0
    17c8:	69 f7       	brne	.-38     	; 0x17a4 <__vector_2+0xc4>
    17ca:	14 c0       	rjmp	.+40     	; 0x17f4 <__vector_2+0x114>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    17cc:	6f 81       	ldd	r22, Y+7	; 0x07
    17ce:	78 85       	ldd	r23, Y+8	; 0x08
    17d0:	89 85       	ldd	r24, Y+9	; 0x09
    17d2:	9a 85       	ldd	r25, Y+10	; 0x0a
    17d4:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    17d8:	dc 01       	movw	r26, r24
    17da:	cb 01       	movw	r24, r22
    17dc:	9e 83       	std	Y+6, r25	; 0x06
    17de:	8d 83       	std	Y+5, r24	; 0x05
    17e0:	8d 81       	ldd	r24, Y+5	; 0x05
    17e2:	9e 81       	ldd	r25, Y+6	; 0x06
    17e4:	9a 83       	std	Y+2, r25	; 0x02
    17e6:	89 83       	std	Y+1, r24	; 0x01
    17e8:	89 81       	ldd	r24, Y+1	; 0x01
    17ea:	9a 81       	ldd	r25, Y+2	; 0x02
    17ec:	01 97       	sbiw	r24, 0x01	; 1
    17ee:	f1 f7       	brne	.-4      	; 0x17ec <__vector_2+0x10c>
    17f0:	9a 83       	std	Y+2, r25	; 0x02
    17f2:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(30);
	if (PIND & (1 << PD3)) {
    17f4:	e0 e3       	ldi	r30, 0x30	; 48
    17f6:	f0 e0       	ldi	r31, 0x00	; 0
    17f8:	80 81       	ld	r24, Z
    17fa:	88 2f       	mov	r24, r24
    17fc:	90 e0       	ldi	r25, 0x00	; 0
    17fe:	88 70       	andi	r24, 0x08	; 8
    1800:	90 70       	andi	r25, 0x00	; 0
    1802:	00 97       	sbiw	r24, 0x00	; 0
    1804:	51 f0       	breq	.+20     	; 0x181a <__vector_2+0x13a>
		TCCR1B &= ~((1 << CS10) | (1 << CS12));
    1806:	ae e4       	ldi	r26, 0x4E	; 78
    1808:	b0 e0       	ldi	r27, 0x00	; 0
    180a:	ee e4       	ldi	r30, 0x4E	; 78
    180c:	f0 e0       	ldi	r31, 0x00	; 0
    180e:	80 81       	ld	r24, Z
    1810:	8a 7f       	andi	r24, 0xFA	; 250
    1812:	8c 93       	st	X, r24
		pause_flag = 1;
    1814:	81 e0       	ldi	r24, 0x01	; 1
    1816:	80 93 76 00 	sts	0x0076, r24
	}
	PORTD &= ~(1 << PD0);
    181a:	a2 e3       	ldi	r26, 0x32	; 50
    181c:	b0 e0       	ldi	r27, 0x00	; 0
    181e:	e2 e3       	ldi	r30, 0x32	; 50
    1820:	f0 e0       	ldi	r31, 0x00	; 0
    1822:	80 81       	ld	r24, Z
    1824:	8e 7f       	andi	r24, 0xFE	; 254
    1826:	8c 93       	st	X, r24
}
    1828:	2e 96       	adiw	r28, 0x0e	; 14
    182a:	de bf       	out	0x3e, r29	; 62
    182c:	cd bf       	out	0x3d, r28	; 61
    182e:	cf 91       	pop	r28
    1830:	df 91       	pop	r29
    1832:	ff 91       	pop	r31
    1834:	ef 91       	pop	r30
    1836:	bf 91       	pop	r27
    1838:	af 91       	pop	r26
    183a:	9f 91       	pop	r25
    183c:	8f 91       	pop	r24
    183e:	7f 91       	pop	r23
    1840:	6f 91       	pop	r22
    1842:	5f 91       	pop	r21
    1844:	4f 91       	pop	r20
    1846:	3f 91       	pop	r19
    1848:	2f 91       	pop	r18
    184a:	0f 90       	pop	r0
    184c:	0f be       	out	0x3f, r0	; 63
    184e:	0f 90       	pop	r0
    1850:	1f 90       	pop	r1
    1852:	18 95       	reti

00001854 <INT2_resume_init>:

void INT2_resume_init(void) {
    1854:	df 93       	push	r29
    1856:	cf 93       	push	r28
    1858:	cd b7       	in	r28, 0x3d	; 61
    185a:	de b7       	in	r29, 0x3e	; 62
	GICR |= (1 << INT2);
    185c:	ab e5       	ldi	r26, 0x5B	; 91
    185e:	b0 e0       	ldi	r27, 0x00	; 0
    1860:	eb e5       	ldi	r30, 0x5B	; 91
    1862:	f0 e0       	ldi	r31, 0x00	; 0
    1864:	80 81       	ld	r24, Z
    1866:	80 62       	ori	r24, 0x20	; 32
    1868:	8c 93       	st	X, r24
	MCUCSR &= ~(1 << ISC2);
    186a:	a4 e5       	ldi	r26, 0x54	; 84
    186c:	b0 e0       	ldi	r27, 0x00	; 0
    186e:	e4 e5       	ldi	r30, 0x54	; 84
    1870:	f0 e0       	ldi	r31, 0x00	; 0
    1872:	80 81       	ld	r24, Z
    1874:	8f 7b       	andi	r24, 0xBF	; 191
    1876:	8c 93       	st	X, r24
}
    1878:	cf 91       	pop	r28
    187a:	df 91       	pop	r29
    187c:	08 95       	ret

0000187e <__vector_3>:

ISR(INT2_vect) {
    187e:	1f 92       	push	r1
    1880:	0f 92       	push	r0
    1882:	0f b6       	in	r0, 0x3f	; 63
    1884:	0f 92       	push	r0
    1886:	11 24       	eor	r1, r1
    1888:	8f 93       	push	r24
    188a:	af 93       	push	r26
    188c:	bf 93       	push	r27
    188e:	ef 93       	push	r30
    1890:	ff 93       	push	r31
    1892:	df 93       	push	r29
    1894:	cf 93       	push	r28
    1896:	cd b7       	in	r28, 0x3d	; 61
    1898:	de b7       	in	r29, 0x3e	; 62
	pause_flag = 0;
    189a:	10 92 76 00 	sts	0x0076, r1
	TCCR1B |= (1 << CS12) | (1 << CS10);
    189e:	ae e4       	ldi	r26, 0x4E	; 78
    18a0:	b0 e0       	ldi	r27, 0x00	; 0
    18a2:	ee e4       	ldi	r30, 0x4E	; 78
    18a4:	f0 e0       	ldi	r31, 0x00	; 0
    18a6:	80 81       	ld	r24, Z
    18a8:	85 60       	ori	r24, 0x05	; 5
    18aa:	8c 93       	st	X, r24
}
    18ac:	cf 91       	pop	r28
    18ae:	df 91       	pop	r29
    18b0:	ff 91       	pop	r31
    18b2:	ef 91       	pop	r30
    18b4:	bf 91       	pop	r27
    18b6:	af 91       	pop	r26
    18b8:	8f 91       	pop	r24
    18ba:	0f 90       	pop	r0
    18bc:	0f be       	out	0x3f, r0	; 63
    18be:	0f 90       	pop	r0
    18c0:	1f 90       	pop	r1
    18c2:	18 95       	reti

000018c4 <main>:

int main(void) {
    18c4:	df 93       	push	r29
    18c6:	cf 93       	push	r28
    18c8:	cd b7       	in	r28, 0x3d	; 61
    18ca:	de b7       	in	r29, 0x3e	; 62
	DDRC |= 0x0F; PORTC &= 0xF0;
    18cc:	a4 e3       	ldi	r26, 0x34	; 52
    18ce:	b0 e0       	ldi	r27, 0x00	; 0
    18d0:	e4 e3       	ldi	r30, 0x34	; 52
    18d2:	f0 e0       	ldi	r31, 0x00	; 0
    18d4:	80 81       	ld	r24, Z
    18d6:	8f 60       	ori	r24, 0x0F	; 15
    18d8:	8c 93       	st	X, r24
    18da:	a5 e3       	ldi	r26, 0x35	; 53
    18dc:	b0 e0       	ldi	r27, 0x00	; 0
    18de:	e5 e3       	ldi	r30, 0x35	; 53
    18e0:	f0 e0       	ldi	r31, 0x00	; 0
    18e2:	80 81       	ld	r24, Z
    18e4:	80 7f       	andi	r24, 0xF0	; 240
    18e6:	8c 93       	st	X, r24
	DDRA |= 0x3F; PORTA = 0;
    18e8:	aa e3       	ldi	r26, 0x3A	; 58
    18ea:	b0 e0       	ldi	r27, 0x00	; 0
    18ec:	ea e3       	ldi	r30, 0x3A	; 58
    18ee:	f0 e0       	ldi	r31, 0x00	; 0
    18f0:	80 81       	ld	r24, Z
    18f2:	8f 63       	ori	r24, 0x3F	; 63
    18f4:	8c 93       	st	X, r24
    18f6:	eb e3       	ldi	r30, 0x3B	; 59
    18f8:	f0 e0       	ldi	r31, 0x00	; 0
    18fa:	10 82       	st	Z, r1

	DDRB = 0x00; PORTB = 0xFF;
    18fc:	e7 e3       	ldi	r30, 0x37	; 55
    18fe:	f0 e0       	ldi	r31, 0x00	; 0
    1900:	10 82       	st	Z, r1
    1902:	e8 e3       	ldi	r30, 0x38	; 56
    1904:	f0 e0       	ldi	r31, 0x00	; 0
    1906:	8f ef       	ldi	r24, 0xFF	; 255
    1908:	80 83       	st	Z, r24
	DDRD &= ~((1 << PD2) | (1 << PD3));
    190a:	a1 e3       	ldi	r26, 0x31	; 49
    190c:	b0 e0       	ldi	r27, 0x00	; 0
    190e:	e1 e3       	ldi	r30, 0x31	; 49
    1910:	f0 e0       	ldi	r31, 0x00	; 0
    1912:	80 81       	ld	r24, Z
    1914:	83 7f       	andi	r24, 0xF3	; 243
    1916:	8c 93       	st	X, r24
	PORTD |= (1 << PD2);
    1918:	a2 e3       	ldi	r26, 0x32	; 50
    191a:	b0 e0       	ldi	r27, 0x00	; 0
    191c:	e2 e3       	ldi	r30, 0x32	; 50
    191e:	f0 e0       	ldi	r31, 0x00	; 0
    1920:	80 81       	ld	r24, Z
    1922:	84 60       	ori	r24, 0x04	; 4
    1924:	8c 93       	st	X, r24

	DDRD |= (1 << PD0) | (1 << PD4) | (1 << PD5);
    1926:	a1 e3       	ldi	r26, 0x31	; 49
    1928:	b0 e0       	ldi	r27, 0x00	; 0
    192a:	e1 e3       	ldi	r30, 0x31	; 49
    192c:	f0 e0       	ldi	r31, 0x00	; 0
    192e:	80 81       	ld	r24, Z
    1930:	81 63       	ori	r24, 0x31	; 49
    1932:	8c 93       	st	X, r24
	PORTD &= ~((1 << PD0) | (1 << PD4) | (1 << PD5));
    1934:	a2 e3       	ldi	r26, 0x32	; 50
    1936:	b0 e0       	ldi	r27, 0x00	; 0
    1938:	e2 e3       	ldi	r30, 0x32	; 50
    193a:	f0 e0       	ldi	r31, 0x00	; 0
    193c:	80 81       	ld	r24, Z
    193e:	8e 7c       	andi	r24, 0xCE	; 206
    1940:	8c 93       	st	X, r24

	Timer1_init();
    1942:	0e 94 b8 0a 	call	0x1570	; 0x1570 <Timer1_init>
	INT0_reset_init();
    1946:	0e 94 f5 0a 	call	0x15ea	; 0x15ea <INT0_reset_init>
	INT1_pause_init();
    194a:	0e 94 5b 0b 	call	0x16b6	; 0x16b6 <INT1_pause_init>
	INT2_resume_init();
    194e:	0e 94 2a 0c 	call	0x1854	; 0x1854 <INT2_resume_init>
	SREG |= (1 << 7);
    1952:	af e5       	ldi	r26, 0x5F	; 95
    1954:	b0 e0       	ldi	r27, 0x00	; 0
    1956:	ef e5       	ldi	r30, 0x5F	; 95
    1958:	f0 e0       	ldi	r31, 0x00	; 0
    195a:	80 81       	ld	r24, Z
    195c:	80 68       	ori	r24, 0x80	; 128
    195e:	8c 93       	st	X, r24

	while (1) {
		show_segments();
    1960:	0e 94 a3 05 	call	0xb46	; 0xb46 <show_segments>

		if (ISR_countUp_flag) {
    1964:	80 91 77 00 	lds	r24, 0x0077
    1968:	88 23       	and	r24, r24
    196a:	21 f0       	breq	.+8      	; 0x1974 <main+0xb0>
			Timer_countUp();
    196c:	0e 94 3a 09 	call	0x1274	; 0x1274 <Timer_countUp>
			ISR_countUp_flag = 0;
    1970:	10 92 77 00 	sts	0x0077, r1
		}
		if (ISR_countDown_flag) {
    1974:	80 91 78 00 	lds	r24, 0x0078
    1978:	88 23       	and	r24, r24
    197a:	21 f0       	breq	.+8      	; 0x1984 <main+0xc0>
			Timer_countDown();
    197c:	0e 94 bc 09 	call	0x1378	; 0x1378 <Timer_countDown>
			ISR_countDown_flag = 0;
    1980:	10 92 78 00 	sts	0x0078, r1
		}


		if (!(PINB & (1 << PB7)) && pause_flag) {
    1984:	e6 e3       	ldi	r30, 0x36	; 54
    1986:	f0 e0       	ldi	r31, 0x00	; 0
    1988:	80 81       	ld	r24, Z
    198a:	88 23       	and	r24, r24
    198c:	a4 f0       	brlt	.+40     	; 0x19b6 <main+0xf2>
    198e:	80 91 76 00 	lds	r24, 0x0076
    1992:	88 23       	and	r24, r24
    1994:	81 f0       	breq	.+32     	; 0x19b6 <main+0xf2>
			timer_mode_flag ^= 1;
    1996:	80 91 68 00 	lds	r24, 0x0068
    199a:	91 e0       	ldi	r25, 0x01	; 1
    199c:	89 27       	eor	r24, r25
    199e:	80 93 68 00 	sts	0x0068, r24
			countdown_done_flag = 0;
    19a2:	10 92 79 00 	sts	0x0079, r1
    19a6:	02 c0       	rjmp	.+4      	; 0x19ac <main+0xe8>
			while (!(PINB & (1 << PB7))) show_segments();
    19a8:	0e 94 a3 05 	call	0xb46	; 0xb46 <show_segments>
    19ac:	e6 e3       	ldi	r30, 0x36	; 54
    19ae:	f0 e0       	ldi	r31, 0x00	; 0
    19b0:	80 81       	ld	r24, Z
    19b2:	88 23       	and	r24, r24
    19b4:	cc f7       	brge	.-14     	; 0x19a8 <main+0xe4>
		}


		if (timer_mode_flag) {
    19b6:	80 91 68 00 	lds	r24, 0x0068
    19ba:	88 23       	and	r24, r24
    19bc:	79 f0       	breq	.+30     	; 0x19dc <main+0x118>
			PORTD |= (1 << PD4); PORTD &= ~(1 << PD5);
    19be:	a2 e3       	ldi	r26, 0x32	; 50
    19c0:	b0 e0       	ldi	r27, 0x00	; 0
    19c2:	e2 e3       	ldi	r30, 0x32	; 50
    19c4:	f0 e0       	ldi	r31, 0x00	; 0
    19c6:	80 81       	ld	r24, Z
    19c8:	80 61       	ori	r24, 0x10	; 16
    19ca:	8c 93       	st	X, r24
    19cc:	a2 e3       	ldi	r26, 0x32	; 50
    19ce:	b0 e0       	ldi	r27, 0x00	; 0
    19d0:	e2 e3       	ldi	r30, 0x32	; 50
    19d2:	f0 e0       	ldi	r31, 0x00	; 0
    19d4:	80 81       	ld	r24, Z
    19d6:	8f 7d       	andi	r24, 0xDF	; 223
    19d8:	8c 93       	st	X, r24
    19da:	0e c0       	rjmp	.+28     	; 0x19f8 <main+0x134>
		} else {
			PORTD |= (1 << PD5); PORTD &= ~(1 << PD4);
    19dc:	a2 e3       	ldi	r26, 0x32	; 50
    19de:	b0 e0       	ldi	r27, 0x00	; 0
    19e0:	e2 e3       	ldi	r30, 0x32	; 50
    19e2:	f0 e0       	ldi	r31, 0x00	; 0
    19e4:	80 81       	ld	r24, Z
    19e6:	80 62       	ori	r24, 0x20	; 32
    19e8:	8c 93       	st	X, r24
    19ea:	a2 e3       	ldi	r26, 0x32	; 50
    19ec:	b0 e0       	ldi	r27, 0x00	; 0
    19ee:	e2 e3       	ldi	r30, 0x32	; 50
    19f0:	f0 e0       	ldi	r31, 0x00	; 0
    19f2:	80 81       	ld	r24, Z
    19f4:	8f 7e       	andi	r24, 0xEF	; 239
    19f6:	8c 93       	st	X, r24
		}


		if (!(PINB & (1 << PB0)) && pause_flag) {
    19f8:	e6 e3       	ldi	r30, 0x36	; 54
    19fa:	f0 e0       	ldi	r31, 0x00	; 0
    19fc:	80 81       	ld	r24, Z
    19fe:	88 2f       	mov	r24, r24
    1a00:	90 e0       	ldi	r25, 0x00	; 0
    1a02:	81 70       	andi	r24, 0x01	; 1
    1a04:	90 70       	andi	r25, 0x00	; 0
    1a06:	00 97       	sbiw	r24, 0x00	; 0
    1a08:	09 f0       	breq	.+2      	; 0x1a0c <main+0x148>
    1a0a:	43 c0       	rjmp	.+134    	; 0x1a92 <main+0x1ce>
    1a0c:	80 91 76 00 	lds	r24, 0x0076
    1a10:	88 23       	and	r24, r24
    1a12:	09 f4       	brne	.+2      	; 0x1a16 <main+0x152>
    1a14:	3e c0       	rjmp	.+124    	; 0x1a92 <main+0x1ce>
			if (hour0 > 0) hour0--;
    1a16:	80 91 72 00 	lds	r24, 0x0072
    1a1a:	90 91 73 00 	lds	r25, 0x0073
    1a1e:	00 97       	sbiw	r24, 0x00	; 0
    1a20:	51 f0       	breq	.+20     	; 0x1a36 <main+0x172>
    1a22:	80 91 72 00 	lds	r24, 0x0072
    1a26:	90 91 73 00 	lds	r25, 0x0073
    1a2a:	01 97       	sbiw	r24, 0x01	; 1
    1a2c:	90 93 73 00 	sts	0x0073, r25
    1a30:	80 93 72 00 	sts	0x0072, r24
    1a34:	25 c0       	rjmp	.+74     	; 0x1a80 <main+0x1bc>
			else if (hour1 > 0) { hour0 = 9; hour1--; }
    1a36:	80 91 74 00 	lds	r24, 0x0074
    1a3a:	90 91 75 00 	lds	r25, 0x0075
    1a3e:	00 97       	sbiw	r24, 0x00	; 0
    1a40:	81 f0       	breq	.+32     	; 0x1a62 <main+0x19e>
    1a42:	89 e0       	ldi	r24, 0x09	; 9
    1a44:	90 e0       	ldi	r25, 0x00	; 0
    1a46:	90 93 73 00 	sts	0x0073, r25
    1a4a:	80 93 72 00 	sts	0x0072, r24
    1a4e:	80 91 74 00 	lds	r24, 0x0074
    1a52:	90 91 75 00 	lds	r25, 0x0075
    1a56:	01 97       	sbiw	r24, 0x01	; 1
    1a58:	90 93 75 00 	sts	0x0075, r25
    1a5c:	80 93 74 00 	sts	0x0074, r24
    1a60:	0f c0       	rjmp	.+30     	; 0x1a80 <main+0x1bc>
			else { hour0 = 9; hour1 = 5; }
    1a62:	89 e0       	ldi	r24, 0x09	; 9
    1a64:	90 e0       	ldi	r25, 0x00	; 0
    1a66:	90 93 73 00 	sts	0x0073, r25
    1a6a:	80 93 72 00 	sts	0x0072, r24
    1a6e:	85 e0       	ldi	r24, 0x05	; 5
    1a70:	90 e0       	ldi	r25, 0x00	; 0
    1a72:	90 93 75 00 	sts	0x0075, r25
    1a76:	80 93 74 00 	sts	0x0074, r24
    1a7a:	02 c0       	rjmp	.+4      	; 0x1a80 <main+0x1bc>
			while (!(PINB & (1 << PB0))) show_segments();
    1a7c:	0e 94 a3 05 	call	0xb46	; 0xb46 <show_segments>
    1a80:	e6 e3       	ldi	r30, 0x36	; 54
    1a82:	f0 e0       	ldi	r31, 0x00	; 0
    1a84:	80 81       	ld	r24, Z
    1a86:	88 2f       	mov	r24, r24
    1a88:	90 e0       	ldi	r25, 0x00	; 0
    1a8a:	81 70       	andi	r24, 0x01	; 1
    1a8c:	90 70       	andi	r25, 0x00	; 0
    1a8e:	00 97       	sbiw	r24, 0x00	; 0
    1a90:	a9 f3       	breq	.-22     	; 0x1a7c <main+0x1b8>
		}

		if (!(PINB & (1 << PB1)) && pause_flag) {
    1a92:	e6 e3       	ldi	r30, 0x36	; 54
    1a94:	f0 e0       	ldi	r31, 0x00	; 0
    1a96:	80 81       	ld	r24, Z
    1a98:	88 2f       	mov	r24, r24
    1a9a:	90 e0       	ldi	r25, 0x00	; 0
    1a9c:	82 70       	andi	r24, 0x02	; 2
    1a9e:	90 70       	andi	r25, 0x00	; 0
    1aa0:	00 97       	sbiw	r24, 0x00	; 0
    1aa2:	09 f0       	breq	.+2      	; 0x1aa6 <main+0x1e2>
    1aa4:	43 c0       	rjmp	.+134    	; 0x1b2c <main+0x268>
    1aa6:	80 91 76 00 	lds	r24, 0x0076
    1aaa:	88 23       	and	r24, r24
    1aac:	09 f4       	brne	.+2      	; 0x1ab0 <main+0x1ec>
    1aae:	3e c0       	rjmp	.+124    	; 0x1b2c <main+0x268>
			if (hour0 < 9) hour0++;
    1ab0:	80 91 72 00 	lds	r24, 0x0072
    1ab4:	90 91 73 00 	lds	r25, 0x0073
    1ab8:	89 30       	cpi	r24, 0x09	; 9
    1aba:	91 05       	cpc	r25, r1
    1abc:	50 f4       	brcc	.+20     	; 0x1ad2 <main+0x20e>
    1abe:	80 91 72 00 	lds	r24, 0x0072
    1ac2:	90 91 73 00 	lds	r25, 0x0073
    1ac6:	01 96       	adiw	r24, 0x01	; 1
    1ac8:	90 93 73 00 	sts	0x0073, r25
    1acc:	80 93 72 00 	sts	0x0072, r24
    1ad0:	24 c0       	rjmp	.+72     	; 0x1b1a <main+0x256>
			else if (hour1 < 5) { hour0 = 0; hour1++; }
    1ad2:	80 91 74 00 	lds	r24, 0x0074
    1ad6:	90 91 75 00 	lds	r25, 0x0075
    1ada:	85 30       	cpi	r24, 0x05	; 5
    1adc:	91 05       	cpc	r25, r1
    1ade:	70 f4       	brcc	.+28     	; 0x1afc <main+0x238>
    1ae0:	10 92 73 00 	sts	0x0073, r1
    1ae4:	10 92 72 00 	sts	0x0072, r1
    1ae8:	80 91 74 00 	lds	r24, 0x0074
    1aec:	90 91 75 00 	lds	r25, 0x0075
    1af0:	01 96       	adiw	r24, 0x01	; 1
    1af2:	90 93 75 00 	sts	0x0075, r25
    1af6:	80 93 74 00 	sts	0x0074, r24
    1afa:	0f c0       	rjmp	.+30     	; 0x1b1a <main+0x256>
			else { hour0 = hour1 = 0; }
    1afc:	10 92 75 00 	sts	0x0075, r1
    1b00:	10 92 74 00 	sts	0x0074, r1
    1b04:	80 91 74 00 	lds	r24, 0x0074
    1b08:	90 91 75 00 	lds	r25, 0x0075
    1b0c:	90 93 73 00 	sts	0x0073, r25
    1b10:	80 93 72 00 	sts	0x0072, r24
    1b14:	02 c0       	rjmp	.+4      	; 0x1b1a <main+0x256>
			while (!(PINB & (1 << PB1))) show_segments();
    1b16:	0e 94 a3 05 	call	0xb46	; 0xb46 <show_segments>
    1b1a:	e6 e3       	ldi	r30, 0x36	; 54
    1b1c:	f0 e0       	ldi	r31, 0x00	; 0
    1b1e:	80 81       	ld	r24, Z
    1b20:	88 2f       	mov	r24, r24
    1b22:	90 e0       	ldi	r25, 0x00	; 0
    1b24:	82 70       	andi	r24, 0x02	; 2
    1b26:	90 70       	andi	r25, 0x00	; 0
    1b28:	00 97       	sbiw	r24, 0x00	; 0
    1b2a:	a9 f3       	breq	.-22     	; 0x1b16 <main+0x252>
		}

		if (!(PINB & (1 << PB3)) && pause_flag) {
    1b2c:	e6 e3       	ldi	r30, 0x36	; 54
    1b2e:	f0 e0       	ldi	r31, 0x00	; 0
    1b30:	80 81       	ld	r24, Z
    1b32:	88 2f       	mov	r24, r24
    1b34:	90 e0       	ldi	r25, 0x00	; 0
    1b36:	88 70       	andi	r24, 0x08	; 8
    1b38:	90 70       	andi	r25, 0x00	; 0
    1b3a:	00 97       	sbiw	r24, 0x00	; 0
    1b3c:	09 f0       	breq	.+2      	; 0x1b40 <main+0x27c>
    1b3e:	43 c0       	rjmp	.+134    	; 0x1bc6 <main+0x302>
    1b40:	80 91 76 00 	lds	r24, 0x0076
    1b44:	88 23       	and	r24, r24
    1b46:	09 f4       	brne	.+2      	; 0x1b4a <main+0x286>
    1b48:	3e c0       	rjmp	.+124    	; 0x1bc6 <main+0x302>
			if (min0 > 0) min0--;
    1b4a:	80 91 6e 00 	lds	r24, 0x006E
    1b4e:	90 91 6f 00 	lds	r25, 0x006F
    1b52:	00 97       	sbiw	r24, 0x00	; 0
    1b54:	51 f0       	breq	.+20     	; 0x1b6a <main+0x2a6>
    1b56:	80 91 6e 00 	lds	r24, 0x006E
    1b5a:	90 91 6f 00 	lds	r25, 0x006F
    1b5e:	01 97       	sbiw	r24, 0x01	; 1
    1b60:	90 93 6f 00 	sts	0x006F, r25
    1b64:	80 93 6e 00 	sts	0x006E, r24
    1b68:	25 c0       	rjmp	.+74     	; 0x1bb4 <main+0x2f0>
			else if (min1 > 0) { min0 = 9; min1--; }
    1b6a:	80 91 70 00 	lds	r24, 0x0070
    1b6e:	90 91 71 00 	lds	r25, 0x0071
    1b72:	00 97       	sbiw	r24, 0x00	; 0
    1b74:	81 f0       	breq	.+32     	; 0x1b96 <main+0x2d2>
    1b76:	89 e0       	ldi	r24, 0x09	; 9
    1b78:	90 e0       	ldi	r25, 0x00	; 0
    1b7a:	90 93 6f 00 	sts	0x006F, r25
    1b7e:	80 93 6e 00 	sts	0x006E, r24
    1b82:	80 91 70 00 	lds	r24, 0x0070
    1b86:	90 91 71 00 	lds	r25, 0x0071
    1b8a:	01 97       	sbiw	r24, 0x01	; 1
    1b8c:	90 93 71 00 	sts	0x0071, r25
    1b90:	80 93 70 00 	sts	0x0070, r24
    1b94:	0f c0       	rjmp	.+30     	; 0x1bb4 <main+0x2f0>
			else { min0 = 9; min1 = 5; }
    1b96:	89 e0       	ldi	r24, 0x09	; 9
    1b98:	90 e0       	ldi	r25, 0x00	; 0
    1b9a:	90 93 6f 00 	sts	0x006F, r25
    1b9e:	80 93 6e 00 	sts	0x006E, r24
    1ba2:	85 e0       	ldi	r24, 0x05	; 5
    1ba4:	90 e0       	ldi	r25, 0x00	; 0
    1ba6:	90 93 71 00 	sts	0x0071, r25
    1baa:	80 93 70 00 	sts	0x0070, r24
    1bae:	02 c0       	rjmp	.+4      	; 0x1bb4 <main+0x2f0>
			while (!(PINB & (1 << PB3))) show_segments();
    1bb0:	0e 94 a3 05 	call	0xb46	; 0xb46 <show_segments>
    1bb4:	e6 e3       	ldi	r30, 0x36	; 54
    1bb6:	f0 e0       	ldi	r31, 0x00	; 0
    1bb8:	80 81       	ld	r24, Z
    1bba:	88 2f       	mov	r24, r24
    1bbc:	90 e0       	ldi	r25, 0x00	; 0
    1bbe:	88 70       	andi	r24, 0x08	; 8
    1bc0:	90 70       	andi	r25, 0x00	; 0
    1bc2:	00 97       	sbiw	r24, 0x00	; 0
    1bc4:	a9 f3       	breq	.-22     	; 0x1bb0 <main+0x2ec>
		}

		if (!(PINB & (1 << PB4)) && pause_flag) {
    1bc6:	e6 e3       	ldi	r30, 0x36	; 54
    1bc8:	f0 e0       	ldi	r31, 0x00	; 0
    1bca:	80 81       	ld	r24, Z
    1bcc:	88 2f       	mov	r24, r24
    1bce:	90 e0       	ldi	r25, 0x00	; 0
    1bd0:	80 71       	andi	r24, 0x10	; 16
    1bd2:	90 70       	andi	r25, 0x00	; 0
    1bd4:	00 97       	sbiw	r24, 0x00	; 0
    1bd6:	09 f0       	breq	.+2      	; 0x1bda <main+0x316>
    1bd8:	43 c0       	rjmp	.+134    	; 0x1c60 <main+0x39c>
    1bda:	80 91 76 00 	lds	r24, 0x0076
    1bde:	88 23       	and	r24, r24
    1be0:	09 f4       	brne	.+2      	; 0x1be4 <main+0x320>
    1be2:	3e c0       	rjmp	.+124    	; 0x1c60 <main+0x39c>
			if (min0 < 9) min0++;
    1be4:	80 91 6e 00 	lds	r24, 0x006E
    1be8:	90 91 6f 00 	lds	r25, 0x006F
    1bec:	89 30       	cpi	r24, 0x09	; 9
    1bee:	91 05       	cpc	r25, r1
    1bf0:	50 f4       	brcc	.+20     	; 0x1c06 <main+0x342>
    1bf2:	80 91 6e 00 	lds	r24, 0x006E
    1bf6:	90 91 6f 00 	lds	r25, 0x006F
    1bfa:	01 96       	adiw	r24, 0x01	; 1
    1bfc:	90 93 6f 00 	sts	0x006F, r25
    1c00:	80 93 6e 00 	sts	0x006E, r24
    1c04:	24 c0       	rjmp	.+72     	; 0x1c4e <main+0x38a>
			else if (min1 < 5) { min0 = 0; min1++; }
    1c06:	80 91 70 00 	lds	r24, 0x0070
    1c0a:	90 91 71 00 	lds	r25, 0x0071
    1c0e:	85 30       	cpi	r24, 0x05	; 5
    1c10:	91 05       	cpc	r25, r1
    1c12:	70 f4       	brcc	.+28     	; 0x1c30 <main+0x36c>
    1c14:	10 92 6f 00 	sts	0x006F, r1
    1c18:	10 92 6e 00 	sts	0x006E, r1
    1c1c:	80 91 70 00 	lds	r24, 0x0070
    1c20:	90 91 71 00 	lds	r25, 0x0071
    1c24:	01 96       	adiw	r24, 0x01	; 1
    1c26:	90 93 71 00 	sts	0x0071, r25
    1c2a:	80 93 70 00 	sts	0x0070, r24
    1c2e:	0f c0       	rjmp	.+30     	; 0x1c4e <main+0x38a>
			else { min0 = min1 = 0; }
    1c30:	10 92 71 00 	sts	0x0071, r1
    1c34:	10 92 70 00 	sts	0x0070, r1
    1c38:	80 91 70 00 	lds	r24, 0x0070
    1c3c:	90 91 71 00 	lds	r25, 0x0071
    1c40:	90 93 6f 00 	sts	0x006F, r25
    1c44:	80 93 6e 00 	sts	0x006E, r24
    1c48:	02 c0       	rjmp	.+4      	; 0x1c4e <main+0x38a>
			while (!(PINB & (1 << PB4))) show_segments();
    1c4a:	0e 94 a3 05 	call	0xb46	; 0xb46 <show_segments>
    1c4e:	e6 e3       	ldi	r30, 0x36	; 54
    1c50:	f0 e0       	ldi	r31, 0x00	; 0
    1c52:	80 81       	ld	r24, Z
    1c54:	88 2f       	mov	r24, r24
    1c56:	90 e0       	ldi	r25, 0x00	; 0
    1c58:	80 71       	andi	r24, 0x10	; 16
    1c5a:	90 70       	andi	r25, 0x00	; 0
    1c5c:	00 97       	sbiw	r24, 0x00	; 0
    1c5e:	a9 f3       	breq	.-22     	; 0x1c4a <main+0x386>
		}

		if (!(PINB & (1 << PB5)) && pause_flag) {
    1c60:	e6 e3       	ldi	r30, 0x36	; 54
    1c62:	f0 e0       	ldi	r31, 0x00	; 0
    1c64:	80 81       	ld	r24, Z
    1c66:	88 2f       	mov	r24, r24
    1c68:	90 e0       	ldi	r25, 0x00	; 0
    1c6a:	80 72       	andi	r24, 0x20	; 32
    1c6c:	90 70       	andi	r25, 0x00	; 0
    1c6e:	00 97       	sbiw	r24, 0x00	; 0
    1c70:	09 f0       	breq	.+2      	; 0x1c74 <main+0x3b0>
    1c72:	43 c0       	rjmp	.+134    	; 0x1cfa <main+0x436>
    1c74:	80 91 76 00 	lds	r24, 0x0076
    1c78:	88 23       	and	r24, r24
    1c7a:	09 f4       	brne	.+2      	; 0x1c7e <main+0x3ba>
    1c7c:	3e c0       	rjmp	.+124    	; 0x1cfa <main+0x436>
			if (sec0 > 0) sec0--;
    1c7e:	80 91 6a 00 	lds	r24, 0x006A
    1c82:	90 91 6b 00 	lds	r25, 0x006B
    1c86:	00 97       	sbiw	r24, 0x00	; 0
    1c88:	51 f0       	breq	.+20     	; 0x1c9e <main+0x3da>
    1c8a:	80 91 6a 00 	lds	r24, 0x006A
    1c8e:	90 91 6b 00 	lds	r25, 0x006B
    1c92:	01 97       	sbiw	r24, 0x01	; 1
    1c94:	90 93 6b 00 	sts	0x006B, r25
    1c98:	80 93 6a 00 	sts	0x006A, r24
    1c9c:	25 c0       	rjmp	.+74     	; 0x1ce8 <main+0x424>
			else if (sec1 > 0) { sec0 = 9; sec1--; }
    1c9e:	80 91 6c 00 	lds	r24, 0x006C
    1ca2:	90 91 6d 00 	lds	r25, 0x006D
    1ca6:	00 97       	sbiw	r24, 0x00	; 0
    1ca8:	81 f0       	breq	.+32     	; 0x1cca <main+0x406>
    1caa:	89 e0       	ldi	r24, 0x09	; 9
    1cac:	90 e0       	ldi	r25, 0x00	; 0
    1cae:	90 93 6b 00 	sts	0x006B, r25
    1cb2:	80 93 6a 00 	sts	0x006A, r24
    1cb6:	80 91 6c 00 	lds	r24, 0x006C
    1cba:	90 91 6d 00 	lds	r25, 0x006D
    1cbe:	01 97       	sbiw	r24, 0x01	; 1
    1cc0:	90 93 6d 00 	sts	0x006D, r25
    1cc4:	80 93 6c 00 	sts	0x006C, r24
    1cc8:	0f c0       	rjmp	.+30     	; 0x1ce8 <main+0x424>
			else { sec0 = 9; sec1 = 5; }
    1cca:	89 e0       	ldi	r24, 0x09	; 9
    1ccc:	90 e0       	ldi	r25, 0x00	; 0
    1cce:	90 93 6b 00 	sts	0x006B, r25
    1cd2:	80 93 6a 00 	sts	0x006A, r24
    1cd6:	85 e0       	ldi	r24, 0x05	; 5
    1cd8:	90 e0       	ldi	r25, 0x00	; 0
    1cda:	90 93 6d 00 	sts	0x006D, r25
    1cde:	80 93 6c 00 	sts	0x006C, r24
    1ce2:	02 c0       	rjmp	.+4      	; 0x1ce8 <main+0x424>
			while (!(PINB & (1 << PB5))) show_segments();
    1ce4:	0e 94 a3 05 	call	0xb46	; 0xb46 <show_segments>
    1ce8:	e6 e3       	ldi	r30, 0x36	; 54
    1cea:	f0 e0       	ldi	r31, 0x00	; 0
    1cec:	80 81       	ld	r24, Z
    1cee:	88 2f       	mov	r24, r24
    1cf0:	90 e0       	ldi	r25, 0x00	; 0
    1cf2:	80 72       	andi	r24, 0x20	; 32
    1cf4:	90 70       	andi	r25, 0x00	; 0
    1cf6:	00 97       	sbiw	r24, 0x00	; 0
    1cf8:	a9 f3       	breq	.-22     	; 0x1ce4 <main+0x420>
		}

		if (!(PINB & (1 << PB6)) && pause_flag) {
    1cfa:	e6 e3       	ldi	r30, 0x36	; 54
    1cfc:	f0 e0       	ldi	r31, 0x00	; 0
    1cfe:	80 81       	ld	r24, Z
    1d00:	88 2f       	mov	r24, r24
    1d02:	90 e0       	ldi	r25, 0x00	; 0
    1d04:	80 74       	andi	r24, 0x40	; 64
    1d06:	90 70       	andi	r25, 0x00	; 0
    1d08:	00 97       	sbiw	r24, 0x00	; 0
    1d0a:	09 f0       	breq	.+2      	; 0x1d0e <main+0x44a>
    1d0c:	29 ce       	rjmp	.-942    	; 0x1960 <main+0x9c>
    1d0e:	80 91 76 00 	lds	r24, 0x0076
    1d12:	88 23       	and	r24, r24
    1d14:	09 f4       	brne	.+2      	; 0x1d18 <main+0x454>
    1d16:	24 ce       	rjmp	.-952    	; 0x1960 <main+0x9c>
			if (sec0 < 9) sec0++;
    1d18:	80 91 6a 00 	lds	r24, 0x006A
    1d1c:	90 91 6b 00 	lds	r25, 0x006B
    1d20:	89 30       	cpi	r24, 0x09	; 9
    1d22:	91 05       	cpc	r25, r1
    1d24:	50 f4       	brcc	.+20     	; 0x1d3a <main+0x476>
    1d26:	80 91 6a 00 	lds	r24, 0x006A
    1d2a:	90 91 6b 00 	lds	r25, 0x006B
    1d2e:	01 96       	adiw	r24, 0x01	; 1
    1d30:	90 93 6b 00 	sts	0x006B, r25
    1d34:	80 93 6a 00 	sts	0x006A, r24
    1d38:	24 c0       	rjmp	.+72     	; 0x1d82 <main+0x4be>
			else if (sec1 < 5) { sec0 = 0; sec1++; }
    1d3a:	80 91 6c 00 	lds	r24, 0x006C
    1d3e:	90 91 6d 00 	lds	r25, 0x006D
    1d42:	85 30       	cpi	r24, 0x05	; 5
    1d44:	91 05       	cpc	r25, r1
    1d46:	70 f4       	brcc	.+28     	; 0x1d64 <main+0x4a0>
    1d48:	10 92 6b 00 	sts	0x006B, r1
    1d4c:	10 92 6a 00 	sts	0x006A, r1
    1d50:	80 91 6c 00 	lds	r24, 0x006C
    1d54:	90 91 6d 00 	lds	r25, 0x006D
    1d58:	01 96       	adiw	r24, 0x01	; 1
    1d5a:	90 93 6d 00 	sts	0x006D, r25
    1d5e:	80 93 6c 00 	sts	0x006C, r24
    1d62:	0f c0       	rjmp	.+30     	; 0x1d82 <main+0x4be>
			else { sec0 = sec1 = 0; }
    1d64:	10 92 6d 00 	sts	0x006D, r1
    1d68:	10 92 6c 00 	sts	0x006C, r1
    1d6c:	80 91 6c 00 	lds	r24, 0x006C
    1d70:	90 91 6d 00 	lds	r25, 0x006D
    1d74:	90 93 6b 00 	sts	0x006B, r25
    1d78:	80 93 6a 00 	sts	0x006A, r24
    1d7c:	02 c0       	rjmp	.+4      	; 0x1d82 <main+0x4be>
			while (!(PINB & (1 << PB6))) show_segments();
    1d7e:	0e 94 a3 05 	call	0xb46	; 0xb46 <show_segments>
    1d82:	e6 e3       	ldi	r30, 0x36	; 54
    1d84:	f0 e0       	ldi	r31, 0x00	; 0
    1d86:	80 81       	ld	r24, Z
    1d88:	88 2f       	mov	r24, r24
    1d8a:	90 e0       	ldi	r25, 0x00	; 0
    1d8c:	80 74       	andi	r24, 0x40	; 64
    1d8e:	90 70       	andi	r25, 0x00	; 0
    1d90:	00 97       	sbiw	r24, 0x00	; 0
    1d92:	a9 f3       	breq	.-22     	; 0x1d7e <main+0x4ba>
    1d94:	e5 cd       	rjmp	.-1078   	; 0x1960 <main+0x9c>

00001d96 <__prologue_saves__>:
    1d96:	2f 92       	push	r2
    1d98:	3f 92       	push	r3
    1d9a:	4f 92       	push	r4
    1d9c:	5f 92       	push	r5
    1d9e:	6f 92       	push	r6
    1da0:	7f 92       	push	r7
    1da2:	8f 92       	push	r8
    1da4:	9f 92       	push	r9
    1da6:	af 92       	push	r10
    1da8:	bf 92       	push	r11
    1daa:	cf 92       	push	r12
    1dac:	df 92       	push	r13
    1dae:	ef 92       	push	r14
    1db0:	ff 92       	push	r15
    1db2:	0f 93       	push	r16
    1db4:	1f 93       	push	r17
    1db6:	cf 93       	push	r28
    1db8:	df 93       	push	r29
    1dba:	cd b7       	in	r28, 0x3d	; 61
    1dbc:	de b7       	in	r29, 0x3e	; 62
    1dbe:	ca 1b       	sub	r28, r26
    1dc0:	db 0b       	sbc	r29, r27
    1dc2:	0f b6       	in	r0, 0x3f	; 63
    1dc4:	f8 94       	cli
    1dc6:	de bf       	out	0x3e, r29	; 62
    1dc8:	0f be       	out	0x3f, r0	; 63
    1dca:	cd bf       	out	0x3d, r28	; 61
    1dcc:	09 94       	ijmp

00001dce <__epilogue_restores__>:
    1dce:	2a 88       	ldd	r2, Y+18	; 0x12
    1dd0:	39 88       	ldd	r3, Y+17	; 0x11
    1dd2:	48 88       	ldd	r4, Y+16	; 0x10
    1dd4:	5f 84       	ldd	r5, Y+15	; 0x0f
    1dd6:	6e 84       	ldd	r6, Y+14	; 0x0e
    1dd8:	7d 84       	ldd	r7, Y+13	; 0x0d
    1dda:	8c 84       	ldd	r8, Y+12	; 0x0c
    1ddc:	9b 84       	ldd	r9, Y+11	; 0x0b
    1dde:	aa 84       	ldd	r10, Y+10	; 0x0a
    1de0:	b9 84       	ldd	r11, Y+9	; 0x09
    1de2:	c8 84       	ldd	r12, Y+8	; 0x08
    1de4:	df 80       	ldd	r13, Y+7	; 0x07
    1de6:	ee 80       	ldd	r14, Y+6	; 0x06
    1de8:	fd 80       	ldd	r15, Y+5	; 0x05
    1dea:	0c 81       	ldd	r16, Y+4	; 0x04
    1dec:	1b 81       	ldd	r17, Y+3	; 0x03
    1dee:	aa 81       	ldd	r26, Y+2	; 0x02
    1df0:	b9 81       	ldd	r27, Y+1	; 0x01
    1df2:	ce 0f       	add	r28, r30
    1df4:	d1 1d       	adc	r29, r1
    1df6:	0f b6       	in	r0, 0x3f	; 63
    1df8:	f8 94       	cli
    1dfa:	de bf       	out	0x3e, r29	; 62
    1dfc:	0f be       	out	0x3f, r0	; 63
    1dfe:	cd bf       	out	0x3d, r28	; 61
    1e00:	ed 01       	movw	r28, r26
    1e02:	08 95       	ret

00001e04 <_exit>:
    1e04:	f8 94       	cli

00001e06 <__stop_program>:
    1e06:	ff cf       	rjmp	.-2      	; 0x1e06 <__stop_program>
